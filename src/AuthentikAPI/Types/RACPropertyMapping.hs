{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the types generated from the schema RACPropertyMapping
module AuthentikAPI.Types.RACPropertyMapping where

import qualified AuthentikAPI.Common
import AuthentikAPI.TypeAlias
import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | Defines the object schema located at @components.schemas.RACPropertyMapping@ in the specification.
--
-- RACPropertyMapping Serializer
data RACPropertyMapping = RACPropertyMapping
  { -- | component: Get object\'s component so that we know how to edit the object
    rACPropertyMappingComponent :: Data.Text.Internal.Text,
    -- | expression
    rACPropertyMappingExpression :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | managed: Objects that are managed by authentik. These objects are created and updated automatically. This flag only indicates that an object can be overwritten by migrations. You can still modify the objects via the API, but expect changes to be overwritten in a later update.
    rACPropertyMappingManaged :: (GHC.Maybe.Maybe (AuthentikAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | meta_model_name: Return internal model name
    rACPropertyMappingMetaModelName :: Data.Text.Internal.Text,
    -- | name
    rACPropertyMappingName :: Data.Text.Internal.Text,
    -- | pk
    rACPropertyMappingPk :: Data.Text.Internal.Text,
    -- | static_settings
    rACPropertyMappingStaticSettings :: Data.Aeson.Types.Internal.Object,
    -- | verbose_name: Return object\'s verbose_name
    rACPropertyMappingVerboseName :: Data.Text.Internal.Text,
    -- | verbose_name_plural: Return object\'s plural verbose_name
    rACPropertyMappingVerboseNamePlural :: Data.Text.Internal.Text
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON RACPropertyMapping where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["component" Data.Aeson.Types.ToJSON..= rACPropertyMappingComponent obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("expression" Data.Aeson.Types.ToJSON..=)) (rACPropertyMappingExpression obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("managed" Data.Aeson.Types.ToJSON..=)) (rACPropertyMappingManaged obj) : ["meta_model_name" Data.Aeson.Types.ToJSON..= rACPropertyMappingMetaModelName obj] : ["name" Data.Aeson.Types.ToJSON..= rACPropertyMappingName obj] : ["pk" Data.Aeson.Types.ToJSON..= rACPropertyMappingPk obj] : ["static_settings" Data.Aeson.Types.ToJSON..= rACPropertyMappingStaticSettings obj] : ["verbose_name" Data.Aeson.Types.ToJSON..= rACPropertyMappingVerboseName obj] : ["verbose_name_plural" Data.Aeson.Types.ToJSON..= rACPropertyMappingVerboseNamePlural obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["component" Data.Aeson.Types.ToJSON..= rACPropertyMappingComponent obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("expression" Data.Aeson.Types.ToJSON..=)) (rACPropertyMappingExpression obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("managed" Data.Aeson.Types.ToJSON..=)) (rACPropertyMappingManaged obj) : ["meta_model_name" Data.Aeson.Types.ToJSON..= rACPropertyMappingMetaModelName obj] : ["name" Data.Aeson.Types.ToJSON..= rACPropertyMappingName obj] : ["pk" Data.Aeson.Types.ToJSON..= rACPropertyMappingPk obj] : ["static_settings" Data.Aeson.Types.ToJSON..= rACPropertyMappingStaticSettings obj] : ["verbose_name" Data.Aeson.Types.ToJSON..= rACPropertyMappingVerboseName obj] : ["verbose_name_plural" Data.Aeson.Types.ToJSON..= rACPropertyMappingVerboseNamePlural obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON RACPropertyMapping where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "RACPropertyMapping" (\obj -> ((((((((GHC.Base.pure RACPropertyMapping GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "component")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "expression")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "managed")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "meta_model_name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "pk")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "static_settings")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "verbose_name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "verbose_name_plural"))

-- | Create a new 'RACPropertyMapping' with all required fields.
mkRACPropertyMapping ::
  -- | 'rACPropertyMappingComponent'
  Data.Text.Internal.Text ->
  -- | 'rACPropertyMappingMetaModelName'
  Data.Text.Internal.Text ->
  -- | 'rACPropertyMappingName'
  Data.Text.Internal.Text ->
  -- | 'rACPropertyMappingPk'
  Data.Text.Internal.Text ->
  -- | 'rACPropertyMappingStaticSettings'
  Data.Aeson.Types.Internal.Object ->
  -- | 'rACPropertyMappingVerboseName'
  Data.Text.Internal.Text ->
  -- | 'rACPropertyMappingVerboseNamePlural'
  Data.Text.Internal.Text ->
  RACPropertyMapping
mkRACPropertyMapping rACPropertyMappingComponent rACPropertyMappingMetaModelName rACPropertyMappingName rACPropertyMappingPk rACPropertyMappingStaticSettings rACPropertyMappingVerboseName rACPropertyMappingVerboseNamePlural =
  RACPropertyMapping
    { rACPropertyMappingComponent = rACPropertyMappingComponent,
      rACPropertyMappingExpression = GHC.Maybe.Nothing,
      rACPropertyMappingManaged = GHC.Maybe.Nothing,
      rACPropertyMappingMetaModelName = rACPropertyMappingMetaModelName,
      rACPropertyMappingName = rACPropertyMappingName,
      rACPropertyMappingPk = rACPropertyMappingPk,
      rACPropertyMappingStaticSettings = rACPropertyMappingStaticSettings,
      rACPropertyMappingVerboseName = rACPropertyMappingVerboseName,
      rACPropertyMappingVerboseNamePlural = rACPropertyMappingVerboseNamePlural
    }
