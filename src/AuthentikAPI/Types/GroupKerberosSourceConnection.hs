{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the types generated from the schema GroupKerberosSourceConnection
module AuthentikAPI.Types.GroupKerberosSourceConnection where

import qualified AuthentikAPI.Common
import AuthentikAPI.TypeAlias
import {-# SOURCE #-} AuthentikAPI.Types.PolicyEngineMode
import {-# SOURCE #-} AuthentikAPI.Types.Source
import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | Defines the object schema located at @components.schemas.GroupKerberosSourceConnection@ in the specification.
--
-- Group Source Connection
data GroupKerberosSourceConnection = GroupKerberosSourceConnection
  { -- | created
    groupKerberosSourceConnectionCreated :: Data.Text.Internal.Text,
    -- | group
    groupKerberosSourceConnectionGroup :: Data.Text.Internal.Text,
    -- | identifier
    groupKerberosSourceConnectionIdentifier :: Data.Text.Internal.Text,
    -- | last_updated
    groupKerberosSourceConnectionLastUpdated :: Data.Text.Internal.Text,
    -- | pk
    groupKerberosSourceConnectionPk :: GHC.Types.Int,
    -- | source
    groupKerberosSourceConnectionSource :: Data.Text.Internal.Text,
    -- | source_obj
    groupKerberosSourceConnectionSourceObj :: GroupKerberosSourceConnectionSourceObj'
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GroupKerberosSourceConnection where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["created" Data.Aeson.Types.ToJSON..= groupKerberosSourceConnectionCreated obj] : ["group" Data.Aeson.Types.ToJSON..= groupKerberosSourceConnectionGroup obj] : ["identifier" Data.Aeson.Types.ToJSON..= groupKerberosSourceConnectionIdentifier obj] : ["last_updated" Data.Aeson.Types.ToJSON..= groupKerberosSourceConnectionLastUpdated obj] : ["pk" Data.Aeson.Types.ToJSON..= groupKerberosSourceConnectionPk obj] : ["source" Data.Aeson.Types.ToJSON..= groupKerberosSourceConnectionSource obj] : ["source_obj" Data.Aeson.Types.ToJSON..= groupKerberosSourceConnectionSourceObj obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["created" Data.Aeson.Types.ToJSON..= groupKerberosSourceConnectionCreated obj] : ["group" Data.Aeson.Types.ToJSON..= groupKerberosSourceConnectionGroup obj] : ["identifier" Data.Aeson.Types.ToJSON..= groupKerberosSourceConnectionIdentifier obj] : ["last_updated" Data.Aeson.Types.ToJSON..= groupKerberosSourceConnectionLastUpdated obj] : ["pk" Data.Aeson.Types.ToJSON..= groupKerberosSourceConnectionPk obj] : ["source" Data.Aeson.Types.ToJSON..= groupKerberosSourceConnectionSource obj] : ["source_obj" Data.Aeson.Types.ToJSON..= groupKerberosSourceConnectionSourceObj obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON GroupKerberosSourceConnection where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GroupKerberosSourceConnection" (\obj -> ((((((GHC.Base.pure GroupKerberosSourceConnection GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "created")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "group")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "identifier")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "last_updated")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "pk")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "source")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "source_obj"))

-- | Create a new 'GroupKerberosSourceConnection' with all required fields.
mkGroupKerberosSourceConnection ::
  -- | 'groupKerberosSourceConnectionCreated'
  Data.Text.Internal.Text ->
  -- | 'groupKerberosSourceConnectionGroup'
  Data.Text.Internal.Text ->
  -- | 'groupKerberosSourceConnectionIdentifier'
  Data.Text.Internal.Text ->
  -- | 'groupKerberosSourceConnectionLastUpdated'
  Data.Text.Internal.Text ->
  -- | 'groupKerberosSourceConnectionPk'
  GHC.Types.Int ->
  -- | 'groupKerberosSourceConnectionSource'
  Data.Text.Internal.Text ->
  -- | 'groupKerberosSourceConnectionSourceObj'
  GroupKerberosSourceConnectionSourceObj' ->
  GroupKerberosSourceConnection
mkGroupKerberosSourceConnection groupKerberosSourceConnectionCreated groupKerberosSourceConnectionGroup groupKerberosSourceConnectionIdentifier groupKerberosSourceConnectionLastUpdated groupKerberosSourceConnectionPk groupKerberosSourceConnectionSource groupKerberosSourceConnectionSourceObj =
  GroupKerberosSourceConnection
    { groupKerberosSourceConnectionCreated = groupKerberosSourceConnectionCreated,
      groupKerberosSourceConnectionGroup = groupKerberosSourceConnectionGroup,
      groupKerberosSourceConnectionIdentifier = groupKerberosSourceConnectionIdentifier,
      groupKerberosSourceConnectionLastUpdated = groupKerberosSourceConnectionLastUpdated,
      groupKerberosSourceConnectionPk = groupKerberosSourceConnectionPk,
      groupKerberosSourceConnectionSource = groupKerberosSourceConnectionSource,
      groupKerberosSourceConnectionSourceObj = groupKerberosSourceConnectionSourceObj
    }

-- | Defines the object schema located at @components.schemas.GroupKerberosSourceConnection.properties.source_obj.allOf@ in the specification.
data GroupKerberosSourceConnectionSourceObj' = GroupKerberosSourceConnectionSourceObj'
  { -- | authentication_flow: Flow to use when authenticating existing users.
    groupKerberosSourceConnectionSourceObj'AuthenticationFlow :: (GHC.Maybe.Maybe (AuthentikAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | component: Get object component so that we know how to edit the object
    groupKerberosSourceConnectionSourceObj'Component :: Data.Text.Internal.Text,
    -- | enabled
    groupKerberosSourceConnectionSourceObj'Enabled :: (GHC.Maybe.Maybe GHC.Types.Bool),
    -- | enrollment_flow: Flow to use when enrolling new users.
    groupKerberosSourceConnectionSourceObj'EnrollmentFlow :: (GHC.Maybe.Maybe (AuthentikAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | group_property_mappings
    groupKerberosSourceConnectionSourceObj'GroupPropertyMappings :: (GHC.Maybe.Maybe [Data.Text.Internal.Text]),
    -- | icon: Get the URL to the Icon. If the name is \/static or
    -- starts with http it is returned as-is
    groupKerberosSourceConnectionSourceObj'Icon :: (AuthentikAPI.Common.Nullable Data.Text.Internal.Text),
    -- | managed: Objects that are managed by authentik. These objects are created and updated automatically. This flag only indicates that an object can be overwritten by migrations. You can still modify the objects via the API, but expect changes to be overwritten in a later update.
    groupKerberosSourceConnectionSourceObj'Managed :: (AuthentikAPI.Common.Nullable Data.Text.Internal.Text),
    -- | meta_model_name: Return internal model name
    groupKerberosSourceConnectionSourceObj'MetaModelName :: Data.Text.Internal.Text,
    -- | name: Source\'s display Name.
    groupKerberosSourceConnectionSourceObj'Name :: Data.Text.Internal.Text,
    -- | pk
    groupKerberosSourceConnectionSourceObj'Pk :: Data.Text.Internal.Text,
    -- | policy_engine_mode
    groupKerberosSourceConnectionSourceObj'PolicyEngineMode :: (GHC.Maybe.Maybe PolicyEngineMode),
    -- | slug: Internal source name, used in URLs.
    --
    -- Constraints:
    --
    -- * Maximum length of 50
    -- * Must match pattern \'^[-a-zA-Z0-9_]+\$\'
    groupKerberosSourceConnectionSourceObj'Slug :: Data.Text.Internal.Text,
    -- | user_matching_mode: How the source determines if an existing user should be authenticated or a new user enrolled.
    groupKerberosSourceConnectionSourceObj'UserMatchingMode :: (GHC.Maybe.Maybe Data.Aeson.Types.Internal.Object),
    -- | user_path_template
    groupKerberosSourceConnectionSourceObj'UserPathTemplate :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | user_property_mappings
    groupKerberosSourceConnectionSourceObj'UserPropertyMappings :: (GHC.Maybe.Maybe [Data.Text.Internal.Text]),
    -- | verbose_name: Return object\'s verbose_name
    groupKerberosSourceConnectionSourceObj'VerboseName :: Data.Text.Internal.Text,
    -- | verbose_name_plural: Return object\'s plural verbose_name
    groupKerberosSourceConnectionSourceObj'VerboseNamePlural :: Data.Text.Internal.Text
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GroupKerberosSourceConnectionSourceObj' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("authentication_flow" Data.Aeson.Types.ToJSON..=)) (groupKerberosSourceConnectionSourceObj'AuthenticationFlow obj) : ["component" Data.Aeson.Types.ToJSON..= groupKerberosSourceConnectionSourceObj'Component obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("enabled" Data.Aeson.Types.ToJSON..=)) (groupKerberosSourceConnectionSourceObj'Enabled obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("enrollment_flow" Data.Aeson.Types.ToJSON..=)) (groupKerberosSourceConnectionSourceObj'EnrollmentFlow obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("group_property_mappings" Data.Aeson.Types.ToJSON..=)) (groupKerberosSourceConnectionSourceObj'GroupPropertyMappings obj) : ["icon" Data.Aeson.Types.ToJSON..= groupKerberosSourceConnectionSourceObj'Icon obj] : ["managed" Data.Aeson.Types.ToJSON..= groupKerberosSourceConnectionSourceObj'Managed obj] : ["meta_model_name" Data.Aeson.Types.ToJSON..= groupKerberosSourceConnectionSourceObj'MetaModelName obj] : ["name" Data.Aeson.Types.ToJSON..= groupKerberosSourceConnectionSourceObj'Name obj] : ["pk" Data.Aeson.Types.ToJSON..= groupKerberosSourceConnectionSourceObj'Pk obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("policy_engine_mode" Data.Aeson.Types.ToJSON..=)) (groupKerberosSourceConnectionSourceObj'PolicyEngineMode obj) : ["slug" Data.Aeson.Types.ToJSON..= groupKerberosSourceConnectionSourceObj'Slug obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("user_matching_mode" Data.Aeson.Types.ToJSON..=)) (groupKerberosSourceConnectionSourceObj'UserMatchingMode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("user_path_template" Data.Aeson.Types.ToJSON..=)) (groupKerberosSourceConnectionSourceObj'UserPathTemplate obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("user_property_mappings" Data.Aeson.Types.ToJSON..=)) (groupKerberosSourceConnectionSourceObj'UserPropertyMappings obj) : ["verbose_name" Data.Aeson.Types.ToJSON..= groupKerberosSourceConnectionSourceObj'VerboseName obj] : ["verbose_name_plural" Data.Aeson.Types.ToJSON..= groupKerberosSourceConnectionSourceObj'VerboseNamePlural obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("authentication_flow" Data.Aeson.Types.ToJSON..=)) (groupKerberosSourceConnectionSourceObj'AuthenticationFlow obj) : ["component" Data.Aeson.Types.ToJSON..= groupKerberosSourceConnectionSourceObj'Component obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("enabled" Data.Aeson.Types.ToJSON..=)) (groupKerberosSourceConnectionSourceObj'Enabled obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("enrollment_flow" Data.Aeson.Types.ToJSON..=)) (groupKerberosSourceConnectionSourceObj'EnrollmentFlow obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("group_property_mappings" Data.Aeson.Types.ToJSON..=)) (groupKerberosSourceConnectionSourceObj'GroupPropertyMappings obj) : ["icon" Data.Aeson.Types.ToJSON..= groupKerberosSourceConnectionSourceObj'Icon obj] : ["managed" Data.Aeson.Types.ToJSON..= groupKerberosSourceConnectionSourceObj'Managed obj] : ["meta_model_name" Data.Aeson.Types.ToJSON..= groupKerberosSourceConnectionSourceObj'MetaModelName obj] : ["name" Data.Aeson.Types.ToJSON..= groupKerberosSourceConnectionSourceObj'Name obj] : ["pk" Data.Aeson.Types.ToJSON..= groupKerberosSourceConnectionSourceObj'Pk obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("policy_engine_mode" Data.Aeson.Types.ToJSON..=)) (groupKerberosSourceConnectionSourceObj'PolicyEngineMode obj) : ["slug" Data.Aeson.Types.ToJSON..= groupKerberosSourceConnectionSourceObj'Slug obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("user_matching_mode" Data.Aeson.Types.ToJSON..=)) (groupKerberosSourceConnectionSourceObj'UserMatchingMode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("user_path_template" Data.Aeson.Types.ToJSON..=)) (groupKerberosSourceConnectionSourceObj'UserPathTemplate obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("user_property_mappings" Data.Aeson.Types.ToJSON..=)) (groupKerberosSourceConnectionSourceObj'UserPropertyMappings obj) : ["verbose_name" Data.Aeson.Types.ToJSON..= groupKerberosSourceConnectionSourceObj'VerboseName obj] : ["verbose_name_plural" Data.Aeson.Types.ToJSON..= groupKerberosSourceConnectionSourceObj'VerboseNamePlural obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON GroupKerberosSourceConnectionSourceObj' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GroupKerberosSourceConnectionSourceObj'" (\obj -> ((((((((((((((((GHC.Base.pure GroupKerberosSourceConnectionSourceObj' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "authentication_flow")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "component")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "enabled")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "enrollment_flow")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "group_property_mappings")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "icon")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "managed")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "meta_model_name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "pk")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "policy_engine_mode")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "slug")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "user_matching_mode")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "user_path_template")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "user_property_mappings")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "verbose_name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "verbose_name_plural"))

-- | Create a new 'GroupKerberosSourceConnectionSourceObj'' with all required fields.
mkGroupKerberosSourceConnectionSourceObj' ::
  -- | 'groupKerberosSourceConnectionSourceObj'Component'
  Data.Text.Internal.Text ->
  -- | 'groupKerberosSourceConnectionSourceObj'Icon'
  AuthentikAPI.Common.Nullable Data.Text.Internal.Text ->
  -- | 'groupKerberosSourceConnectionSourceObj'Managed'
  AuthentikAPI.Common.Nullable Data.Text.Internal.Text ->
  -- | 'groupKerberosSourceConnectionSourceObj'MetaModelName'
  Data.Text.Internal.Text ->
  -- | 'groupKerberosSourceConnectionSourceObj'Name'
  Data.Text.Internal.Text ->
  -- | 'groupKerberosSourceConnectionSourceObj'Pk'
  Data.Text.Internal.Text ->
  -- | 'groupKerberosSourceConnectionSourceObj'Slug'
  Data.Text.Internal.Text ->
  -- | 'groupKerberosSourceConnectionSourceObj'VerboseName'
  Data.Text.Internal.Text ->
  -- | 'groupKerberosSourceConnectionSourceObj'VerboseNamePlural'
  Data.Text.Internal.Text ->
  GroupKerberosSourceConnectionSourceObj'
mkGroupKerberosSourceConnectionSourceObj' groupKerberosSourceConnectionSourceObj'Component groupKerberosSourceConnectionSourceObj'Icon groupKerberosSourceConnectionSourceObj'Managed groupKerberosSourceConnectionSourceObj'MetaModelName groupKerberosSourceConnectionSourceObj'Name groupKerberosSourceConnectionSourceObj'Pk groupKerberosSourceConnectionSourceObj'Slug groupKerberosSourceConnectionSourceObj'VerboseName groupKerberosSourceConnectionSourceObj'VerboseNamePlural =
  GroupKerberosSourceConnectionSourceObj'
    { groupKerberosSourceConnectionSourceObj'AuthenticationFlow = GHC.Maybe.Nothing,
      groupKerberosSourceConnectionSourceObj'Component = groupKerberosSourceConnectionSourceObj'Component,
      groupKerberosSourceConnectionSourceObj'Enabled = GHC.Maybe.Nothing,
      groupKerberosSourceConnectionSourceObj'EnrollmentFlow = GHC.Maybe.Nothing,
      groupKerberosSourceConnectionSourceObj'GroupPropertyMappings = GHC.Maybe.Nothing,
      groupKerberosSourceConnectionSourceObj'Icon = groupKerberosSourceConnectionSourceObj'Icon,
      groupKerberosSourceConnectionSourceObj'Managed = groupKerberosSourceConnectionSourceObj'Managed,
      groupKerberosSourceConnectionSourceObj'MetaModelName = groupKerberosSourceConnectionSourceObj'MetaModelName,
      groupKerberosSourceConnectionSourceObj'Name = groupKerberosSourceConnectionSourceObj'Name,
      groupKerberosSourceConnectionSourceObj'Pk = groupKerberosSourceConnectionSourceObj'Pk,
      groupKerberosSourceConnectionSourceObj'PolicyEngineMode = GHC.Maybe.Nothing,
      groupKerberosSourceConnectionSourceObj'Slug = groupKerberosSourceConnectionSourceObj'Slug,
      groupKerberosSourceConnectionSourceObj'UserMatchingMode = GHC.Maybe.Nothing,
      groupKerberosSourceConnectionSourceObj'UserPathTemplate = GHC.Maybe.Nothing,
      groupKerberosSourceConnectionSourceObj'UserPropertyMappings = GHC.Maybe.Nothing,
      groupKerberosSourceConnectionSourceObj'VerboseName = groupKerberosSourceConnectionSourceObj'VerboseName,
      groupKerberosSourceConnectionSourceObj'VerboseNamePlural = groupKerberosSourceConnectionSourceObj'VerboseNamePlural
    }
