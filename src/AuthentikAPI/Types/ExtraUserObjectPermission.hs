{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the types generated from the schema ExtraUserObjectPermission
module AuthentikAPI.Types.ExtraUserObjectPermission where

import qualified AuthentikAPI.Common
import AuthentikAPI.TypeAlias
import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | Defines the object schema located at @components.schemas.ExtraUserObjectPermission@ in the specification.
--
-- User permission with additional object-related data
data ExtraUserObjectPermission = ExtraUserObjectPermission
  { -- | app_label
    extraUserObjectPermissionAppLabel :: Data.Text.Internal.Text,
    -- | app_label_verbose: Get app label from permission\'s model
    extraUserObjectPermissionAppLabelVerbose :: Data.Text.Internal.Text,
    -- | codename
    extraUserObjectPermissionCodename :: Data.Text.Internal.Text,
    -- | id
    extraUserObjectPermissionId :: GHC.Types.Int,
    -- | model
    extraUserObjectPermissionModel :: Data.Text.Internal.Text,
    -- | model_verbose: Get model label from permission\'s model
    extraUserObjectPermissionModelVerbose :: Data.Text.Internal.Text,
    -- | name
    extraUserObjectPermissionName :: Data.Text.Internal.Text,
    -- | object_description: Get model description from attached model. This operation takes at least
    -- one additional query, and the description is only shown if the user\/role has the
    -- view_ permission on the object
    extraUserObjectPermissionObjectDescription :: (AuthentikAPI.Common.Nullable Data.Text.Internal.Text),
    -- | object_pk
    extraUserObjectPermissionObjectPk :: Data.Text.Internal.Text
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON ExtraUserObjectPermission where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["app_label" Data.Aeson.Types.ToJSON..= extraUserObjectPermissionAppLabel obj] : ["app_label_verbose" Data.Aeson.Types.ToJSON..= extraUserObjectPermissionAppLabelVerbose obj] : ["codename" Data.Aeson.Types.ToJSON..= extraUserObjectPermissionCodename obj] : ["id" Data.Aeson.Types.ToJSON..= extraUserObjectPermissionId obj] : ["model" Data.Aeson.Types.ToJSON..= extraUserObjectPermissionModel obj] : ["model_verbose" Data.Aeson.Types.ToJSON..= extraUserObjectPermissionModelVerbose obj] : ["name" Data.Aeson.Types.ToJSON..= extraUserObjectPermissionName obj] : ["object_description" Data.Aeson.Types.ToJSON..= extraUserObjectPermissionObjectDescription obj] : ["object_pk" Data.Aeson.Types.ToJSON..= extraUserObjectPermissionObjectPk obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["app_label" Data.Aeson.Types.ToJSON..= extraUserObjectPermissionAppLabel obj] : ["app_label_verbose" Data.Aeson.Types.ToJSON..= extraUserObjectPermissionAppLabelVerbose obj] : ["codename" Data.Aeson.Types.ToJSON..= extraUserObjectPermissionCodename obj] : ["id" Data.Aeson.Types.ToJSON..= extraUserObjectPermissionId obj] : ["model" Data.Aeson.Types.ToJSON..= extraUserObjectPermissionModel obj] : ["model_verbose" Data.Aeson.Types.ToJSON..= extraUserObjectPermissionModelVerbose obj] : ["name" Data.Aeson.Types.ToJSON..= extraUserObjectPermissionName obj] : ["object_description" Data.Aeson.Types.ToJSON..= extraUserObjectPermissionObjectDescription obj] : ["object_pk" Data.Aeson.Types.ToJSON..= extraUserObjectPermissionObjectPk obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON ExtraUserObjectPermission where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "ExtraUserObjectPermission" (\obj -> ((((((((GHC.Base.pure ExtraUserObjectPermission GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "app_label")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "app_label_verbose")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "codename")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "model")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "model_verbose")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "object_description")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "object_pk"))

-- | Create a new 'ExtraUserObjectPermission' with all required fields.
mkExtraUserObjectPermission ::
  -- | 'extraUserObjectPermissionAppLabel'
  Data.Text.Internal.Text ->
  -- | 'extraUserObjectPermissionAppLabelVerbose'
  Data.Text.Internal.Text ->
  -- | 'extraUserObjectPermissionCodename'
  Data.Text.Internal.Text ->
  -- | 'extraUserObjectPermissionId'
  GHC.Types.Int ->
  -- | 'extraUserObjectPermissionModel'
  Data.Text.Internal.Text ->
  -- | 'extraUserObjectPermissionModelVerbose'
  Data.Text.Internal.Text ->
  -- | 'extraUserObjectPermissionName'
  Data.Text.Internal.Text ->
  -- | 'extraUserObjectPermissionObjectDescription'
  AuthentikAPI.Common.Nullable Data.Text.Internal.Text ->
  -- | 'extraUserObjectPermissionObjectPk'
  Data.Text.Internal.Text ->
  ExtraUserObjectPermission
mkExtraUserObjectPermission extraUserObjectPermissionAppLabel extraUserObjectPermissionAppLabelVerbose extraUserObjectPermissionCodename extraUserObjectPermissionId extraUserObjectPermissionModel extraUserObjectPermissionModelVerbose extraUserObjectPermissionName extraUserObjectPermissionObjectDescription extraUserObjectPermissionObjectPk =
  ExtraUserObjectPermission
    { extraUserObjectPermissionAppLabel = extraUserObjectPermissionAppLabel,
      extraUserObjectPermissionAppLabelVerbose = extraUserObjectPermissionAppLabelVerbose,
      extraUserObjectPermissionCodename = extraUserObjectPermissionCodename,
      extraUserObjectPermissionId = extraUserObjectPermissionId,
      extraUserObjectPermissionModel = extraUserObjectPermissionModel,
      extraUserObjectPermissionModelVerbose = extraUserObjectPermissionModelVerbose,
      extraUserObjectPermissionName = extraUserObjectPermissionName,
      extraUserObjectPermissionObjectDescription = extraUserObjectPermissionObjectDescription,
      extraUserObjectPermissionObjectPk = extraUserObjectPermissionObjectPk
    }
