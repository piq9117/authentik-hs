{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the types generated from the schema CurrentBrand
module AuthentikAPI.Types.CurrentBrand where

import qualified AuthentikAPI.Common
import AuthentikAPI.TypeAlias
import {-# SOURCE #-} AuthentikAPI.Types.FooterLink
import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | Defines the object schema located at @components.schemas.CurrentBrand@ in the specification.
--
-- Partial brand information for styling
data CurrentBrand = CurrentBrand
  { -- | branding_custom_css
    currentBrandBrandingCustomCss :: Data.Text.Internal.Text,
    -- | branding_favicon
    currentBrandBrandingFavicon :: Data.Text.Internal.Text,
    -- | branding_logo
    currentBrandBrandingLogo :: Data.Text.Internal.Text,
    -- | branding_title
    currentBrandBrandingTitle :: Data.Text.Internal.Text,
    -- | default_locale
    currentBrandDefaultLocale :: Data.Text.Internal.Text,
    -- | flow_authentication
    currentBrandFlowAuthentication :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | flow_device_code
    currentBrandFlowDeviceCode :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | flow_invalidation
    currentBrandFlowInvalidation :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | flow_recovery
    currentBrandFlowRecovery :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | flow_unenrollment
    currentBrandFlowUnenrollment :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | flow_user_settings
    currentBrandFlowUserSettings :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | matched_domain
    currentBrandMatchedDomain :: Data.Text.Internal.Text,
    -- | ui_footer_links
    currentBrandUiFooterLinks :: [FooterLink],
    -- | ui_theme
    currentBrandUiTheme :: Data.Aeson.Types.Internal.Object
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON CurrentBrand where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["branding_custom_css" Data.Aeson.Types.ToJSON..= currentBrandBrandingCustomCss obj] : ["branding_favicon" Data.Aeson.Types.ToJSON..= currentBrandBrandingFavicon obj] : ["branding_logo" Data.Aeson.Types.ToJSON..= currentBrandBrandingLogo obj] : ["branding_title" Data.Aeson.Types.ToJSON..= currentBrandBrandingTitle obj] : ["default_locale" Data.Aeson.Types.ToJSON..= currentBrandDefaultLocale obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("flow_authentication" Data.Aeson.Types.ToJSON..=)) (currentBrandFlowAuthentication obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("flow_device_code" Data.Aeson.Types.ToJSON..=)) (currentBrandFlowDeviceCode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("flow_invalidation" Data.Aeson.Types.ToJSON..=)) (currentBrandFlowInvalidation obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("flow_recovery" Data.Aeson.Types.ToJSON..=)) (currentBrandFlowRecovery obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("flow_unenrollment" Data.Aeson.Types.ToJSON..=)) (currentBrandFlowUnenrollment obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("flow_user_settings" Data.Aeson.Types.ToJSON..=)) (currentBrandFlowUserSettings obj) : ["matched_domain" Data.Aeson.Types.ToJSON..= currentBrandMatchedDomain obj] : ["ui_footer_links" Data.Aeson.Types.ToJSON..= currentBrandUiFooterLinks obj] : ["ui_theme" Data.Aeson.Types.ToJSON..= currentBrandUiTheme obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["branding_custom_css" Data.Aeson.Types.ToJSON..= currentBrandBrandingCustomCss obj] : ["branding_favicon" Data.Aeson.Types.ToJSON..= currentBrandBrandingFavicon obj] : ["branding_logo" Data.Aeson.Types.ToJSON..= currentBrandBrandingLogo obj] : ["branding_title" Data.Aeson.Types.ToJSON..= currentBrandBrandingTitle obj] : ["default_locale" Data.Aeson.Types.ToJSON..= currentBrandDefaultLocale obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("flow_authentication" Data.Aeson.Types.ToJSON..=)) (currentBrandFlowAuthentication obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("flow_device_code" Data.Aeson.Types.ToJSON..=)) (currentBrandFlowDeviceCode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("flow_invalidation" Data.Aeson.Types.ToJSON..=)) (currentBrandFlowInvalidation obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("flow_recovery" Data.Aeson.Types.ToJSON..=)) (currentBrandFlowRecovery obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("flow_unenrollment" Data.Aeson.Types.ToJSON..=)) (currentBrandFlowUnenrollment obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("flow_user_settings" Data.Aeson.Types.ToJSON..=)) (currentBrandFlowUserSettings obj) : ["matched_domain" Data.Aeson.Types.ToJSON..= currentBrandMatchedDomain obj] : ["ui_footer_links" Data.Aeson.Types.ToJSON..= currentBrandUiFooterLinks obj] : ["ui_theme" Data.Aeson.Types.ToJSON..= currentBrandUiTheme obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON CurrentBrand where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "CurrentBrand" (\obj -> (((((((((((((GHC.Base.pure CurrentBrand GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "branding_custom_css")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "branding_favicon")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "branding_logo")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "branding_title")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "default_locale")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "flow_authentication")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "flow_device_code")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "flow_invalidation")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "flow_recovery")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "flow_unenrollment")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "flow_user_settings")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "matched_domain")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "ui_footer_links")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "ui_theme"))

-- | Create a new 'CurrentBrand' with all required fields.
mkCurrentBrand ::
  -- | 'currentBrandBrandingCustomCss'
  Data.Text.Internal.Text ->
  -- | 'currentBrandBrandingFavicon'
  Data.Text.Internal.Text ->
  -- | 'currentBrandBrandingLogo'
  Data.Text.Internal.Text ->
  -- | 'currentBrandBrandingTitle'
  Data.Text.Internal.Text ->
  -- | 'currentBrandDefaultLocale'
  Data.Text.Internal.Text ->
  -- | 'currentBrandMatchedDomain'
  Data.Text.Internal.Text ->
  -- | 'currentBrandUiFooterLinks'
  [FooterLink] ->
  -- | 'currentBrandUiTheme'
  Data.Aeson.Types.Internal.Object ->
  CurrentBrand
mkCurrentBrand currentBrandBrandingCustomCss currentBrandBrandingFavicon currentBrandBrandingLogo currentBrandBrandingTitle currentBrandDefaultLocale currentBrandMatchedDomain currentBrandUiFooterLinks currentBrandUiTheme =
  CurrentBrand
    { currentBrandBrandingCustomCss = currentBrandBrandingCustomCss,
      currentBrandBrandingFavicon = currentBrandBrandingFavicon,
      currentBrandBrandingLogo = currentBrandBrandingLogo,
      currentBrandBrandingTitle = currentBrandBrandingTitle,
      currentBrandDefaultLocale = currentBrandDefaultLocale,
      currentBrandFlowAuthentication = GHC.Maybe.Nothing,
      currentBrandFlowDeviceCode = GHC.Maybe.Nothing,
      currentBrandFlowInvalidation = GHC.Maybe.Nothing,
      currentBrandFlowRecovery = GHC.Maybe.Nothing,
      currentBrandFlowUnenrollment = GHC.Maybe.Nothing,
      currentBrandFlowUserSettings = GHC.Maybe.Nothing,
      currentBrandMatchedDomain = currentBrandMatchedDomain,
      currentBrandUiFooterLinks = currentBrandUiFooterLinks,
      currentBrandUiTheme = currentBrandUiTheme
    }
