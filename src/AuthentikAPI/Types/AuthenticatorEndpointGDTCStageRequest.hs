{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the types generated from the schema AuthenticatorEndpointGDTCStageRequest
module AuthentikAPI.Types.AuthenticatorEndpointGDTCStageRequest where

import qualified AuthentikAPI.Common
import AuthentikAPI.TypeAlias
import {-# SOURCE #-} AuthentikAPI.Types.FlowSetRequest
import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | Defines the object schema located at @components.schemas.AuthenticatorEndpointGDTCStageRequest@ in the specification.
--
-- AuthenticatorEndpointGDTCStage Serializer
data AuthenticatorEndpointGDTCStageRequest = AuthenticatorEndpointGDTCStageRequest
  { -- | configure_flow: Flow used by an authenticated user to configure this Stage. If empty, user will not be able to configure this stage.
    authenticatorEndpointGDTCStageRequestConfigureFlow :: (GHC.Maybe.Maybe (AuthentikAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | credentials
    authenticatorEndpointGDTCStageRequestCredentials :: Data.Aeson.Types.Internal.Object,
    -- | flow_set
    authenticatorEndpointGDTCStageRequestFlowSet :: (GHC.Maybe.Maybe [FlowSetRequest]),
    -- | friendly_name
    --
    -- Constraints:
    --
    -- * Minimum length of 1
    authenticatorEndpointGDTCStageRequestFriendlyName :: (GHC.Maybe.Maybe (AuthentikAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | name
    --
    -- Constraints:
    --
    -- * Minimum length of 1
    authenticatorEndpointGDTCStageRequestName :: Data.Text.Internal.Text
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON AuthenticatorEndpointGDTCStageRequest where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("configure_flow" Data.Aeson.Types.ToJSON..=)) (authenticatorEndpointGDTCStageRequestConfigureFlow obj) : ["credentials" Data.Aeson.Types.ToJSON..= authenticatorEndpointGDTCStageRequestCredentials obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("flow_set" Data.Aeson.Types.ToJSON..=)) (authenticatorEndpointGDTCStageRequestFlowSet obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("friendly_name" Data.Aeson.Types.ToJSON..=)) (authenticatorEndpointGDTCStageRequestFriendlyName obj) : ["name" Data.Aeson.Types.ToJSON..= authenticatorEndpointGDTCStageRequestName obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("configure_flow" Data.Aeson.Types.ToJSON..=)) (authenticatorEndpointGDTCStageRequestConfigureFlow obj) : ["credentials" Data.Aeson.Types.ToJSON..= authenticatorEndpointGDTCStageRequestCredentials obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("flow_set" Data.Aeson.Types.ToJSON..=)) (authenticatorEndpointGDTCStageRequestFlowSet obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("friendly_name" Data.Aeson.Types.ToJSON..=)) (authenticatorEndpointGDTCStageRequestFriendlyName obj) : ["name" Data.Aeson.Types.ToJSON..= authenticatorEndpointGDTCStageRequestName obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON AuthenticatorEndpointGDTCStageRequest where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "AuthenticatorEndpointGDTCStageRequest" (\obj -> ((((GHC.Base.pure AuthenticatorEndpointGDTCStageRequest GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "configure_flow")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "credentials")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "flow_set")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "friendly_name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "name"))

-- | Create a new 'AuthenticatorEndpointGDTCStageRequest' with all required fields.
mkAuthenticatorEndpointGDTCStageRequest ::
  -- | 'authenticatorEndpointGDTCStageRequestCredentials'
  Data.Aeson.Types.Internal.Object ->
  -- | 'authenticatorEndpointGDTCStageRequestName'
  Data.Text.Internal.Text ->
  AuthenticatorEndpointGDTCStageRequest
mkAuthenticatorEndpointGDTCStageRequest authenticatorEndpointGDTCStageRequestCredentials authenticatorEndpointGDTCStageRequestName =
  AuthenticatorEndpointGDTCStageRequest
    { authenticatorEndpointGDTCStageRequestConfigureFlow = GHC.Maybe.Nothing,
      authenticatorEndpointGDTCStageRequestCredentials = authenticatorEndpointGDTCStageRequestCredentials,
      authenticatorEndpointGDTCStageRequestFlowSet = GHC.Maybe.Nothing,
      authenticatorEndpointGDTCStageRequestFriendlyName = GHC.Maybe.Nothing,
      authenticatorEndpointGDTCStageRequestName = authenticatorEndpointGDTCStageRequestName
    }
