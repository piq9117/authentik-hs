{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the types generated from the schema OAuthSourceRequest
module AuthentikAPI.Types.OAuthSourceRequest where

import qualified AuthentikAPI.Common
import AuthentikAPI.TypeAlias
import {-# SOURCE #-} AuthentikAPI.Types.PolicyEngineMode
import {-# SOURCE #-} AuthentikAPI.Types.ProviderTypeEnum
import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | Defines the object schema located at @components.schemas.OAuthSourceRequest@ in the specification.
--
-- OAuth Source Serializer
data OAuthSourceRequest = OAuthSourceRequest
  { -- | access_token_url: URL used by authentik to retrieve tokens.
    --
    -- Constraints:
    --
    -- * Maximum length of 255
    oAuthSourceRequestAccessTokenUrl :: (GHC.Maybe.Maybe (AuthentikAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | additional_scopes
    oAuthSourceRequestAdditionalScopes :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | authentication_flow: Flow to use when authenticating existing users.
    oAuthSourceRequestAuthenticationFlow :: (GHC.Maybe.Maybe (AuthentikAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | authorization_code_auth_method: How to perform authentication during an authorization_code token request flow
    oAuthSourceRequestAuthorizationCodeAuthMethod :: (GHC.Maybe.Maybe Data.Aeson.Types.Internal.Object),
    -- | authorization_url: URL the user is redirect to to conest the flow.
    --
    -- Constraints:
    --
    -- * Maximum length of 255
    oAuthSourceRequestAuthorizationUrl :: (GHC.Maybe.Maybe (AuthentikAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | consumer_key
    --
    -- Constraints:
    --
    -- * Minimum length of 1
    oAuthSourceRequestConsumerKey :: Data.Text.Internal.Text,
    -- | consumer_secret
    --
    -- Constraints:
    --
    -- * Minimum length of 1
    oAuthSourceRequestConsumerSecret :: Data.Text.Internal.Text,
    -- | enabled
    oAuthSourceRequestEnabled :: (GHC.Maybe.Maybe GHC.Types.Bool),
    -- | enrollment_flow: Flow to use when enrolling new users.
    oAuthSourceRequestEnrollmentFlow :: (GHC.Maybe.Maybe (AuthentikAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | group_matching_mode: How the source determines if an existing group should be used or a new group created.
    oAuthSourceRequestGroupMatchingMode :: (GHC.Maybe.Maybe Data.Aeson.Types.Internal.Object),
    -- | group_property_mappings
    oAuthSourceRequestGroupPropertyMappings :: (GHC.Maybe.Maybe [Data.Text.Internal.Text]),
    -- | name: Source\'s display Name.
    --
    -- Constraints:
    --
    -- * Minimum length of 1
    oAuthSourceRequestName :: Data.Text.Internal.Text,
    -- | oidc_jwks
    oAuthSourceRequestOidcJwks :: (GHC.Maybe.Maybe Data.Aeson.Types.Internal.Object),
    -- | oidc_jwks_url
    oAuthSourceRequestOidcJwksUrl :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | oidc_well_known_url
    oAuthSourceRequestOidcWellKnownUrl :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | policy_engine_mode
    oAuthSourceRequestPolicyEngineMode :: (GHC.Maybe.Maybe PolicyEngineMode),
    -- | profile_url: URL used by authentik to get user information.
    --
    -- Constraints:
    --
    -- * Maximum length of 255
    oAuthSourceRequestProfileUrl :: (GHC.Maybe.Maybe (AuthentikAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | provider_type
    oAuthSourceRequestProviderType :: ProviderTypeEnum,
    -- | request_token_url: URL used to request the initial token. This URL is only required for OAuth 1.
    --
    -- Constraints:
    --
    -- * Maximum length of 255
    oAuthSourceRequestRequestTokenUrl :: (GHC.Maybe.Maybe (AuthentikAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | slug: Internal source name, used in URLs.
    --
    -- Constraints:
    --
    -- * Maximum length of 50
    -- * Minimum length of 1
    -- * Must match pattern \'^[-a-zA-Z0-9_]+\$\'
    oAuthSourceRequestSlug :: Data.Text.Internal.Text,
    -- | user_matching_mode: How the source determines if an existing user should be authenticated or a new user enrolled.
    oAuthSourceRequestUserMatchingMode :: (GHC.Maybe.Maybe Data.Aeson.Types.Internal.Object),
    -- | user_path_template
    --
    -- Constraints:
    --
    -- * Minimum length of 1
    oAuthSourceRequestUserPathTemplate :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | user_property_mappings
    oAuthSourceRequestUserPropertyMappings :: (GHC.Maybe.Maybe [Data.Text.Internal.Text])
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON OAuthSourceRequest where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("access_token_url" Data.Aeson.Types.ToJSON..=)) (oAuthSourceRequestAccessTokenUrl obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("additional_scopes" Data.Aeson.Types.ToJSON..=)) (oAuthSourceRequestAdditionalScopes obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("authentication_flow" Data.Aeson.Types.ToJSON..=)) (oAuthSourceRequestAuthenticationFlow obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("authorization_code_auth_method" Data.Aeson.Types.ToJSON..=)) (oAuthSourceRequestAuthorizationCodeAuthMethod obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("authorization_url" Data.Aeson.Types.ToJSON..=)) (oAuthSourceRequestAuthorizationUrl obj) : ["consumer_key" Data.Aeson.Types.ToJSON..= oAuthSourceRequestConsumerKey obj] : ["consumer_secret" Data.Aeson.Types.ToJSON..= oAuthSourceRequestConsumerSecret obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("enabled" Data.Aeson.Types.ToJSON..=)) (oAuthSourceRequestEnabled obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("enrollment_flow" Data.Aeson.Types.ToJSON..=)) (oAuthSourceRequestEnrollmentFlow obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("group_matching_mode" Data.Aeson.Types.ToJSON..=)) (oAuthSourceRequestGroupMatchingMode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("group_property_mappings" Data.Aeson.Types.ToJSON..=)) (oAuthSourceRequestGroupPropertyMappings obj) : ["name" Data.Aeson.Types.ToJSON..= oAuthSourceRequestName obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("oidc_jwks" Data.Aeson.Types.ToJSON..=)) (oAuthSourceRequestOidcJwks obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("oidc_jwks_url" Data.Aeson.Types.ToJSON..=)) (oAuthSourceRequestOidcJwksUrl obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("oidc_well_known_url" Data.Aeson.Types.ToJSON..=)) (oAuthSourceRequestOidcWellKnownUrl obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("policy_engine_mode" Data.Aeson.Types.ToJSON..=)) (oAuthSourceRequestPolicyEngineMode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("profile_url" Data.Aeson.Types.ToJSON..=)) (oAuthSourceRequestProfileUrl obj) : ["provider_type" Data.Aeson.Types.ToJSON..= oAuthSourceRequestProviderType obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("request_token_url" Data.Aeson.Types.ToJSON..=)) (oAuthSourceRequestRequestTokenUrl obj) : ["slug" Data.Aeson.Types.ToJSON..= oAuthSourceRequestSlug obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("user_matching_mode" Data.Aeson.Types.ToJSON..=)) (oAuthSourceRequestUserMatchingMode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("user_path_template" Data.Aeson.Types.ToJSON..=)) (oAuthSourceRequestUserPathTemplate obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("user_property_mappings" Data.Aeson.Types.ToJSON..=)) (oAuthSourceRequestUserPropertyMappings obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("access_token_url" Data.Aeson.Types.ToJSON..=)) (oAuthSourceRequestAccessTokenUrl obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("additional_scopes" Data.Aeson.Types.ToJSON..=)) (oAuthSourceRequestAdditionalScopes obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("authentication_flow" Data.Aeson.Types.ToJSON..=)) (oAuthSourceRequestAuthenticationFlow obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("authorization_code_auth_method" Data.Aeson.Types.ToJSON..=)) (oAuthSourceRequestAuthorizationCodeAuthMethod obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("authorization_url" Data.Aeson.Types.ToJSON..=)) (oAuthSourceRequestAuthorizationUrl obj) : ["consumer_key" Data.Aeson.Types.ToJSON..= oAuthSourceRequestConsumerKey obj] : ["consumer_secret" Data.Aeson.Types.ToJSON..= oAuthSourceRequestConsumerSecret obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("enabled" Data.Aeson.Types.ToJSON..=)) (oAuthSourceRequestEnabled obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("enrollment_flow" Data.Aeson.Types.ToJSON..=)) (oAuthSourceRequestEnrollmentFlow obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("group_matching_mode" Data.Aeson.Types.ToJSON..=)) (oAuthSourceRequestGroupMatchingMode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("group_property_mappings" Data.Aeson.Types.ToJSON..=)) (oAuthSourceRequestGroupPropertyMappings obj) : ["name" Data.Aeson.Types.ToJSON..= oAuthSourceRequestName obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("oidc_jwks" Data.Aeson.Types.ToJSON..=)) (oAuthSourceRequestOidcJwks obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("oidc_jwks_url" Data.Aeson.Types.ToJSON..=)) (oAuthSourceRequestOidcJwksUrl obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("oidc_well_known_url" Data.Aeson.Types.ToJSON..=)) (oAuthSourceRequestOidcWellKnownUrl obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("policy_engine_mode" Data.Aeson.Types.ToJSON..=)) (oAuthSourceRequestPolicyEngineMode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("profile_url" Data.Aeson.Types.ToJSON..=)) (oAuthSourceRequestProfileUrl obj) : ["provider_type" Data.Aeson.Types.ToJSON..= oAuthSourceRequestProviderType obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("request_token_url" Data.Aeson.Types.ToJSON..=)) (oAuthSourceRequestRequestTokenUrl obj) : ["slug" Data.Aeson.Types.ToJSON..= oAuthSourceRequestSlug obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("user_matching_mode" Data.Aeson.Types.ToJSON..=)) (oAuthSourceRequestUserMatchingMode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("user_path_template" Data.Aeson.Types.ToJSON..=)) (oAuthSourceRequestUserPathTemplate obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("user_property_mappings" Data.Aeson.Types.ToJSON..=)) (oAuthSourceRequestUserPropertyMappings obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON OAuthSourceRequest where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "OAuthSourceRequest" (\obj -> ((((((((((((((((((((((GHC.Base.pure OAuthSourceRequest GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "access_token_url")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "additional_scopes")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "authentication_flow")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "authorization_code_auth_method")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "authorization_url")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "consumer_key")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "consumer_secret")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "enabled")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "enrollment_flow")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "group_matching_mode")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "group_property_mappings")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "oidc_jwks")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "oidc_jwks_url")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "oidc_well_known_url")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "policy_engine_mode")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "profile_url")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "provider_type")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "request_token_url")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "slug")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "user_matching_mode")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "user_path_template")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "user_property_mappings"))

-- | Create a new 'OAuthSourceRequest' with all required fields.
mkOAuthSourceRequest ::
  -- | 'oAuthSourceRequestConsumerKey'
  Data.Text.Internal.Text ->
  -- | 'oAuthSourceRequestConsumerSecret'
  Data.Text.Internal.Text ->
  -- | 'oAuthSourceRequestName'
  Data.Text.Internal.Text ->
  -- | 'oAuthSourceRequestProviderType'
  ProviderTypeEnum ->
  -- | 'oAuthSourceRequestSlug'
  Data.Text.Internal.Text ->
  OAuthSourceRequest
mkOAuthSourceRequest oAuthSourceRequestConsumerKey oAuthSourceRequestConsumerSecret oAuthSourceRequestName oAuthSourceRequestProviderType oAuthSourceRequestSlug =
  OAuthSourceRequest
    { oAuthSourceRequestAccessTokenUrl = GHC.Maybe.Nothing,
      oAuthSourceRequestAdditionalScopes = GHC.Maybe.Nothing,
      oAuthSourceRequestAuthenticationFlow = GHC.Maybe.Nothing,
      oAuthSourceRequestAuthorizationCodeAuthMethod = GHC.Maybe.Nothing,
      oAuthSourceRequestAuthorizationUrl = GHC.Maybe.Nothing,
      oAuthSourceRequestConsumerKey = oAuthSourceRequestConsumerKey,
      oAuthSourceRequestConsumerSecret = oAuthSourceRequestConsumerSecret,
      oAuthSourceRequestEnabled = GHC.Maybe.Nothing,
      oAuthSourceRequestEnrollmentFlow = GHC.Maybe.Nothing,
      oAuthSourceRequestGroupMatchingMode = GHC.Maybe.Nothing,
      oAuthSourceRequestGroupPropertyMappings = GHC.Maybe.Nothing,
      oAuthSourceRequestName = oAuthSourceRequestName,
      oAuthSourceRequestOidcJwks = GHC.Maybe.Nothing,
      oAuthSourceRequestOidcJwksUrl = GHC.Maybe.Nothing,
      oAuthSourceRequestOidcWellKnownUrl = GHC.Maybe.Nothing,
      oAuthSourceRequestPolicyEngineMode = GHC.Maybe.Nothing,
      oAuthSourceRequestProfileUrl = GHC.Maybe.Nothing,
      oAuthSourceRequestProviderType = oAuthSourceRequestProviderType,
      oAuthSourceRequestRequestTokenUrl = GHC.Maybe.Nothing,
      oAuthSourceRequestSlug = oAuthSourceRequestSlug,
      oAuthSourceRequestUserMatchingMode = GHC.Maybe.Nothing,
      oAuthSourceRequestUserPathTemplate = GHC.Maybe.Nothing,
      oAuthSourceRequestUserPropertyMappings = GHC.Maybe.Nothing
    }
