{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the types generated from the schema MicrosoftEntraProviderUser
module AuthentikAPI.Types.MicrosoftEntraProviderUser where

import qualified AuthentikAPI.Common
import AuthentikAPI.TypeAlias
import {-# SOURCE #-} AuthentikAPI.Types.GroupMember
import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | Defines the object schema located at @components.schemas.MicrosoftEntraProviderUser@ in the specification.
--
-- MicrosoftEntraProviderUser Serializer
data MicrosoftEntraProviderUser = MicrosoftEntraProviderUser
  { -- | attributes
    microsoftEntraProviderUserAttributes :: Data.Aeson.Types.Internal.Object,
    -- | id
    microsoftEntraProviderUserId :: Data.Text.Internal.Text,
    -- | microsoft_id
    microsoftEntraProviderUserMicrosoftId :: Data.Text.Internal.Text,
    -- | provider
    microsoftEntraProviderUserProvider :: GHC.Types.Int,
    -- | user
    microsoftEntraProviderUserUser :: GHC.Types.Int,
    -- | user_obj
    microsoftEntraProviderUserUserObj :: MicrosoftEntraProviderUserUserObj'
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON MicrosoftEntraProviderUser where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["attributes" Data.Aeson.Types.ToJSON..= microsoftEntraProviderUserAttributes obj] : ["id" Data.Aeson.Types.ToJSON..= microsoftEntraProviderUserId obj] : ["microsoft_id" Data.Aeson.Types.ToJSON..= microsoftEntraProviderUserMicrosoftId obj] : ["provider" Data.Aeson.Types.ToJSON..= microsoftEntraProviderUserProvider obj] : ["user" Data.Aeson.Types.ToJSON..= microsoftEntraProviderUserUser obj] : ["user_obj" Data.Aeson.Types.ToJSON..= microsoftEntraProviderUserUserObj obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["attributes" Data.Aeson.Types.ToJSON..= microsoftEntraProviderUserAttributes obj] : ["id" Data.Aeson.Types.ToJSON..= microsoftEntraProviderUserId obj] : ["microsoft_id" Data.Aeson.Types.ToJSON..= microsoftEntraProviderUserMicrosoftId obj] : ["provider" Data.Aeson.Types.ToJSON..= microsoftEntraProviderUserProvider obj] : ["user" Data.Aeson.Types.ToJSON..= microsoftEntraProviderUserUser obj] : ["user_obj" Data.Aeson.Types.ToJSON..= microsoftEntraProviderUserUserObj obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON MicrosoftEntraProviderUser where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "MicrosoftEntraProviderUser" (\obj -> (((((GHC.Base.pure MicrosoftEntraProviderUser GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "attributes")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "microsoft_id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "provider")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "user")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "user_obj"))

-- | Create a new 'MicrosoftEntraProviderUser' with all required fields.
mkMicrosoftEntraProviderUser ::
  -- | 'microsoftEntraProviderUserAttributes'
  Data.Aeson.Types.Internal.Object ->
  -- | 'microsoftEntraProviderUserId'
  Data.Text.Internal.Text ->
  -- | 'microsoftEntraProviderUserMicrosoftId'
  Data.Text.Internal.Text ->
  -- | 'microsoftEntraProviderUserProvider'
  GHC.Types.Int ->
  -- | 'microsoftEntraProviderUserUser'
  GHC.Types.Int ->
  -- | 'microsoftEntraProviderUserUserObj'
  MicrosoftEntraProviderUserUserObj' ->
  MicrosoftEntraProviderUser
mkMicrosoftEntraProviderUser microsoftEntraProviderUserAttributes microsoftEntraProviderUserId microsoftEntraProviderUserMicrosoftId microsoftEntraProviderUserProvider microsoftEntraProviderUserUser microsoftEntraProviderUserUserObj =
  MicrosoftEntraProviderUser
    { microsoftEntraProviderUserAttributes = microsoftEntraProviderUserAttributes,
      microsoftEntraProviderUserId = microsoftEntraProviderUserId,
      microsoftEntraProviderUserMicrosoftId = microsoftEntraProviderUserMicrosoftId,
      microsoftEntraProviderUserProvider = microsoftEntraProviderUserProvider,
      microsoftEntraProviderUserUser = microsoftEntraProviderUserUser,
      microsoftEntraProviderUserUserObj = microsoftEntraProviderUserUserObj
    }

-- | Defines the object schema located at @components.schemas.MicrosoftEntraProviderUser.properties.user_obj.allOf@ in the specification.
data MicrosoftEntraProviderUserUserObj' = MicrosoftEntraProviderUserUserObj'
  { -- | attributes
    microsoftEntraProviderUserUserObj'Attributes :: (GHC.Maybe.Maybe Data.Aeson.Types.Internal.Object),
    -- | email
    --
    -- Constraints:
    --
    -- * Maximum length of 254
    microsoftEntraProviderUserUserObj'Email :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | is_active: Designates whether this user should be treated as active. Unselect this instead of deleting accounts.
    microsoftEntraProviderUserUserObj'IsActive :: (GHC.Maybe.Maybe GHC.Types.Bool),
    -- | last_login
    microsoftEntraProviderUserUserObj'LastLogin :: (GHC.Maybe.Maybe (AuthentikAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | name: User\'s display name.
    microsoftEntraProviderUserUserObj'Name :: Data.Text.Internal.Text,
    -- | pk
    microsoftEntraProviderUserUserObj'Pk :: GHC.Types.Int,
    -- | uid
    microsoftEntraProviderUserUserObj'Uid :: Data.Text.Internal.Text,
    -- | username: Required. 150 characters or fewer. Letters, digits and \@\/.\/+\/-\/_ only.
    --
    -- Constraints:
    --
    -- * Maximum length of 150
    -- * Must match pattern \'^[\\w.\@+-]+\$\'
    microsoftEntraProviderUserUserObj'Username :: Data.Text.Internal.Text
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON MicrosoftEntraProviderUserUserObj' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("attributes" Data.Aeson.Types.ToJSON..=)) (microsoftEntraProviderUserUserObj'Attributes obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("email" Data.Aeson.Types.ToJSON..=)) (microsoftEntraProviderUserUserObj'Email obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("is_active" Data.Aeson.Types.ToJSON..=)) (microsoftEntraProviderUserUserObj'IsActive obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("last_login" Data.Aeson.Types.ToJSON..=)) (microsoftEntraProviderUserUserObj'LastLogin obj) : ["name" Data.Aeson.Types.ToJSON..= microsoftEntraProviderUserUserObj'Name obj] : ["pk" Data.Aeson.Types.ToJSON..= microsoftEntraProviderUserUserObj'Pk obj] : ["uid" Data.Aeson.Types.ToJSON..= microsoftEntraProviderUserUserObj'Uid obj] : ["username" Data.Aeson.Types.ToJSON..= microsoftEntraProviderUserUserObj'Username obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("attributes" Data.Aeson.Types.ToJSON..=)) (microsoftEntraProviderUserUserObj'Attributes obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("email" Data.Aeson.Types.ToJSON..=)) (microsoftEntraProviderUserUserObj'Email obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("is_active" Data.Aeson.Types.ToJSON..=)) (microsoftEntraProviderUserUserObj'IsActive obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("last_login" Data.Aeson.Types.ToJSON..=)) (microsoftEntraProviderUserUserObj'LastLogin obj) : ["name" Data.Aeson.Types.ToJSON..= microsoftEntraProviderUserUserObj'Name obj] : ["pk" Data.Aeson.Types.ToJSON..= microsoftEntraProviderUserUserObj'Pk obj] : ["uid" Data.Aeson.Types.ToJSON..= microsoftEntraProviderUserUserObj'Uid obj] : ["username" Data.Aeson.Types.ToJSON..= microsoftEntraProviderUserUserObj'Username obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON MicrosoftEntraProviderUserUserObj' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "MicrosoftEntraProviderUserUserObj'" (\obj -> (((((((GHC.Base.pure MicrosoftEntraProviderUserUserObj' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "attributes")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "email")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "is_active")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "last_login")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "pk")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "uid")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "username"))

-- | Create a new 'MicrosoftEntraProviderUserUserObj'' with all required fields.
mkMicrosoftEntraProviderUserUserObj' ::
  -- | 'microsoftEntraProviderUserUserObj'Name'
  Data.Text.Internal.Text ->
  -- | 'microsoftEntraProviderUserUserObj'Pk'
  GHC.Types.Int ->
  -- | 'microsoftEntraProviderUserUserObj'Uid'
  Data.Text.Internal.Text ->
  -- | 'microsoftEntraProviderUserUserObj'Username'
  Data.Text.Internal.Text ->
  MicrosoftEntraProviderUserUserObj'
mkMicrosoftEntraProviderUserUserObj' microsoftEntraProviderUserUserObj'Name microsoftEntraProviderUserUserObj'Pk microsoftEntraProviderUserUserObj'Uid microsoftEntraProviderUserUserObj'Username =
  MicrosoftEntraProviderUserUserObj'
    { microsoftEntraProviderUserUserObj'Attributes = GHC.Maybe.Nothing,
      microsoftEntraProviderUserUserObj'Email = GHC.Maybe.Nothing,
      microsoftEntraProviderUserUserObj'IsActive = GHC.Maybe.Nothing,
      microsoftEntraProviderUserUserObj'LastLogin = GHC.Maybe.Nothing,
      microsoftEntraProviderUserUserObj'Name = microsoftEntraProviderUserUserObj'Name,
      microsoftEntraProviderUserUserObj'Pk = microsoftEntraProviderUserUserObj'Pk,
      microsoftEntraProviderUserUserObj'Uid = microsoftEntraProviderUserUserObj'Uid,
      microsoftEntraProviderUserUserObj'Username = microsoftEntraProviderUserUserObj'Username
    }
