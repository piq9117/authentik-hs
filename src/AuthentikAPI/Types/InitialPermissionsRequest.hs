{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the types generated from the schema InitialPermissionsRequest
module AuthentikAPI.Types.InitialPermissionsRequest where

import qualified AuthentikAPI.Common
import AuthentikAPI.TypeAlias
import {-# SOURCE #-} AuthentikAPI.Types.InitialPermissionsModeEnum
import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | Defines the object schema located at @components.schemas.InitialPermissionsRequest@ in the specification.
--
-- InitialPermissions serializer
data InitialPermissionsRequest = InitialPermissionsRequest
  { -- | mode
    initialPermissionsRequestMode :: InitialPermissionsModeEnum,
    -- | name
    --
    -- Constraints:
    --
    -- * Maximum length of 150
    -- * Minimum length of 1
    initialPermissionsRequestName :: Data.Text.Internal.Text,
    -- | permissions
    initialPermissionsRequestPermissions :: (GHC.Maybe.Maybe [GHC.Types.Int]),
    -- | role
    initialPermissionsRequestRole :: Data.Text.Internal.Text
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON InitialPermissionsRequest where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["mode" Data.Aeson.Types.ToJSON..= initialPermissionsRequestMode obj] : ["name" Data.Aeson.Types.ToJSON..= initialPermissionsRequestName obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("permissions" Data.Aeson.Types.ToJSON..=)) (initialPermissionsRequestPermissions obj) : ["role" Data.Aeson.Types.ToJSON..= initialPermissionsRequestRole obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["mode" Data.Aeson.Types.ToJSON..= initialPermissionsRequestMode obj] : ["name" Data.Aeson.Types.ToJSON..= initialPermissionsRequestName obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("permissions" Data.Aeson.Types.ToJSON..=)) (initialPermissionsRequestPermissions obj) : ["role" Data.Aeson.Types.ToJSON..= initialPermissionsRequestRole obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON InitialPermissionsRequest where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "InitialPermissionsRequest" (\obj -> (((GHC.Base.pure InitialPermissionsRequest GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "mode")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "permissions")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "role"))

-- | Create a new 'InitialPermissionsRequest' with all required fields.
mkInitialPermissionsRequest ::
  -- | 'initialPermissionsRequestMode'
  InitialPermissionsModeEnum ->
  -- | 'initialPermissionsRequestName'
  Data.Text.Internal.Text ->
  -- | 'initialPermissionsRequestRole'
  Data.Text.Internal.Text ->
  InitialPermissionsRequest
mkInitialPermissionsRequest initialPermissionsRequestMode initialPermissionsRequestName initialPermissionsRequestRole =
  InitialPermissionsRequest
    { initialPermissionsRequestMode = initialPermissionsRequestMode,
      initialPermissionsRequestName = initialPermissionsRequestName,
      initialPermissionsRequestPermissions = GHC.Maybe.Nothing,
      initialPermissionsRequestRole = initialPermissionsRequestRole
    }
