{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the types generated from the schema PatchedSAMLSourceRequest
module AuthentikAPI.Types.PatchedSAMLSourceRequest where

import qualified AuthentikAPI.Common
import AuthentikAPI.TypeAlias
import {-# SOURCE #-} AuthentikAPI.Types.BindingTypeEnum
import {-# SOURCE #-} AuthentikAPI.Types.DigestAlgorithmEnum
import {-# SOURCE #-} AuthentikAPI.Types.PolicyEngineMode
import {-# SOURCE #-} AuthentikAPI.Types.SignatureAlgorithmEnum
import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | Defines the object schema located at @components.schemas.PatchedSAMLSourceRequest@ in the specification.
--
-- SAMLSource Serializer
data PatchedSAMLSourceRequest = PatchedSAMLSourceRequest
  { -- | allow_idp_initiated: Allows authentication flows initiated by the IdP. This can be a security risk, as no validation of the request ID is done.
    patchedSAMLSourceRequestAllowIdpInitiated :: (GHC.Maybe.Maybe GHC.Types.Bool),
    -- | authentication_flow: Flow to use when authenticating existing users.
    patchedSAMLSourceRequestAuthenticationFlow :: (GHC.Maybe.Maybe (AuthentikAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | binding_type
    patchedSAMLSourceRequestBindingType :: (GHC.Maybe.Maybe BindingTypeEnum),
    -- | digest_algorithm
    patchedSAMLSourceRequestDigestAlgorithm :: (GHC.Maybe.Maybe DigestAlgorithmEnum),
    -- | enabled
    patchedSAMLSourceRequestEnabled :: (GHC.Maybe.Maybe GHC.Types.Bool),
    -- | encryption_kp: When selected, incoming assertions are encrypted by the IdP using the public key of the encryption keypair. The assertion is decrypted by the SP using the the private key.
    patchedSAMLSourceRequestEncryptionKp :: (GHC.Maybe.Maybe (AuthentikAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | enrollment_flow: Flow to use when enrolling new users.
    patchedSAMLSourceRequestEnrollmentFlow :: (GHC.Maybe.Maybe (AuthentikAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | group_matching_mode: How the source determines if an existing group should be used or a new group created.
    patchedSAMLSourceRequestGroupMatchingMode :: (GHC.Maybe.Maybe Data.Aeson.Types.Internal.Object),
    -- | group_property_mappings
    patchedSAMLSourceRequestGroupPropertyMappings :: (GHC.Maybe.Maybe [Data.Text.Internal.Text]),
    -- | issuer: Also known as Entity ID. Defaults the Metadata URL.
    patchedSAMLSourceRequestIssuer :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | name: Source\'s display Name.
    --
    -- Constraints:
    --
    -- * Minimum length of 1
    patchedSAMLSourceRequestName :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | name_id_policy: NameID Policy sent to the IdP. Can be unset, in which case no Policy is sent.
    patchedSAMLSourceRequestNameIdPolicy :: (GHC.Maybe.Maybe Data.Aeson.Types.Internal.Object),
    -- | policy_engine_mode
    patchedSAMLSourceRequestPolicyEngineMode :: (GHC.Maybe.Maybe PolicyEngineMode),
    -- | pre_authentication_flow: Flow used before authentication.
    patchedSAMLSourceRequestPreAuthenticationFlow :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | signature_algorithm
    patchedSAMLSourceRequestSignatureAlgorithm :: (GHC.Maybe.Maybe SignatureAlgorithmEnum),
    -- | signing_kp: Keypair used to sign outgoing Responses going to the Identity Provider.
    patchedSAMLSourceRequestSigningKp :: (GHC.Maybe.Maybe (AuthentikAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | slo_url: Optional URL if your IDP supports Single-Logout.
    patchedSAMLSourceRequestSloUrl :: (GHC.Maybe.Maybe (AuthentikAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | slug: Internal source name, used in URLs.
    --
    -- Constraints:
    --
    -- * Maximum length of 50
    -- * Minimum length of 1
    -- * Must match pattern \'^[-a-zA-Z0-9_]+\$\'
    patchedSAMLSourceRequestSlug :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | sso_url: URL that the initial Login request is sent to.
    --
    -- Constraints:
    --
    -- * Minimum length of 1
    patchedSAMLSourceRequestSsoUrl :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | temporary_user_delete_after: Time offset when temporary users should be deleted. This only applies if your IDP uses the NameID Format \'transient\', and the user doesn\'t log out manually. (Format: hours=1;minutes=2;seconds=3).
    --
    -- Constraints:
    --
    -- * Minimum length of 1
    patchedSAMLSourceRequestTemporaryUserDeleteAfter :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | user_matching_mode: How the source determines if an existing user should be authenticated or a new user enrolled.
    patchedSAMLSourceRequestUserMatchingMode :: (GHC.Maybe.Maybe Data.Aeson.Types.Internal.Object),
    -- | user_path_template
    --
    -- Constraints:
    --
    -- * Minimum length of 1
    patchedSAMLSourceRequestUserPathTemplate :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | user_property_mappings
    patchedSAMLSourceRequestUserPropertyMappings :: (GHC.Maybe.Maybe [Data.Text.Internal.Text]),
    -- | verification_kp: When selected, incoming assertion\'s Signatures will be validated against this certificate. To allow unsigned Requests, leave on default.
    patchedSAMLSourceRequestVerificationKp :: (GHC.Maybe.Maybe (AuthentikAPI.Common.Nullable Data.Text.Internal.Text))
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PatchedSAMLSourceRequest where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("allow_idp_initiated" Data.Aeson.Types.ToJSON..=)) (patchedSAMLSourceRequestAllowIdpInitiated obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("authentication_flow" Data.Aeson.Types.ToJSON..=)) (patchedSAMLSourceRequestAuthenticationFlow obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("binding_type" Data.Aeson.Types.ToJSON..=)) (patchedSAMLSourceRequestBindingType obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("digest_algorithm" Data.Aeson.Types.ToJSON..=)) (patchedSAMLSourceRequestDigestAlgorithm obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("enabled" Data.Aeson.Types.ToJSON..=)) (patchedSAMLSourceRequestEnabled obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("encryption_kp" Data.Aeson.Types.ToJSON..=)) (patchedSAMLSourceRequestEncryptionKp obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("enrollment_flow" Data.Aeson.Types.ToJSON..=)) (patchedSAMLSourceRequestEnrollmentFlow obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("group_matching_mode" Data.Aeson.Types.ToJSON..=)) (patchedSAMLSourceRequestGroupMatchingMode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("group_property_mappings" Data.Aeson.Types.ToJSON..=)) (patchedSAMLSourceRequestGroupPropertyMappings obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("issuer" Data.Aeson.Types.ToJSON..=)) (patchedSAMLSourceRequestIssuer obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("name" Data.Aeson.Types.ToJSON..=)) (patchedSAMLSourceRequestName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("name_id_policy" Data.Aeson.Types.ToJSON..=)) (patchedSAMLSourceRequestNameIdPolicy obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("policy_engine_mode" Data.Aeson.Types.ToJSON..=)) (patchedSAMLSourceRequestPolicyEngineMode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("pre_authentication_flow" Data.Aeson.Types.ToJSON..=)) (patchedSAMLSourceRequestPreAuthenticationFlow obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("signature_algorithm" Data.Aeson.Types.ToJSON..=)) (patchedSAMLSourceRequestSignatureAlgorithm obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("signing_kp" Data.Aeson.Types.ToJSON..=)) (patchedSAMLSourceRequestSigningKp obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("slo_url" Data.Aeson.Types.ToJSON..=)) (patchedSAMLSourceRequestSloUrl obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("slug" Data.Aeson.Types.ToJSON..=)) (patchedSAMLSourceRequestSlug obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("sso_url" Data.Aeson.Types.ToJSON..=)) (patchedSAMLSourceRequestSsoUrl obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("temporary_user_delete_after" Data.Aeson.Types.ToJSON..=)) (patchedSAMLSourceRequestTemporaryUserDeleteAfter obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("user_matching_mode" Data.Aeson.Types.ToJSON..=)) (patchedSAMLSourceRequestUserMatchingMode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("user_path_template" Data.Aeson.Types.ToJSON..=)) (patchedSAMLSourceRequestUserPathTemplate obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("user_property_mappings" Data.Aeson.Types.ToJSON..=)) (patchedSAMLSourceRequestUserPropertyMappings obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("verification_kp" Data.Aeson.Types.ToJSON..=)) (patchedSAMLSourceRequestVerificationKp obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("allow_idp_initiated" Data.Aeson.Types.ToJSON..=)) (patchedSAMLSourceRequestAllowIdpInitiated obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("authentication_flow" Data.Aeson.Types.ToJSON..=)) (patchedSAMLSourceRequestAuthenticationFlow obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("binding_type" Data.Aeson.Types.ToJSON..=)) (patchedSAMLSourceRequestBindingType obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("digest_algorithm" Data.Aeson.Types.ToJSON..=)) (patchedSAMLSourceRequestDigestAlgorithm obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("enabled" Data.Aeson.Types.ToJSON..=)) (patchedSAMLSourceRequestEnabled obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("encryption_kp" Data.Aeson.Types.ToJSON..=)) (patchedSAMLSourceRequestEncryptionKp obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("enrollment_flow" Data.Aeson.Types.ToJSON..=)) (patchedSAMLSourceRequestEnrollmentFlow obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("group_matching_mode" Data.Aeson.Types.ToJSON..=)) (patchedSAMLSourceRequestGroupMatchingMode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("group_property_mappings" Data.Aeson.Types.ToJSON..=)) (patchedSAMLSourceRequestGroupPropertyMappings obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("issuer" Data.Aeson.Types.ToJSON..=)) (patchedSAMLSourceRequestIssuer obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("name" Data.Aeson.Types.ToJSON..=)) (patchedSAMLSourceRequestName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("name_id_policy" Data.Aeson.Types.ToJSON..=)) (patchedSAMLSourceRequestNameIdPolicy obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("policy_engine_mode" Data.Aeson.Types.ToJSON..=)) (patchedSAMLSourceRequestPolicyEngineMode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("pre_authentication_flow" Data.Aeson.Types.ToJSON..=)) (patchedSAMLSourceRequestPreAuthenticationFlow obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("signature_algorithm" Data.Aeson.Types.ToJSON..=)) (patchedSAMLSourceRequestSignatureAlgorithm obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("signing_kp" Data.Aeson.Types.ToJSON..=)) (patchedSAMLSourceRequestSigningKp obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("slo_url" Data.Aeson.Types.ToJSON..=)) (patchedSAMLSourceRequestSloUrl obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("slug" Data.Aeson.Types.ToJSON..=)) (patchedSAMLSourceRequestSlug obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("sso_url" Data.Aeson.Types.ToJSON..=)) (patchedSAMLSourceRequestSsoUrl obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("temporary_user_delete_after" Data.Aeson.Types.ToJSON..=)) (patchedSAMLSourceRequestTemporaryUserDeleteAfter obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("user_matching_mode" Data.Aeson.Types.ToJSON..=)) (patchedSAMLSourceRequestUserMatchingMode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("user_path_template" Data.Aeson.Types.ToJSON..=)) (patchedSAMLSourceRequestUserPathTemplate obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("user_property_mappings" Data.Aeson.Types.ToJSON..=)) (patchedSAMLSourceRequestUserPropertyMappings obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("verification_kp" Data.Aeson.Types.ToJSON..=)) (patchedSAMLSourceRequestVerificationKp obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PatchedSAMLSourceRequest where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PatchedSAMLSourceRequest" (\obj -> (((((((((((((((((((((((GHC.Base.pure PatchedSAMLSourceRequest GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "allow_idp_initiated")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "authentication_flow")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "binding_type")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "digest_algorithm")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "enabled")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "encryption_kp")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "enrollment_flow")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "group_matching_mode")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "group_property_mappings")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "issuer")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "name_id_policy")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "policy_engine_mode")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "pre_authentication_flow")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "signature_algorithm")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "signing_kp")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "slo_url")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "slug")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "sso_url")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "temporary_user_delete_after")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "user_matching_mode")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "user_path_template")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "user_property_mappings")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "verification_kp"))

-- | Create a new 'PatchedSAMLSourceRequest' with all required fields.
mkPatchedSAMLSourceRequest :: PatchedSAMLSourceRequest
mkPatchedSAMLSourceRequest =
  PatchedSAMLSourceRequest
    { patchedSAMLSourceRequestAllowIdpInitiated = GHC.Maybe.Nothing,
      patchedSAMLSourceRequestAuthenticationFlow = GHC.Maybe.Nothing,
      patchedSAMLSourceRequestBindingType = GHC.Maybe.Nothing,
      patchedSAMLSourceRequestDigestAlgorithm = GHC.Maybe.Nothing,
      patchedSAMLSourceRequestEnabled = GHC.Maybe.Nothing,
      patchedSAMLSourceRequestEncryptionKp = GHC.Maybe.Nothing,
      patchedSAMLSourceRequestEnrollmentFlow = GHC.Maybe.Nothing,
      patchedSAMLSourceRequestGroupMatchingMode = GHC.Maybe.Nothing,
      patchedSAMLSourceRequestGroupPropertyMappings = GHC.Maybe.Nothing,
      patchedSAMLSourceRequestIssuer = GHC.Maybe.Nothing,
      patchedSAMLSourceRequestName = GHC.Maybe.Nothing,
      patchedSAMLSourceRequestNameIdPolicy = GHC.Maybe.Nothing,
      patchedSAMLSourceRequestPolicyEngineMode = GHC.Maybe.Nothing,
      patchedSAMLSourceRequestPreAuthenticationFlow = GHC.Maybe.Nothing,
      patchedSAMLSourceRequestSignatureAlgorithm = GHC.Maybe.Nothing,
      patchedSAMLSourceRequestSigningKp = GHC.Maybe.Nothing,
      patchedSAMLSourceRequestSloUrl = GHC.Maybe.Nothing,
      patchedSAMLSourceRequestSlug = GHC.Maybe.Nothing,
      patchedSAMLSourceRequestSsoUrl = GHC.Maybe.Nothing,
      patchedSAMLSourceRequestTemporaryUserDeleteAfter = GHC.Maybe.Nothing,
      patchedSAMLSourceRequestUserMatchingMode = GHC.Maybe.Nothing,
      patchedSAMLSourceRequestUserPathTemplate = GHC.Maybe.Nothing,
      patchedSAMLSourceRequestUserPropertyMappings = GHC.Maybe.Nothing,
      patchedSAMLSourceRequestVerificationKp = GHC.Maybe.Nothing
    }
