{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the types generated from the schema Endpoint
module AuthentikAPI.Types.Endpoint where

import qualified AuthentikAPI.Common
import AuthentikAPI.TypeAlias
import {-# SOURCE #-} AuthentikAPI.Types.AuthModeEnum
import {-# SOURCE #-} AuthentikAPI.Types.ProtocolEnum
import {-# SOURCE #-} AuthentikAPI.Types.RACProvider
import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | Defines the object schema located at @components.schemas.Endpoint@ in the specification.
--
-- Endpoint Serializer
data Endpoint = Endpoint
  { -- | auth_mode
    endpointAuthMode :: AuthModeEnum,
    -- | host
    endpointHost :: Data.Text.Internal.Text,
    -- | launch_url: Build actual launch URL (the provider itself does not have one, just
    -- individual endpoints)
    endpointLaunchUrl :: (AuthentikAPI.Common.Nullable Data.Text.Internal.Text),
    -- | maximum_connections
    --
    -- Constraints:
    --
    -- * Maxium  of 2.1474836e9
    -- * Minimum  of -2.1474836e9
    endpointMaximumConnections :: (GHC.Maybe.Maybe GHC.Types.Int),
    -- | name
    endpointName :: Data.Text.Internal.Text,
    -- | pk
    endpointPk :: Data.Text.Internal.Text,
    -- | property_mappings
    endpointPropertyMappings :: (GHC.Maybe.Maybe [Data.Text.Internal.Text]),
    -- | protocol
    endpointProtocol :: ProtocolEnum,
    -- | provider
    endpointProvider :: GHC.Types.Int,
    -- | provider_obj
    endpointProviderObj :: EndpointProviderObj',
    -- | settings
    endpointSettings :: (GHC.Maybe.Maybe Data.Aeson.Types.Internal.Object)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON Endpoint where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["auth_mode" Data.Aeson.Types.ToJSON..= endpointAuthMode obj] : ["host" Data.Aeson.Types.ToJSON..= endpointHost obj] : ["launch_url" Data.Aeson.Types.ToJSON..= endpointLaunchUrl obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("maximum_connections" Data.Aeson.Types.ToJSON..=)) (endpointMaximumConnections obj) : ["name" Data.Aeson.Types.ToJSON..= endpointName obj] : ["pk" Data.Aeson.Types.ToJSON..= endpointPk obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("property_mappings" Data.Aeson.Types.ToJSON..=)) (endpointPropertyMappings obj) : ["protocol" Data.Aeson.Types.ToJSON..= endpointProtocol obj] : ["provider" Data.Aeson.Types.ToJSON..= endpointProvider obj] : ["provider_obj" Data.Aeson.Types.ToJSON..= endpointProviderObj obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("settings" Data.Aeson.Types.ToJSON..=)) (endpointSettings obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["auth_mode" Data.Aeson.Types.ToJSON..= endpointAuthMode obj] : ["host" Data.Aeson.Types.ToJSON..= endpointHost obj] : ["launch_url" Data.Aeson.Types.ToJSON..= endpointLaunchUrl obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("maximum_connections" Data.Aeson.Types.ToJSON..=)) (endpointMaximumConnections obj) : ["name" Data.Aeson.Types.ToJSON..= endpointName obj] : ["pk" Data.Aeson.Types.ToJSON..= endpointPk obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("property_mappings" Data.Aeson.Types.ToJSON..=)) (endpointPropertyMappings obj) : ["protocol" Data.Aeson.Types.ToJSON..= endpointProtocol obj] : ["provider" Data.Aeson.Types.ToJSON..= endpointProvider obj] : ["provider_obj" Data.Aeson.Types.ToJSON..= endpointProviderObj obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("settings" Data.Aeson.Types.ToJSON..=)) (endpointSettings obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON Endpoint where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "Endpoint" (\obj -> ((((((((((GHC.Base.pure Endpoint GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "auth_mode")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "host")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "launch_url")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "maximum_connections")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "pk")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "property_mappings")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "protocol")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "provider")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "provider_obj")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "settings"))

-- | Create a new 'Endpoint' with all required fields.
mkEndpoint ::
  -- | 'endpointAuthMode'
  AuthModeEnum ->
  -- | 'endpointHost'
  Data.Text.Internal.Text ->
  -- | 'endpointLaunchUrl'
  AuthentikAPI.Common.Nullable Data.Text.Internal.Text ->
  -- | 'endpointName'
  Data.Text.Internal.Text ->
  -- | 'endpointPk'
  Data.Text.Internal.Text ->
  -- | 'endpointProtocol'
  ProtocolEnum ->
  -- | 'endpointProvider'
  GHC.Types.Int ->
  -- | 'endpointProviderObj'
  EndpointProviderObj' ->
  Endpoint
mkEndpoint endpointAuthMode endpointHost endpointLaunchUrl endpointName endpointPk endpointProtocol endpointProvider endpointProviderObj =
  Endpoint
    { endpointAuthMode = endpointAuthMode,
      endpointHost = endpointHost,
      endpointLaunchUrl = endpointLaunchUrl,
      endpointMaximumConnections = GHC.Maybe.Nothing,
      endpointName = endpointName,
      endpointPk = endpointPk,
      endpointPropertyMappings = GHC.Maybe.Nothing,
      endpointProtocol = endpointProtocol,
      endpointProvider = endpointProvider,
      endpointProviderObj = endpointProviderObj,
      endpointSettings = GHC.Maybe.Nothing
    }

-- | Defines the object schema located at @components.schemas.Endpoint.properties.provider_obj.allOf@ in the specification.
data EndpointProviderObj' = EndpointProviderObj'
  { -- | assigned_application_name: Application\'s display Name.
    endpointProviderObj'AssignedApplicationName :: Data.Text.Internal.Text,
    -- | assigned_application_slug: Internal application name, used in URLs.
    endpointProviderObj'AssignedApplicationSlug :: Data.Text.Internal.Text,
    -- | assigned_backchannel_application_name: Application\'s display Name.
    endpointProviderObj'AssignedBackchannelApplicationName :: Data.Text.Internal.Text,
    -- | assigned_backchannel_application_slug: Internal application name, used in URLs.
    endpointProviderObj'AssignedBackchannelApplicationSlug :: Data.Text.Internal.Text,
    -- | authentication_flow: Flow used for authentication when the associated application is accessed by an un-authenticated user.
    endpointProviderObj'AuthenticationFlow :: (GHC.Maybe.Maybe (AuthentikAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | authorization_flow: Flow used when authorizing this provider.
    endpointProviderObj'AuthorizationFlow :: Data.Text.Internal.Text,
    -- | component: Get object component so that we know how to edit the object
    endpointProviderObj'Component :: Data.Text.Internal.Text,
    -- | connection_expiry: Determines how long a session lasts. Default of 0 means that the sessions lasts until the browser is closed. (Format: hours=-1;minutes=-2;seconds=-3)
    endpointProviderObj'ConnectionExpiry :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | delete_token_on_disconnect: When set to true, connection tokens will be deleted upon disconnect.
    endpointProviderObj'DeleteTokenOnDisconnect :: (GHC.Maybe.Maybe GHC.Types.Bool),
    -- | meta_model_name: Return internal model name
    endpointProviderObj'MetaModelName :: Data.Text.Internal.Text,
    -- | name
    endpointProviderObj'Name :: Data.Text.Internal.Text,
    -- | outpost_set
    endpointProviderObj'OutpostSet :: [Data.Text.Internal.Text],
    -- | pk
    endpointProviderObj'Pk :: GHC.Types.Int,
    -- | property_mappings
    endpointProviderObj'PropertyMappings :: (GHC.Maybe.Maybe [Data.Text.Internal.Text]),
    -- | settings
    endpointProviderObj'Settings :: (GHC.Maybe.Maybe Data.Aeson.Types.Internal.Object),
    -- | verbose_name: Return object\'s verbose_name
    endpointProviderObj'VerboseName :: Data.Text.Internal.Text,
    -- | verbose_name_plural: Return object\'s plural verbose_name
    endpointProviderObj'VerboseNamePlural :: Data.Text.Internal.Text
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON EndpointProviderObj' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["assigned_application_name" Data.Aeson.Types.ToJSON..= endpointProviderObj'AssignedApplicationName obj] : ["assigned_application_slug" Data.Aeson.Types.ToJSON..= endpointProviderObj'AssignedApplicationSlug obj] : ["assigned_backchannel_application_name" Data.Aeson.Types.ToJSON..= endpointProviderObj'AssignedBackchannelApplicationName obj] : ["assigned_backchannel_application_slug" Data.Aeson.Types.ToJSON..= endpointProviderObj'AssignedBackchannelApplicationSlug obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("authentication_flow" Data.Aeson.Types.ToJSON..=)) (endpointProviderObj'AuthenticationFlow obj) : ["authorization_flow" Data.Aeson.Types.ToJSON..= endpointProviderObj'AuthorizationFlow obj] : ["component" Data.Aeson.Types.ToJSON..= endpointProviderObj'Component obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("connection_expiry" Data.Aeson.Types.ToJSON..=)) (endpointProviderObj'ConnectionExpiry obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("delete_token_on_disconnect" Data.Aeson.Types.ToJSON..=)) (endpointProviderObj'DeleteTokenOnDisconnect obj) : ["meta_model_name" Data.Aeson.Types.ToJSON..= endpointProviderObj'MetaModelName obj] : ["name" Data.Aeson.Types.ToJSON..= endpointProviderObj'Name obj] : ["outpost_set" Data.Aeson.Types.ToJSON..= endpointProviderObj'OutpostSet obj] : ["pk" Data.Aeson.Types.ToJSON..= endpointProviderObj'Pk obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("property_mappings" Data.Aeson.Types.ToJSON..=)) (endpointProviderObj'PropertyMappings obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("settings" Data.Aeson.Types.ToJSON..=)) (endpointProviderObj'Settings obj) : ["verbose_name" Data.Aeson.Types.ToJSON..= endpointProviderObj'VerboseName obj] : ["verbose_name_plural" Data.Aeson.Types.ToJSON..= endpointProviderObj'VerboseNamePlural obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["assigned_application_name" Data.Aeson.Types.ToJSON..= endpointProviderObj'AssignedApplicationName obj] : ["assigned_application_slug" Data.Aeson.Types.ToJSON..= endpointProviderObj'AssignedApplicationSlug obj] : ["assigned_backchannel_application_name" Data.Aeson.Types.ToJSON..= endpointProviderObj'AssignedBackchannelApplicationName obj] : ["assigned_backchannel_application_slug" Data.Aeson.Types.ToJSON..= endpointProviderObj'AssignedBackchannelApplicationSlug obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("authentication_flow" Data.Aeson.Types.ToJSON..=)) (endpointProviderObj'AuthenticationFlow obj) : ["authorization_flow" Data.Aeson.Types.ToJSON..= endpointProviderObj'AuthorizationFlow obj] : ["component" Data.Aeson.Types.ToJSON..= endpointProviderObj'Component obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("connection_expiry" Data.Aeson.Types.ToJSON..=)) (endpointProviderObj'ConnectionExpiry obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("delete_token_on_disconnect" Data.Aeson.Types.ToJSON..=)) (endpointProviderObj'DeleteTokenOnDisconnect obj) : ["meta_model_name" Data.Aeson.Types.ToJSON..= endpointProviderObj'MetaModelName obj] : ["name" Data.Aeson.Types.ToJSON..= endpointProviderObj'Name obj] : ["outpost_set" Data.Aeson.Types.ToJSON..= endpointProviderObj'OutpostSet obj] : ["pk" Data.Aeson.Types.ToJSON..= endpointProviderObj'Pk obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("property_mappings" Data.Aeson.Types.ToJSON..=)) (endpointProviderObj'PropertyMappings obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("settings" Data.Aeson.Types.ToJSON..=)) (endpointProviderObj'Settings obj) : ["verbose_name" Data.Aeson.Types.ToJSON..= endpointProviderObj'VerboseName obj] : ["verbose_name_plural" Data.Aeson.Types.ToJSON..= endpointProviderObj'VerboseNamePlural obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON EndpointProviderObj' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "EndpointProviderObj'" (\obj -> ((((((((((((((((GHC.Base.pure EndpointProviderObj' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "assigned_application_name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "assigned_application_slug")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "assigned_backchannel_application_name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "assigned_backchannel_application_slug")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "authentication_flow")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "authorization_flow")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "component")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "connection_expiry")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "delete_token_on_disconnect")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "meta_model_name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "outpost_set")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "pk")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "property_mappings")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "settings")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "verbose_name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "verbose_name_plural"))

-- | Create a new 'EndpointProviderObj'' with all required fields.
mkEndpointProviderObj' ::
  -- | 'endpointProviderObj'AssignedApplicationName'
  Data.Text.Internal.Text ->
  -- | 'endpointProviderObj'AssignedApplicationSlug'
  Data.Text.Internal.Text ->
  -- | 'endpointProviderObj'AssignedBackchannelApplicationName'
  Data.Text.Internal.Text ->
  -- | 'endpointProviderObj'AssignedBackchannelApplicationSlug'
  Data.Text.Internal.Text ->
  -- | 'endpointProviderObj'AuthorizationFlow'
  Data.Text.Internal.Text ->
  -- | 'endpointProviderObj'Component'
  Data.Text.Internal.Text ->
  -- | 'endpointProviderObj'MetaModelName'
  Data.Text.Internal.Text ->
  -- | 'endpointProviderObj'Name'
  Data.Text.Internal.Text ->
  -- | 'endpointProviderObj'OutpostSet'
  [Data.Text.Internal.Text] ->
  -- | 'endpointProviderObj'Pk'
  GHC.Types.Int ->
  -- | 'endpointProviderObj'VerboseName'
  Data.Text.Internal.Text ->
  -- | 'endpointProviderObj'VerboseNamePlural'
  Data.Text.Internal.Text ->
  EndpointProviderObj'
mkEndpointProviderObj' endpointProviderObj'AssignedApplicationName endpointProviderObj'AssignedApplicationSlug endpointProviderObj'AssignedBackchannelApplicationName endpointProviderObj'AssignedBackchannelApplicationSlug endpointProviderObj'AuthorizationFlow endpointProviderObj'Component endpointProviderObj'MetaModelName endpointProviderObj'Name endpointProviderObj'OutpostSet endpointProviderObj'Pk endpointProviderObj'VerboseName endpointProviderObj'VerboseNamePlural =
  EndpointProviderObj'
    { endpointProviderObj'AssignedApplicationName = endpointProviderObj'AssignedApplicationName,
      endpointProviderObj'AssignedApplicationSlug = endpointProviderObj'AssignedApplicationSlug,
      endpointProviderObj'AssignedBackchannelApplicationName = endpointProviderObj'AssignedBackchannelApplicationName,
      endpointProviderObj'AssignedBackchannelApplicationSlug = endpointProviderObj'AssignedBackchannelApplicationSlug,
      endpointProviderObj'AuthenticationFlow = GHC.Maybe.Nothing,
      endpointProviderObj'AuthorizationFlow = endpointProviderObj'AuthorizationFlow,
      endpointProviderObj'Component = endpointProviderObj'Component,
      endpointProviderObj'ConnectionExpiry = GHC.Maybe.Nothing,
      endpointProviderObj'DeleteTokenOnDisconnect = GHC.Maybe.Nothing,
      endpointProviderObj'MetaModelName = endpointProviderObj'MetaModelName,
      endpointProviderObj'Name = endpointProviderObj'Name,
      endpointProviderObj'OutpostSet = endpointProviderObj'OutpostSet,
      endpointProviderObj'Pk = endpointProviderObj'Pk,
      endpointProviderObj'PropertyMappings = GHC.Maybe.Nothing,
      endpointProviderObj'Settings = GHC.Maybe.Nothing,
      endpointProviderObj'VerboseName = endpointProviderObj'VerboseName,
      endpointProviderObj'VerboseNamePlural = endpointProviderObj'VerboseNamePlural
    }
