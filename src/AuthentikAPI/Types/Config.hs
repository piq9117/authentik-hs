{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the types generated from the schema Config
module AuthentikAPI.Types.Config where

import qualified AuthentikAPI.Common
import AuthentikAPI.TypeAlias
import {-# SOURCE #-} AuthentikAPI.Types.CapabilitiesEnum
import {-# SOURCE #-} AuthentikAPI.Types.ErrorReportingConfig
import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | Defines the object schema located at @components.schemas.Config@ in the specification.
--
-- Serialize authentik Config into DRF Object
data Config = Config
  { -- | cache_timeout
    configCacheTimeout :: GHC.Types.Int,
    -- | cache_timeout_flows
    configCacheTimeoutFlows :: GHC.Types.Int,
    -- | cache_timeout_policies
    configCacheTimeoutPolicies :: GHC.Types.Int,
    -- | cache_timeout_reputation
    configCacheTimeoutReputation :: GHC.Types.Int,
    -- | capabilities
    configCapabilities :: [CapabilitiesEnum],
    -- | error_reporting: Config for error reporting
    configErrorReporting :: ErrorReportingConfig
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON Config where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["cache_timeout" Data.Aeson.Types.ToJSON..= configCacheTimeout obj] : ["cache_timeout_flows" Data.Aeson.Types.ToJSON..= configCacheTimeoutFlows obj] : ["cache_timeout_policies" Data.Aeson.Types.ToJSON..= configCacheTimeoutPolicies obj] : ["cache_timeout_reputation" Data.Aeson.Types.ToJSON..= configCacheTimeoutReputation obj] : ["capabilities" Data.Aeson.Types.ToJSON..= configCapabilities obj] : ["error_reporting" Data.Aeson.Types.ToJSON..= configErrorReporting obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["cache_timeout" Data.Aeson.Types.ToJSON..= configCacheTimeout obj] : ["cache_timeout_flows" Data.Aeson.Types.ToJSON..= configCacheTimeoutFlows obj] : ["cache_timeout_policies" Data.Aeson.Types.ToJSON..= configCacheTimeoutPolicies obj] : ["cache_timeout_reputation" Data.Aeson.Types.ToJSON..= configCacheTimeoutReputation obj] : ["capabilities" Data.Aeson.Types.ToJSON..= configCapabilities obj] : ["error_reporting" Data.Aeson.Types.ToJSON..= configErrorReporting obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON Config where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "Config" (\obj -> (((((GHC.Base.pure Config GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "cache_timeout")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "cache_timeout_flows")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "cache_timeout_policies")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "cache_timeout_reputation")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "capabilities")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "error_reporting"))

-- | Create a new 'Config' with all required fields.
mkConfig ::
  -- | 'configCacheTimeout'
  GHC.Types.Int ->
  -- | 'configCacheTimeoutFlows'
  GHC.Types.Int ->
  -- | 'configCacheTimeoutPolicies'
  GHC.Types.Int ->
  -- | 'configCacheTimeoutReputation'
  GHC.Types.Int ->
  -- | 'configCapabilities'
  [CapabilitiesEnum] ->
  -- | 'configErrorReporting'
  ErrorReportingConfig ->
  Config
mkConfig configCacheTimeout configCacheTimeoutFlows configCacheTimeoutPolicies configCacheTimeoutReputation configCapabilities configErrorReporting =
  Config
    { configCacheTimeout = configCacheTimeout,
      configCacheTimeoutFlows = configCacheTimeoutFlows,
      configCacheTimeoutPolicies = configCacheTimeoutPolicies,
      configCacheTimeoutReputation = configCacheTimeoutReputation,
      configCapabilities = configCapabilities,
      configErrorReporting = configErrorReporting
    }
