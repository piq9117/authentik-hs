{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the types generated from the schema PatchedRedirectStageRequest
module AuthentikAPI.Types.PatchedRedirectStageRequest where

import qualified AuthentikAPI.Common
import AuthentikAPI.TypeAlias
import {-# SOURCE #-} AuthentikAPI.Types.FlowSetRequest
import {-# SOURCE #-} AuthentikAPI.Types.RedirectStageModeEnum
import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | Defines the object schema located at @components.schemas.PatchedRedirectStageRequest@ in the specification.
--
-- RedirectStage Serializer
data PatchedRedirectStageRequest = PatchedRedirectStageRequest
  { -- | flow_set
    patchedRedirectStageRequestFlowSet :: (GHC.Maybe.Maybe [FlowSetRequest]),
    -- | keep_context
    patchedRedirectStageRequestKeepContext :: (GHC.Maybe.Maybe GHC.Types.Bool),
    -- | mode
    patchedRedirectStageRequestMode :: (GHC.Maybe.Maybe RedirectStageModeEnum),
    -- | name
    --
    -- Constraints:
    --
    -- * Minimum length of 1
    patchedRedirectStageRequestName :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | target_flow
    patchedRedirectStageRequestTargetFlow :: (GHC.Maybe.Maybe (AuthentikAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | target_static
    patchedRedirectStageRequestTargetStatic :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PatchedRedirectStageRequest where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("flow_set" Data.Aeson.Types.ToJSON..=)) (patchedRedirectStageRequestFlowSet obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("keep_context" Data.Aeson.Types.ToJSON..=)) (patchedRedirectStageRequestKeepContext obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("mode" Data.Aeson.Types.ToJSON..=)) (patchedRedirectStageRequestMode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("name" Data.Aeson.Types.ToJSON..=)) (patchedRedirectStageRequestName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("target_flow" Data.Aeson.Types.ToJSON..=)) (patchedRedirectStageRequestTargetFlow obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("target_static" Data.Aeson.Types.ToJSON..=)) (patchedRedirectStageRequestTargetStatic obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("flow_set" Data.Aeson.Types.ToJSON..=)) (patchedRedirectStageRequestFlowSet obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("keep_context" Data.Aeson.Types.ToJSON..=)) (patchedRedirectStageRequestKeepContext obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("mode" Data.Aeson.Types.ToJSON..=)) (patchedRedirectStageRequestMode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("name" Data.Aeson.Types.ToJSON..=)) (patchedRedirectStageRequestName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("target_flow" Data.Aeson.Types.ToJSON..=)) (patchedRedirectStageRequestTargetFlow obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("target_static" Data.Aeson.Types.ToJSON..=)) (patchedRedirectStageRequestTargetStatic obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PatchedRedirectStageRequest where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PatchedRedirectStageRequest" (\obj -> (((((GHC.Base.pure PatchedRedirectStageRequest GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "flow_set")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "keep_context")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "mode")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "target_flow")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "target_static"))

-- | Create a new 'PatchedRedirectStageRequest' with all required fields.
mkPatchedRedirectStageRequest :: PatchedRedirectStageRequest
mkPatchedRedirectStageRequest =
  PatchedRedirectStageRequest
    { patchedRedirectStageRequestFlowSet = GHC.Maybe.Nothing,
      patchedRedirectStageRequestKeepContext = GHC.Maybe.Nothing,
      patchedRedirectStageRequestMode = GHC.Maybe.Nothing,
      patchedRedirectStageRequestName = GHC.Maybe.Nothing,
      patchedRedirectStageRequestTargetFlow = GHC.Maybe.Nothing,
      patchedRedirectStageRequestTargetStatic = GHC.Maybe.Nothing
    }
