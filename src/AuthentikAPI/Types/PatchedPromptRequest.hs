{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the types generated from the schema PatchedPromptRequest
module AuthentikAPI.Types.PatchedPromptRequest where

import qualified AuthentikAPI.Common
import AuthentikAPI.TypeAlias
import {-# SOURCE #-} AuthentikAPI.Types.PromptTypeEnum
import {-# SOURCE #-} AuthentikAPI.Types.StageRequest
import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | Defines the object schema located at @components.schemas.PatchedPromptRequest@ in the specification.
--
-- Prompt Serializer
data PatchedPromptRequest = PatchedPromptRequest
  { -- | field_key: Name of the form field, also used to store the value
    --
    -- Constraints:
    --
    -- * Minimum length of 1
    patchedPromptRequestFieldKey :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | initial_value: Optionally pre-fill the input with an initial value. When creating a fixed choice field, enable interpreting as expression and return a list to return multiple default choices.
    patchedPromptRequestInitialValue :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | initial_value_expression
    patchedPromptRequestInitialValueExpression :: (GHC.Maybe.Maybe GHC.Types.Bool),
    -- | label
    --
    -- Constraints:
    --
    -- * Minimum length of 1
    patchedPromptRequestLabel :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | name
    --
    -- Constraints:
    --
    -- * Minimum length of 1
    patchedPromptRequestName :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | order
    --
    -- Constraints:
    --
    -- * Maxium  of 2.1474836e9
    -- * Minimum  of -2.1474836e9
    patchedPromptRequestOrder :: (GHC.Maybe.Maybe GHC.Types.Int),
    -- | placeholder: Optionally provide a short hint that describes the expected input value. When creating a fixed choice field, enable interpreting as expression and return a list to return multiple choices.
    patchedPromptRequestPlaceholder :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | placeholder_expression
    patchedPromptRequestPlaceholderExpression :: (GHC.Maybe.Maybe GHC.Types.Bool),
    -- | promptstage_set
    patchedPromptRequestPromptstageSet :: (GHC.Maybe.Maybe [StageRequest]),
    -- | required
    patchedPromptRequestRequired :: (GHC.Maybe.Maybe GHC.Types.Bool),
    -- | sub_text
    patchedPromptRequestSubText :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | type
    patchedPromptRequestType :: (GHC.Maybe.Maybe PromptTypeEnum)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PatchedPromptRequest where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("field_key" Data.Aeson.Types.ToJSON..=)) (patchedPromptRequestFieldKey obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("initial_value" Data.Aeson.Types.ToJSON..=)) (patchedPromptRequestInitialValue obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("initial_value_expression" Data.Aeson.Types.ToJSON..=)) (patchedPromptRequestInitialValueExpression obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("label" Data.Aeson.Types.ToJSON..=)) (patchedPromptRequestLabel obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("name" Data.Aeson.Types.ToJSON..=)) (patchedPromptRequestName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("order" Data.Aeson.Types.ToJSON..=)) (patchedPromptRequestOrder obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("placeholder" Data.Aeson.Types.ToJSON..=)) (patchedPromptRequestPlaceholder obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("placeholder_expression" Data.Aeson.Types.ToJSON..=)) (patchedPromptRequestPlaceholderExpression obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("promptstage_set" Data.Aeson.Types.ToJSON..=)) (patchedPromptRequestPromptstageSet obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("required" Data.Aeson.Types.ToJSON..=)) (patchedPromptRequestRequired obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("sub_text" Data.Aeson.Types.ToJSON..=)) (patchedPromptRequestSubText obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("type" Data.Aeson.Types.ToJSON..=)) (patchedPromptRequestType obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("field_key" Data.Aeson.Types.ToJSON..=)) (patchedPromptRequestFieldKey obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("initial_value" Data.Aeson.Types.ToJSON..=)) (patchedPromptRequestInitialValue obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("initial_value_expression" Data.Aeson.Types.ToJSON..=)) (patchedPromptRequestInitialValueExpression obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("label" Data.Aeson.Types.ToJSON..=)) (patchedPromptRequestLabel obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("name" Data.Aeson.Types.ToJSON..=)) (patchedPromptRequestName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("order" Data.Aeson.Types.ToJSON..=)) (patchedPromptRequestOrder obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("placeholder" Data.Aeson.Types.ToJSON..=)) (patchedPromptRequestPlaceholder obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("placeholder_expression" Data.Aeson.Types.ToJSON..=)) (patchedPromptRequestPlaceholderExpression obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("promptstage_set" Data.Aeson.Types.ToJSON..=)) (patchedPromptRequestPromptstageSet obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("required" Data.Aeson.Types.ToJSON..=)) (patchedPromptRequestRequired obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("sub_text" Data.Aeson.Types.ToJSON..=)) (patchedPromptRequestSubText obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("type" Data.Aeson.Types.ToJSON..=)) (patchedPromptRequestType obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PatchedPromptRequest where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PatchedPromptRequest" (\obj -> (((((((((((GHC.Base.pure PatchedPromptRequest GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "field_key")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "initial_value")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "initial_value_expression")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "label")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "order")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "placeholder")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "placeholder_expression")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "promptstage_set")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "required")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "sub_text")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "type"))

-- | Create a new 'PatchedPromptRequest' with all required fields.
mkPatchedPromptRequest :: PatchedPromptRequest
mkPatchedPromptRequest =
  PatchedPromptRequest
    { patchedPromptRequestFieldKey = GHC.Maybe.Nothing,
      patchedPromptRequestInitialValue = GHC.Maybe.Nothing,
      patchedPromptRequestInitialValueExpression = GHC.Maybe.Nothing,
      patchedPromptRequestLabel = GHC.Maybe.Nothing,
      patchedPromptRequestName = GHC.Maybe.Nothing,
      patchedPromptRequestOrder = GHC.Maybe.Nothing,
      patchedPromptRequestPlaceholder = GHC.Maybe.Nothing,
      patchedPromptRequestPlaceholderExpression = GHC.Maybe.Nothing,
      patchedPromptRequestPromptstageSet = GHC.Maybe.Nothing,
      patchedPromptRequestRequired = GHC.Maybe.Nothing,
      patchedPromptRequestSubText = GHC.Maybe.Nothing,
      patchedPromptRequestType = GHC.Maybe.Nothing
    }
