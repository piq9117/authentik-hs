{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the types generated from the schema PatchedDummyPolicyRequest
module AuthentikAPI.Types.PatchedDummyPolicyRequest where

import qualified AuthentikAPI.Common
import AuthentikAPI.TypeAlias
import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | Defines the object schema located at @components.schemas.PatchedDummyPolicyRequest@ in the specification.
--
-- Dummy Policy Serializer
data PatchedDummyPolicyRequest = PatchedDummyPolicyRequest
  { -- | execution_logging: When this option is enabled, all executions of this policy will be logged. By default, only execution errors are logged.
    patchedDummyPolicyRequestExecutionLogging :: (GHC.Maybe.Maybe GHC.Types.Bool),
    -- | name
    --
    -- Constraints:
    --
    -- * Minimum length of 1
    patchedDummyPolicyRequestName :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | result
    patchedDummyPolicyRequestResult :: (GHC.Maybe.Maybe GHC.Types.Bool),
    -- | wait_max
    --
    -- Constraints:
    --
    -- * Maxium  of 2.1474836e9
    -- * Minimum  of -2.1474836e9
    patchedDummyPolicyRequestWaitMax :: (GHC.Maybe.Maybe GHC.Types.Int),
    -- | wait_min
    --
    -- Constraints:
    --
    -- * Maxium  of 2.1474836e9
    -- * Minimum  of -2.1474836e9
    patchedDummyPolicyRequestWaitMin :: (GHC.Maybe.Maybe GHC.Types.Int)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PatchedDummyPolicyRequest where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("execution_logging" Data.Aeson.Types.ToJSON..=)) (patchedDummyPolicyRequestExecutionLogging obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("name" Data.Aeson.Types.ToJSON..=)) (patchedDummyPolicyRequestName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("result" Data.Aeson.Types.ToJSON..=)) (patchedDummyPolicyRequestResult obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("wait_max" Data.Aeson.Types.ToJSON..=)) (patchedDummyPolicyRequestWaitMax obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("wait_min" Data.Aeson.Types.ToJSON..=)) (patchedDummyPolicyRequestWaitMin obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("execution_logging" Data.Aeson.Types.ToJSON..=)) (patchedDummyPolicyRequestExecutionLogging obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("name" Data.Aeson.Types.ToJSON..=)) (patchedDummyPolicyRequestName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("result" Data.Aeson.Types.ToJSON..=)) (patchedDummyPolicyRequestResult obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("wait_max" Data.Aeson.Types.ToJSON..=)) (patchedDummyPolicyRequestWaitMax obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("wait_min" Data.Aeson.Types.ToJSON..=)) (patchedDummyPolicyRequestWaitMin obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PatchedDummyPolicyRequest where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PatchedDummyPolicyRequest" (\obj -> ((((GHC.Base.pure PatchedDummyPolicyRequest GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "execution_logging")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "result")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "wait_max")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "wait_min"))

-- | Create a new 'PatchedDummyPolicyRequest' with all required fields.
mkPatchedDummyPolicyRequest :: PatchedDummyPolicyRequest
mkPatchedDummyPolicyRequest =
  PatchedDummyPolicyRequest
    { patchedDummyPolicyRequestExecutionLogging = GHC.Maybe.Nothing,
      patchedDummyPolicyRequestName = GHC.Maybe.Nothing,
      patchedDummyPolicyRequestResult = GHC.Maybe.Nothing,
      patchedDummyPolicyRequestWaitMax = GHC.Maybe.Nothing,
      patchedDummyPolicyRequestWaitMin = GHC.Maybe.Nothing
    }
