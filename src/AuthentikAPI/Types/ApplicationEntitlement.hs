{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the types generated from the schema ApplicationEntitlement
module AuthentikAPI.Types.ApplicationEntitlement where

import qualified AuthentikAPI.Common
import AuthentikAPI.TypeAlias
import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | Defines the object schema located at @components.schemas.ApplicationEntitlement@ in the specification.
--
-- ApplicationEntitlement Serializer
data ApplicationEntitlement = ApplicationEntitlement
  { -- | app
    applicationEntitlementApp :: Data.Text.Internal.Text,
    -- | attributes
    applicationEntitlementAttributes :: (GHC.Maybe.Maybe Data.Aeson.Types.Internal.Object),
    -- | name
    applicationEntitlementName :: Data.Text.Internal.Text,
    -- | pbm_uuid
    applicationEntitlementPbmUuid :: Data.Text.Internal.Text
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON ApplicationEntitlement where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["app" Data.Aeson.Types.ToJSON..= applicationEntitlementApp obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("attributes" Data.Aeson.Types.ToJSON..=)) (applicationEntitlementAttributes obj) : ["name" Data.Aeson.Types.ToJSON..= applicationEntitlementName obj] : ["pbm_uuid" Data.Aeson.Types.ToJSON..= applicationEntitlementPbmUuid obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["app" Data.Aeson.Types.ToJSON..= applicationEntitlementApp obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("attributes" Data.Aeson.Types.ToJSON..=)) (applicationEntitlementAttributes obj) : ["name" Data.Aeson.Types.ToJSON..= applicationEntitlementName obj] : ["pbm_uuid" Data.Aeson.Types.ToJSON..= applicationEntitlementPbmUuid obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON ApplicationEntitlement where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "ApplicationEntitlement" (\obj -> (((GHC.Base.pure ApplicationEntitlement GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "app")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "attributes")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "pbm_uuid"))

-- | Create a new 'ApplicationEntitlement' with all required fields.
mkApplicationEntitlement ::
  -- | 'applicationEntitlementApp'
  Data.Text.Internal.Text ->
  -- | 'applicationEntitlementName'
  Data.Text.Internal.Text ->
  -- | 'applicationEntitlementPbmUuid'
  Data.Text.Internal.Text ->
  ApplicationEntitlement
mkApplicationEntitlement applicationEntitlementApp applicationEntitlementName applicationEntitlementPbmUuid =
  ApplicationEntitlement
    { applicationEntitlementApp = applicationEntitlementApp,
      applicationEntitlementAttributes = GHC.Maybe.Nothing,
      applicationEntitlementName = applicationEntitlementName,
      applicationEntitlementPbmUuid = applicationEntitlementPbmUuid
    }
