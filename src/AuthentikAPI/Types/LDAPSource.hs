{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the types generated from the schema LDAPSource
module AuthentikAPI.Types.LDAPSource where

import qualified AuthentikAPI.Common
import AuthentikAPI.TypeAlias
import {-# SOURCE #-} AuthentikAPI.Types.PolicyEngineMode
import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | Defines the object schema located at @components.schemas.LDAPSource@ in the specification.
--
-- LDAP Source Serializer
data LDAPSource = LDAPSource
  { -- | additional_group_dn: Prepended to Base DN for Group-queries.
    lDAPSourceAdditionalGroupDn :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | additional_user_dn: Prepended to Base DN for User-queries.
    lDAPSourceAdditionalUserDn :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | authentication_flow: Flow to use when authenticating existing users.
    lDAPSourceAuthenticationFlow :: (GHC.Maybe.Maybe (AuthentikAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | base_dn
    lDAPSourceBaseDn :: Data.Text.Internal.Text,
    -- | bind_cn
    lDAPSourceBindCn :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | client_certificate: Client certificate to authenticate against the LDAP Server\'s Certificate.
    lDAPSourceClientCertificate :: (GHC.Maybe.Maybe (AuthentikAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | component: Get object component so that we know how to edit the object
    lDAPSourceComponent :: Data.Text.Internal.Text,
    -- | connectivity: Get cached source connectivity
    lDAPSourceConnectivity :: (AuthentikAPI.Common.Nullable Data.Aeson.Types.Internal.Object),
    -- | enabled
    lDAPSourceEnabled :: (GHC.Maybe.Maybe GHC.Types.Bool),
    -- | enrollment_flow: Flow to use when enrolling new users.
    lDAPSourceEnrollmentFlow :: (GHC.Maybe.Maybe (AuthentikAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | group_membership_field: Field which contains members of a group.
    lDAPSourceGroupMembershipField :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | group_object_filter: Consider Objects matching this filter to be Groups.
    lDAPSourceGroupObjectFilter :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | group_property_mappings
    lDAPSourceGroupPropertyMappings :: (GHC.Maybe.Maybe [Data.Text.Internal.Text]),
    -- | icon
    lDAPSourceIcon :: Data.Text.Internal.Text,
    -- | lookup_groups_from_user: Lookup group membership based on a user attribute instead of a group attribute. This allows nested group resolution on systems like FreeIPA and Active Directory
    lDAPSourceLookupGroupsFromUser :: (GHC.Maybe.Maybe GHC.Types.Bool),
    -- | managed: Objects that are managed by authentik. These objects are created and updated automatically. This flag only indicates that an object can be overwritten by migrations. You can still modify the objects via the API, but expect changes to be overwritten in a later update.
    lDAPSourceManaged :: (AuthentikAPI.Common.Nullable Data.Text.Internal.Text),
    -- | meta_model_name: Return internal model name
    lDAPSourceMetaModelName :: Data.Text.Internal.Text,
    -- | name: Source\'s display Name.
    lDAPSourceName :: Data.Text.Internal.Text,
    -- | object_uniqueness_field: Field which contains a unique Identifier.
    lDAPSourceObjectUniquenessField :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | password_login_update_internal_password: Update internal authentik password when login succeeds with LDAP
    lDAPSourcePasswordLoginUpdateInternalPassword :: (GHC.Maybe.Maybe GHC.Types.Bool),
    -- | peer_certificate: Optionally verify the LDAP Server\'s Certificate against the CA Chain in this keypair.
    lDAPSourcePeerCertificate :: (GHC.Maybe.Maybe (AuthentikAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | pk
    lDAPSourcePk :: Data.Text.Internal.Text,
    -- | policy_engine_mode
    lDAPSourcePolicyEngineMode :: (GHC.Maybe.Maybe PolicyEngineMode),
    -- | server_uri
    lDAPSourceServerUri :: Data.Text.Internal.Text,
    -- | slug: Internal source name, used in URLs.
    --
    -- Constraints:
    --
    -- * Maximum length of 50
    -- * Must match pattern \'^[-a-zA-Z0-9_]+\$\'
    lDAPSourceSlug :: Data.Text.Internal.Text,
    -- | sni
    lDAPSourceSni :: (GHC.Maybe.Maybe GHC.Types.Bool),
    -- | start_tls
    lDAPSourceStartTls :: (GHC.Maybe.Maybe GHC.Types.Bool),
    -- | sync_groups
    lDAPSourceSyncGroups :: (GHC.Maybe.Maybe GHC.Types.Bool),
    -- | sync_parent_group
    lDAPSourceSyncParentGroup :: (GHC.Maybe.Maybe (AuthentikAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | sync_users
    lDAPSourceSyncUsers :: (GHC.Maybe.Maybe GHC.Types.Bool),
    -- | sync_users_password: When a user changes their password, sync it back to LDAP. This can only be enabled on a single LDAP source.
    lDAPSourceSyncUsersPassword :: (GHC.Maybe.Maybe GHC.Types.Bool),
    -- | user_matching_mode: How the source determines if an existing user should be authenticated or a new user enrolled.
    lDAPSourceUserMatchingMode :: (GHC.Maybe.Maybe Data.Aeson.Types.Internal.Object),
    -- | user_object_filter: Consider Objects matching this filter to be Users.
    lDAPSourceUserObjectFilter :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | user_path_template
    lDAPSourceUserPathTemplate :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | user_property_mappings
    lDAPSourceUserPropertyMappings :: (GHC.Maybe.Maybe [Data.Text.Internal.Text]),
    -- | verbose_name: Return object\'s verbose_name
    lDAPSourceVerboseName :: Data.Text.Internal.Text,
    -- | verbose_name_plural: Return object\'s plural verbose_name
    lDAPSourceVerboseNamePlural :: Data.Text.Internal.Text
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON LDAPSource where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("additional_group_dn" Data.Aeson.Types.ToJSON..=)) (lDAPSourceAdditionalGroupDn obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("additional_user_dn" Data.Aeson.Types.ToJSON..=)) (lDAPSourceAdditionalUserDn obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("authentication_flow" Data.Aeson.Types.ToJSON..=)) (lDAPSourceAuthenticationFlow obj) : ["base_dn" Data.Aeson.Types.ToJSON..= lDAPSourceBaseDn obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("bind_cn" Data.Aeson.Types.ToJSON..=)) (lDAPSourceBindCn obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("client_certificate" Data.Aeson.Types.ToJSON..=)) (lDAPSourceClientCertificate obj) : ["component" Data.Aeson.Types.ToJSON..= lDAPSourceComponent obj] : ["connectivity" Data.Aeson.Types.ToJSON..= lDAPSourceConnectivity obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("enabled" Data.Aeson.Types.ToJSON..=)) (lDAPSourceEnabled obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("enrollment_flow" Data.Aeson.Types.ToJSON..=)) (lDAPSourceEnrollmentFlow obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("group_membership_field" Data.Aeson.Types.ToJSON..=)) (lDAPSourceGroupMembershipField obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("group_object_filter" Data.Aeson.Types.ToJSON..=)) (lDAPSourceGroupObjectFilter obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("group_property_mappings" Data.Aeson.Types.ToJSON..=)) (lDAPSourceGroupPropertyMappings obj) : ["icon" Data.Aeson.Types.ToJSON..= lDAPSourceIcon obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("lookup_groups_from_user" Data.Aeson.Types.ToJSON..=)) (lDAPSourceLookupGroupsFromUser obj) : ["managed" Data.Aeson.Types.ToJSON..= lDAPSourceManaged obj] : ["meta_model_name" Data.Aeson.Types.ToJSON..= lDAPSourceMetaModelName obj] : ["name" Data.Aeson.Types.ToJSON..= lDAPSourceName obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("object_uniqueness_field" Data.Aeson.Types.ToJSON..=)) (lDAPSourceObjectUniquenessField obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("password_login_update_internal_password" Data.Aeson.Types.ToJSON..=)) (lDAPSourcePasswordLoginUpdateInternalPassword obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("peer_certificate" Data.Aeson.Types.ToJSON..=)) (lDAPSourcePeerCertificate obj) : ["pk" Data.Aeson.Types.ToJSON..= lDAPSourcePk obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("policy_engine_mode" Data.Aeson.Types.ToJSON..=)) (lDAPSourcePolicyEngineMode obj) : ["server_uri" Data.Aeson.Types.ToJSON..= lDAPSourceServerUri obj] : ["slug" Data.Aeson.Types.ToJSON..= lDAPSourceSlug obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("sni" Data.Aeson.Types.ToJSON..=)) (lDAPSourceSni obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("start_tls" Data.Aeson.Types.ToJSON..=)) (lDAPSourceStartTls obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("sync_groups" Data.Aeson.Types.ToJSON..=)) (lDAPSourceSyncGroups obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("sync_parent_group" Data.Aeson.Types.ToJSON..=)) (lDAPSourceSyncParentGroup obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("sync_users" Data.Aeson.Types.ToJSON..=)) (lDAPSourceSyncUsers obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("sync_users_password" Data.Aeson.Types.ToJSON..=)) (lDAPSourceSyncUsersPassword obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("user_matching_mode" Data.Aeson.Types.ToJSON..=)) (lDAPSourceUserMatchingMode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("user_object_filter" Data.Aeson.Types.ToJSON..=)) (lDAPSourceUserObjectFilter obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("user_path_template" Data.Aeson.Types.ToJSON..=)) (lDAPSourceUserPathTemplate obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("user_property_mappings" Data.Aeson.Types.ToJSON..=)) (lDAPSourceUserPropertyMappings obj) : ["verbose_name" Data.Aeson.Types.ToJSON..= lDAPSourceVerboseName obj] : ["verbose_name_plural" Data.Aeson.Types.ToJSON..= lDAPSourceVerboseNamePlural obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("additional_group_dn" Data.Aeson.Types.ToJSON..=)) (lDAPSourceAdditionalGroupDn obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("additional_user_dn" Data.Aeson.Types.ToJSON..=)) (lDAPSourceAdditionalUserDn obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("authentication_flow" Data.Aeson.Types.ToJSON..=)) (lDAPSourceAuthenticationFlow obj) : ["base_dn" Data.Aeson.Types.ToJSON..= lDAPSourceBaseDn obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("bind_cn" Data.Aeson.Types.ToJSON..=)) (lDAPSourceBindCn obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("client_certificate" Data.Aeson.Types.ToJSON..=)) (lDAPSourceClientCertificate obj) : ["component" Data.Aeson.Types.ToJSON..= lDAPSourceComponent obj] : ["connectivity" Data.Aeson.Types.ToJSON..= lDAPSourceConnectivity obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("enabled" Data.Aeson.Types.ToJSON..=)) (lDAPSourceEnabled obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("enrollment_flow" Data.Aeson.Types.ToJSON..=)) (lDAPSourceEnrollmentFlow obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("group_membership_field" Data.Aeson.Types.ToJSON..=)) (lDAPSourceGroupMembershipField obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("group_object_filter" Data.Aeson.Types.ToJSON..=)) (lDAPSourceGroupObjectFilter obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("group_property_mappings" Data.Aeson.Types.ToJSON..=)) (lDAPSourceGroupPropertyMappings obj) : ["icon" Data.Aeson.Types.ToJSON..= lDAPSourceIcon obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("lookup_groups_from_user" Data.Aeson.Types.ToJSON..=)) (lDAPSourceLookupGroupsFromUser obj) : ["managed" Data.Aeson.Types.ToJSON..= lDAPSourceManaged obj] : ["meta_model_name" Data.Aeson.Types.ToJSON..= lDAPSourceMetaModelName obj] : ["name" Data.Aeson.Types.ToJSON..= lDAPSourceName obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("object_uniqueness_field" Data.Aeson.Types.ToJSON..=)) (lDAPSourceObjectUniquenessField obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("password_login_update_internal_password" Data.Aeson.Types.ToJSON..=)) (lDAPSourcePasswordLoginUpdateInternalPassword obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("peer_certificate" Data.Aeson.Types.ToJSON..=)) (lDAPSourcePeerCertificate obj) : ["pk" Data.Aeson.Types.ToJSON..= lDAPSourcePk obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("policy_engine_mode" Data.Aeson.Types.ToJSON..=)) (lDAPSourcePolicyEngineMode obj) : ["server_uri" Data.Aeson.Types.ToJSON..= lDAPSourceServerUri obj] : ["slug" Data.Aeson.Types.ToJSON..= lDAPSourceSlug obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("sni" Data.Aeson.Types.ToJSON..=)) (lDAPSourceSni obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("start_tls" Data.Aeson.Types.ToJSON..=)) (lDAPSourceStartTls obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("sync_groups" Data.Aeson.Types.ToJSON..=)) (lDAPSourceSyncGroups obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("sync_parent_group" Data.Aeson.Types.ToJSON..=)) (lDAPSourceSyncParentGroup obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("sync_users" Data.Aeson.Types.ToJSON..=)) (lDAPSourceSyncUsers obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("sync_users_password" Data.Aeson.Types.ToJSON..=)) (lDAPSourceSyncUsersPassword obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("user_matching_mode" Data.Aeson.Types.ToJSON..=)) (lDAPSourceUserMatchingMode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("user_object_filter" Data.Aeson.Types.ToJSON..=)) (lDAPSourceUserObjectFilter obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("user_path_template" Data.Aeson.Types.ToJSON..=)) (lDAPSourceUserPathTemplate obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("user_property_mappings" Data.Aeson.Types.ToJSON..=)) (lDAPSourceUserPropertyMappings obj) : ["verbose_name" Data.Aeson.Types.ToJSON..= lDAPSourceVerboseName obj] : ["verbose_name_plural" Data.Aeson.Types.ToJSON..= lDAPSourceVerboseNamePlural obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON LDAPSource where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "LDAPSource" (\obj -> ((((((((((((((((((((((((((((((((((((GHC.Base.pure LDAPSource GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "additional_group_dn")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "additional_user_dn")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "authentication_flow")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "base_dn")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "bind_cn")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "client_certificate")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "component")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "connectivity")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "enabled")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "enrollment_flow")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "group_membership_field")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "group_object_filter")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "group_property_mappings")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "icon")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "lookup_groups_from_user")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "managed")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "meta_model_name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "object_uniqueness_field")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "password_login_update_internal_password")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "peer_certificate")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "pk")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "policy_engine_mode")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "server_uri")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "slug")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "sni")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "start_tls")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "sync_groups")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "sync_parent_group")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "sync_users")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "sync_users_password")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "user_matching_mode")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "user_object_filter")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "user_path_template")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "user_property_mappings")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "verbose_name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "verbose_name_plural"))

-- | Create a new 'LDAPSource' with all required fields.
mkLDAPSource ::
  -- | 'lDAPSourceBaseDn'
  Data.Text.Internal.Text ->
  -- | 'lDAPSourceComponent'
  Data.Text.Internal.Text ->
  -- | 'lDAPSourceConnectivity'
  AuthentikAPI.Common.Nullable Data.Aeson.Types.Internal.Object ->
  -- | 'lDAPSourceIcon'
  Data.Text.Internal.Text ->
  -- | 'lDAPSourceManaged'
  AuthentikAPI.Common.Nullable Data.Text.Internal.Text ->
  -- | 'lDAPSourceMetaModelName'
  Data.Text.Internal.Text ->
  -- | 'lDAPSourceName'
  Data.Text.Internal.Text ->
  -- | 'lDAPSourcePk'
  Data.Text.Internal.Text ->
  -- | 'lDAPSourceServerUri'
  Data.Text.Internal.Text ->
  -- | 'lDAPSourceSlug'
  Data.Text.Internal.Text ->
  -- | 'lDAPSourceVerboseName'
  Data.Text.Internal.Text ->
  -- | 'lDAPSourceVerboseNamePlural'
  Data.Text.Internal.Text ->
  LDAPSource
mkLDAPSource lDAPSourceBaseDn lDAPSourceComponent lDAPSourceConnectivity lDAPSourceIcon lDAPSourceManaged lDAPSourceMetaModelName lDAPSourceName lDAPSourcePk lDAPSourceServerUri lDAPSourceSlug lDAPSourceVerboseName lDAPSourceVerboseNamePlural =
  LDAPSource
    { lDAPSourceAdditionalGroupDn = GHC.Maybe.Nothing,
      lDAPSourceAdditionalUserDn = GHC.Maybe.Nothing,
      lDAPSourceAuthenticationFlow = GHC.Maybe.Nothing,
      lDAPSourceBaseDn = lDAPSourceBaseDn,
      lDAPSourceBindCn = GHC.Maybe.Nothing,
      lDAPSourceClientCertificate = GHC.Maybe.Nothing,
      lDAPSourceComponent = lDAPSourceComponent,
      lDAPSourceConnectivity = lDAPSourceConnectivity,
      lDAPSourceEnabled = GHC.Maybe.Nothing,
      lDAPSourceEnrollmentFlow = GHC.Maybe.Nothing,
      lDAPSourceGroupMembershipField = GHC.Maybe.Nothing,
      lDAPSourceGroupObjectFilter = GHC.Maybe.Nothing,
      lDAPSourceGroupPropertyMappings = GHC.Maybe.Nothing,
      lDAPSourceIcon = lDAPSourceIcon,
      lDAPSourceLookupGroupsFromUser = GHC.Maybe.Nothing,
      lDAPSourceManaged = lDAPSourceManaged,
      lDAPSourceMetaModelName = lDAPSourceMetaModelName,
      lDAPSourceName = lDAPSourceName,
      lDAPSourceObjectUniquenessField = GHC.Maybe.Nothing,
      lDAPSourcePasswordLoginUpdateInternalPassword = GHC.Maybe.Nothing,
      lDAPSourcePeerCertificate = GHC.Maybe.Nothing,
      lDAPSourcePk = lDAPSourcePk,
      lDAPSourcePolicyEngineMode = GHC.Maybe.Nothing,
      lDAPSourceServerUri = lDAPSourceServerUri,
      lDAPSourceSlug = lDAPSourceSlug,
      lDAPSourceSni = GHC.Maybe.Nothing,
      lDAPSourceStartTls = GHC.Maybe.Nothing,
      lDAPSourceSyncGroups = GHC.Maybe.Nothing,
      lDAPSourceSyncParentGroup = GHC.Maybe.Nothing,
      lDAPSourceSyncUsers = GHC.Maybe.Nothing,
      lDAPSourceSyncUsersPassword = GHC.Maybe.Nothing,
      lDAPSourceUserMatchingMode = GHC.Maybe.Nothing,
      lDAPSourceUserObjectFilter = GHC.Maybe.Nothing,
      lDAPSourceUserPathTemplate = GHC.Maybe.Nothing,
      lDAPSourceUserPropertyMappings = GHC.Maybe.Nothing,
      lDAPSourceVerboseName = lDAPSourceVerboseName,
      lDAPSourceVerboseNamePlural = lDAPSourceVerboseNamePlural
    }
