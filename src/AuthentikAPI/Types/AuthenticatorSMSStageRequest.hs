{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the types generated from the schema AuthenticatorSMSStageRequest
module AuthentikAPI.Types.AuthenticatorSMSStageRequest where

import qualified AuthentikAPI.Common
import AuthentikAPI.TypeAlias
import {-# SOURCE #-} AuthentikAPI.Types.AuthTypeEnum
import {-# SOURCE #-} AuthentikAPI.Types.FlowSetRequest
import {-# SOURCE #-} AuthentikAPI.Types.ProviderEnum
import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | Defines the object schema located at @components.schemas.AuthenticatorSMSStageRequest@ in the specification.
--
-- AuthenticatorSMSStage Serializer
data AuthenticatorSMSStageRequest = AuthenticatorSMSStageRequest
  { -- | account_sid
    --
    -- Constraints:
    --
    -- * Minimum length of 1
    authenticatorSMSStageRequestAccountSid :: Data.Text.Internal.Text,
    -- | auth
    --
    -- Constraints:
    --
    -- * Minimum length of 1
    authenticatorSMSStageRequestAuth :: Data.Text.Internal.Text,
    -- | auth_password
    authenticatorSMSStageRequestAuthPassword :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | auth_type
    authenticatorSMSStageRequestAuthType :: (GHC.Maybe.Maybe AuthTypeEnum),
    -- | configure_flow: Flow used by an authenticated user to configure this Stage. If empty, user will not be able to configure this stage.
    authenticatorSMSStageRequestConfigureFlow :: (GHC.Maybe.Maybe (AuthentikAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | flow_set
    authenticatorSMSStageRequestFlowSet :: (GHC.Maybe.Maybe [FlowSetRequest]),
    -- | friendly_name
    --
    -- Constraints:
    --
    -- * Minimum length of 1
    authenticatorSMSStageRequestFriendlyName :: (GHC.Maybe.Maybe (AuthentikAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | from_number
    --
    -- Constraints:
    --
    -- * Minimum length of 1
    authenticatorSMSStageRequestFromNumber :: Data.Text.Internal.Text,
    -- | mapping: Optionally modify the payload being sent to custom providers.
    authenticatorSMSStageRequestMapping :: (GHC.Maybe.Maybe (AuthentikAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | name
    --
    -- Constraints:
    --
    -- * Minimum length of 1
    authenticatorSMSStageRequestName :: Data.Text.Internal.Text,
    -- | provider
    authenticatorSMSStageRequestProvider :: ProviderEnum,
    -- | verify_only: When enabled, the Phone number is only used during enrollment to verify the users authenticity. Only a hash of the phone number is saved to ensure it is not reused in the future.
    authenticatorSMSStageRequestVerifyOnly :: (GHC.Maybe.Maybe GHC.Types.Bool)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON AuthenticatorSMSStageRequest where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["account_sid" Data.Aeson.Types.ToJSON..= authenticatorSMSStageRequestAccountSid obj] : ["auth" Data.Aeson.Types.ToJSON..= authenticatorSMSStageRequestAuth obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("auth_password" Data.Aeson.Types.ToJSON..=)) (authenticatorSMSStageRequestAuthPassword obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("auth_type" Data.Aeson.Types.ToJSON..=)) (authenticatorSMSStageRequestAuthType obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("configure_flow" Data.Aeson.Types.ToJSON..=)) (authenticatorSMSStageRequestConfigureFlow obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("flow_set" Data.Aeson.Types.ToJSON..=)) (authenticatorSMSStageRequestFlowSet obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("friendly_name" Data.Aeson.Types.ToJSON..=)) (authenticatorSMSStageRequestFriendlyName obj) : ["from_number" Data.Aeson.Types.ToJSON..= authenticatorSMSStageRequestFromNumber obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("mapping" Data.Aeson.Types.ToJSON..=)) (authenticatorSMSStageRequestMapping obj) : ["name" Data.Aeson.Types.ToJSON..= authenticatorSMSStageRequestName obj] : ["provider" Data.Aeson.Types.ToJSON..= authenticatorSMSStageRequestProvider obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("verify_only" Data.Aeson.Types.ToJSON..=)) (authenticatorSMSStageRequestVerifyOnly obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["account_sid" Data.Aeson.Types.ToJSON..= authenticatorSMSStageRequestAccountSid obj] : ["auth" Data.Aeson.Types.ToJSON..= authenticatorSMSStageRequestAuth obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("auth_password" Data.Aeson.Types.ToJSON..=)) (authenticatorSMSStageRequestAuthPassword obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("auth_type" Data.Aeson.Types.ToJSON..=)) (authenticatorSMSStageRequestAuthType obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("configure_flow" Data.Aeson.Types.ToJSON..=)) (authenticatorSMSStageRequestConfigureFlow obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("flow_set" Data.Aeson.Types.ToJSON..=)) (authenticatorSMSStageRequestFlowSet obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("friendly_name" Data.Aeson.Types.ToJSON..=)) (authenticatorSMSStageRequestFriendlyName obj) : ["from_number" Data.Aeson.Types.ToJSON..= authenticatorSMSStageRequestFromNumber obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("mapping" Data.Aeson.Types.ToJSON..=)) (authenticatorSMSStageRequestMapping obj) : ["name" Data.Aeson.Types.ToJSON..= authenticatorSMSStageRequestName obj] : ["provider" Data.Aeson.Types.ToJSON..= authenticatorSMSStageRequestProvider obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("verify_only" Data.Aeson.Types.ToJSON..=)) (authenticatorSMSStageRequestVerifyOnly obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON AuthenticatorSMSStageRequest where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "AuthenticatorSMSStageRequest" (\obj -> (((((((((((GHC.Base.pure AuthenticatorSMSStageRequest GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "account_sid")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "auth")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "auth_password")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "auth_type")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "configure_flow")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "flow_set")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "friendly_name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "from_number")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "mapping")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "provider")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "verify_only"))

-- | Create a new 'AuthenticatorSMSStageRequest' with all required fields.
mkAuthenticatorSMSStageRequest ::
  -- | 'authenticatorSMSStageRequestAccountSid'
  Data.Text.Internal.Text ->
  -- | 'authenticatorSMSStageRequestAuth'
  Data.Text.Internal.Text ->
  -- | 'authenticatorSMSStageRequestFromNumber'
  Data.Text.Internal.Text ->
  -- | 'authenticatorSMSStageRequestName'
  Data.Text.Internal.Text ->
  -- | 'authenticatorSMSStageRequestProvider'
  ProviderEnum ->
  AuthenticatorSMSStageRequest
mkAuthenticatorSMSStageRequest authenticatorSMSStageRequestAccountSid authenticatorSMSStageRequestAuth authenticatorSMSStageRequestFromNumber authenticatorSMSStageRequestName authenticatorSMSStageRequestProvider =
  AuthenticatorSMSStageRequest
    { authenticatorSMSStageRequestAccountSid = authenticatorSMSStageRequestAccountSid,
      authenticatorSMSStageRequestAuth = authenticatorSMSStageRequestAuth,
      authenticatorSMSStageRequestAuthPassword = GHC.Maybe.Nothing,
      authenticatorSMSStageRequestAuthType = GHC.Maybe.Nothing,
      authenticatorSMSStageRequestConfigureFlow = GHC.Maybe.Nothing,
      authenticatorSMSStageRequestFlowSet = GHC.Maybe.Nothing,
      authenticatorSMSStageRequestFriendlyName = GHC.Maybe.Nothing,
      authenticatorSMSStageRequestFromNumber = authenticatorSMSStageRequestFromNumber,
      authenticatorSMSStageRequestMapping = GHC.Maybe.Nothing,
      authenticatorSMSStageRequestName = authenticatorSMSStageRequestName,
      authenticatorSMSStageRequestProvider = authenticatorSMSStageRequestProvider,
      authenticatorSMSStageRequestVerifyOnly = GHC.Maybe.Nothing
    }
