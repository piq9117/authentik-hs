{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the types generated from the schema AuthenticatorValidateStage
module AuthentikAPI.Types.AuthenticatorValidateStage where

import qualified AuthentikAPI.Common
import AuthentikAPI.TypeAlias
import {-# SOURCE #-} AuthentikAPI.Types.DeviceClassesEnum
import {-# SOURCE #-} AuthentikAPI.Types.FlowSet
import {-# SOURCE #-} AuthentikAPI.Types.NotConfiguredActionEnum
import {-# SOURCE #-} AuthentikAPI.Types.WebAuthnDeviceType
import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | Defines the object schema located at @components.schemas.AuthenticatorValidateStage@ in the specification.
--
-- AuthenticatorValidateStage Serializer
data AuthenticatorValidateStage = AuthenticatorValidateStage
  { -- | component: Get object type so that we know how to edit the object
    authenticatorValidateStageComponent :: Data.Text.Internal.Text,
    -- | configuration_stages: Stages used to configure Authenticator when user doesn\'t have any compatible devices. After this configuration Stage passes, the user is not prompted again.
    authenticatorValidateStageConfigurationStages :: (GHC.Maybe.Maybe [Data.Text.Internal.Text]),
    -- | device_classes: Device classes which can be used to authenticate
    authenticatorValidateStageDeviceClasses :: (GHC.Maybe.Maybe [DeviceClassesEnum]),
    -- | flow_set
    authenticatorValidateStageFlowSet :: (GHC.Maybe.Maybe [FlowSet]),
    -- | last_auth_threshold: If any of the user\'s device has been used within this threshold, this stage will be skipped
    authenticatorValidateStageLastAuthThreshold :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | meta_model_name: Return internal model name
    authenticatorValidateStageMetaModelName :: Data.Text.Internal.Text,
    -- | name
    authenticatorValidateStageName :: Data.Text.Internal.Text,
    -- | not_configured_action
    authenticatorValidateStageNotConfiguredAction :: (GHC.Maybe.Maybe NotConfiguredActionEnum),
    -- | pk
    authenticatorValidateStagePk :: Data.Text.Internal.Text,
    -- | verbose_name: Return object\'s verbose_name
    authenticatorValidateStageVerboseName :: Data.Text.Internal.Text,
    -- | verbose_name_plural: Return object\'s plural verbose_name
    authenticatorValidateStageVerboseNamePlural :: Data.Text.Internal.Text,
    -- | webauthn_allowed_device_types
    authenticatorValidateStageWebauthnAllowedDeviceTypes :: (GHC.Maybe.Maybe [Data.Text.Internal.Text]),
    -- | webauthn_allowed_device_types_obj
    authenticatorValidateStageWebauthnAllowedDeviceTypesObj :: [WebAuthnDeviceType],
    -- | webauthn_user_verification: Enforce user verification for WebAuthn devices.
    authenticatorValidateStageWebauthnUserVerification :: (GHC.Maybe.Maybe Data.Aeson.Types.Internal.Object)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON AuthenticatorValidateStage where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["component" Data.Aeson.Types.ToJSON..= authenticatorValidateStageComponent obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("configuration_stages" Data.Aeson.Types.ToJSON..=)) (authenticatorValidateStageConfigurationStages obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("device_classes" Data.Aeson.Types.ToJSON..=)) (authenticatorValidateStageDeviceClasses obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("flow_set" Data.Aeson.Types.ToJSON..=)) (authenticatorValidateStageFlowSet obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("last_auth_threshold" Data.Aeson.Types.ToJSON..=)) (authenticatorValidateStageLastAuthThreshold obj) : ["meta_model_name" Data.Aeson.Types.ToJSON..= authenticatorValidateStageMetaModelName obj] : ["name" Data.Aeson.Types.ToJSON..= authenticatorValidateStageName obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("not_configured_action" Data.Aeson.Types.ToJSON..=)) (authenticatorValidateStageNotConfiguredAction obj) : ["pk" Data.Aeson.Types.ToJSON..= authenticatorValidateStagePk obj] : ["verbose_name" Data.Aeson.Types.ToJSON..= authenticatorValidateStageVerboseName obj] : ["verbose_name_plural" Data.Aeson.Types.ToJSON..= authenticatorValidateStageVerboseNamePlural obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("webauthn_allowed_device_types" Data.Aeson.Types.ToJSON..=)) (authenticatorValidateStageWebauthnAllowedDeviceTypes obj) : ["webauthn_allowed_device_types_obj" Data.Aeson.Types.ToJSON..= authenticatorValidateStageWebauthnAllowedDeviceTypesObj obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("webauthn_user_verification" Data.Aeson.Types.ToJSON..=)) (authenticatorValidateStageWebauthnUserVerification obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["component" Data.Aeson.Types.ToJSON..= authenticatorValidateStageComponent obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("configuration_stages" Data.Aeson.Types.ToJSON..=)) (authenticatorValidateStageConfigurationStages obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("device_classes" Data.Aeson.Types.ToJSON..=)) (authenticatorValidateStageDeviceClasses obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("flow_set" Data.Aeson.Types.ToJSON..=)) (authenticatorValidateStageFlowSet obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("last_auth_threshold" Data.Aeson.Types.ToJSON..=)) (authenticatorValidateStageLastAuthThreshold obj) : ["meta_model_name" Data.Aeson.Types.ToJSON..= authenticatorValidateStageMetaModelName obj] : ["name" Data.Aeson.Types.ToJSON..= authenticatorValidateStageName obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("not_configured_action" Data.Aeson.Types.ToJSON..=)) (authenticatorValidateStageNotConfiguredAction obj) : ["pk" Data.Aeson.Types.ToJSON..= authenticatorValidateStagePk obj] : ["verbose_name" Data.Aeson.Types.ToJSON..= authenticatorValidateStageVerboseName obj] : ["verbose_name_plural" Data.Aeson.Types.ToJSON..= authenticatorValidateStageVerboseNamePlural obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("webauthn_allowed_device_types" Data.Aeson.Types.ToJSON..=)) (authenticatorValidateStageWebauthnAllowedDeviceTypes obj) : ["webauthn_allowed_device_types_obj" Data.Aeson.Types.ToJSON..= authenticatorValidateStageWebauthnAllowedDeviceTypesObj obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("webauthn_user_verification" Data.Aeson.Types.ToJSON..=)) (authenticatorValidateStageWebauthnUserVerification obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON AuthenticatorValidateStage where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "AuthenticatorValidateStage" (\obj -> (((((((((((((GHC.Base.pure AuthenticatorValidateStage GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "component")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "configuration_stages")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "device_classes")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "flow_set")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "last_auth_threshold")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "meta_model_name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "not_configured_action")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "pk")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "verbose_name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "verbose_name_plural")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "webauthn_allowed_device_types")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "webauthn_allowed_device_types_obj")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "webauthn_user_verification"))

-- | Create a new 'AuthenticatorValidateStage' with all required fields.
mkAuthenticatorValidateStage ::
  -- | 'authenticatorValidateStageComponent'
  Data.Text.Internal.Text ->
  -- | 'authenticatorValidateStageMetaModelName'
  Data.Text.Internal.Text ->
  -- | 'authenticatorValidateStageName'
  Data.Text.Internal.Text ->
  -- | 'authenticatorValidateStagePk'
  Data.Text.Internal.Text ->
  -- | 'authenticatorValidateStageVerboseName'
  Data.Text.Internal.Text ->
  -- | 'authenticatorValidateStageVerboseNamePlural'
  Data.Text.Internal.Text ->
  -- | 'authenticatorValidateStageWebauthnAllowedDeviceTypesObj'
  [WebAuthnDeviceType] ->
  AuthenticatorValidateStage
mkAuthenticatorValidateStage authenticatorValidateStageComponent authenticatorValidateStageMetaModelName authenticatorValidateStageName authenticatorValidateStagePk authenticatorValidateStageVerboseName authenticatorValidateStageVerboseNamePlural authenticatorValidateStageWebauthnAllowedDeviceTypesObj =
  AuthenticatorValidateStage
    { authenticatorValidateStageComponent = authenticatorValidateStageComponent,
      authenticatorValidateStageConfigurationStages = GHC.Maybe.Nothing,
      authenticatorValidateStageDeviceClasses = GHC.Maybe.Nothing,
      authenticatorValidateStageFlowSet = GHC.Maybe.Nothing,
      authenticatorValidateStageLastAuthThreshold = GHC.Maybe.Nothing,
      authenticatorValidateStageMetaModelName = authenticatorValidateStageMetaModelName,
      authenticatorValidateStageName = authenticatorValidateStageName,
      authenticatorValidateStageNotConfiguredAction = GHC.Maybe.Nothing,
      authenticatorValidateStagePk = authenticatorValidateStagePk,
      authenticatorValidateStageVerboseName = authenticatorValidateStageVerboseName,
      authenticatorValidateStageVerboseNamePlural = authenticatorValidateStageVerboseNamePlural,
      authenticatorValidateStageWebauthnAllowedDeviceTypes = GHC.Maybe.Nothing,
      authenticatorValidateStageWebauthnAllowedDeviceTypesObj = authenticatorValidateStageWebauthnAllowedDeviceTypesObj,
      authenticatorValidateStageWebauthnUserVerification = GHC.Maybe.Nothing
    }
