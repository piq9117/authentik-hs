{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the types generated from the schema FlowStageBindingRequest
module AuthentikAPI.Types.FlowStageBindingRequest where

import qualified AuthentikAPI.Common
import AuthentikAPI.TypeAlias
import {-# SOURCE #-} AuthentikAPI.Types.PolicyEngineMode
import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | Defines the object schema located at @components.schemas.FlowStageBindingRequest@ in the specification.
--
-- FlowStageBinding Serializer
data FlowStageBindingRequest = FlowStageBindingRequest
  { -- | evaluate_on_plan: Evaluate policies during the Flow planning process.
    flowStageBindingRequestEvaluateOnPlan :: (GHC.Maybe.Maybe GHC.Types.Bool),
    -- | invalid_response_action: Configure how the flow executor should handle an invalid response to a challenge. RETRY returns the error message and a similar challenge to the executor. RESTART restarts the flow from the beginning, and RESTART_WITH_CONTEXT restarts the flow while keeping the current context.
    flowStageBindingRequestInvalidResponseAction :: (GHC.Maybe.Maybe Data.Aeson.Types.Internal.Object),
    -- | order
    --
    -- Constraints:
    --
    -- * Maxium  of 2.1474836e9
    -- * Minimum  of -2.1474836e9
    flowStageBindingRequestOrder :: GHC.Types.Int,
    -- | policy_engine_mode
    flowStageBindingRequestPolicyEngineMode :: (GHC.Maybe.Maybe PolicyEngineMode),
    -- | re_evaluate_policies: Evaluate policies when the Stage is presented to the user.
    flowStageBindingRequestReEvaluatePolicies :: (GHC.Maybe.Maybe GHC.Types.Bool),
    -- | stage
    flowStageBindingRequestStage :: Data.Text.Internal.Text,
    -- | target
    flowStageBindingRequestTarget :: Data.Text.Internal.Text
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON FlowStageBindingRequest where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("evaluate_on_plan" Data.Aeson.Types.ToJSON..=)) (flowStageBindingRequestEvaluateOnPlan obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("invalid_response_action" Data.Aeson.Types.ToJSON..=)) (flowStageBindingRequestInvalidResponseAction obj) : ["order" Data.Aeson.Types.ToJSON..= flowStageBindingRequestOrder obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("policy_engine_mode" Data.Aeson.Types.ToJSON..=)) (flowStageBindingRequestPolicyEngineMode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("re_evaluate_policies" Data.Aeson.Types.ToJSON..=)) (flowStageBindingRequestReEvaluatePolicies obj) : ["stage" Data.Aeson.Types.ToJSON..= flowStageBindingRequestStage obj] : ["target" Data.Aeson.Types.ToJSON..= flowStageBindingRequestTarget obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("evaluate_on_plan" Data.Aeson.Types.ToJSON..=)) (flowStageBindingRequestEvaluateOnPlan obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("invalid_response_action" Data.Aeson.Types.ToJSON..=)) (flowStageBindingRequestInvalidResponseAction obj) : ["order" Data.Aeson.Types.ToJSON..= flowStageBindingRequestOrder obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("policy_engine_mode" Data.Aeson.Types.ToJSON..=)) (flowStageBindingRequestPolicyEngineMode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("re_evaluate_policies" Data.Aeson.Types.ToJSON..=)) (flowStageBindingRequestReEvaluatePolicies obj) : ["stage" Data.Aeson.Types.ToJSON..= flowStageBindingRequestStage obj] : ["target" Data.Aeson.Types.ToJSON..= flowStageBindingRequestTarget obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON FlowStageBindingRequest where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "FlowStageBindingRequest" (\obj -> ((((((GHC.Base.pure FlowStageBindingRequest GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "evaluate_on_plan")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "invalid_response_action")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "order")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "policy_engine_mode")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "re_evaluate_policies")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "stage")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "target"))

-- | Create a new 'FlowStageBindingRequest' with all required fields.
mkFlowStageBindingRequest ::
  -- | 'flowStageBindingRequestOrder'
  GHC.Types.Int ->
  -- | 'flowStageBindingRequestStage'
  Data.Text.Internal.Text ->
  -- | 'flowStageBindingRequestTarget'
  Data.Text.Internal.Text ->
  FlowStageBindingRequest
mkFlowStageBindingRequest flowStageBindingRequestOrder flowStageBindingRequestStage flowStageBindingRequestTarget =
  FlowStageBindingRequest
    { flowStageBindingRequestEvaluateOnPlan = GHC.Maybe.Nothing,
      flowStageBindingRequestInvalidResponseAction = GHC.Maybe.Nothing,
      flowStageBindingRequestOrder = flowStageBindingRequestOrder,
      flowStageBindingRequestPolicyEngineMode = GHC.Maybe.Nothing,
      flowStageBindingRequestReEvaluatePolicies = GHC.Maybe.Nothing,
      flowStageBindingRequestStage = flowStageBindingRequestStage,
      flowStageBindingRequestTarget = flowStageBindingRequestTarget
    }
