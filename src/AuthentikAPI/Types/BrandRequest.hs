{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the types generated from the schema BrandRequest
module AuthentikAPI.Types.BrandRequest where

import qualified AuthentikAPI.Common
import AuthentikAPI.TypeAlias
import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | Defines the object schema located at @components.schemas.BrandRequest@ in the specification.
--
-- Brand Serializer
data BrandRequest = BrandRequest
  { -- | attributes
    brandRequestAttributes :: (GHC.Maybe.Maybe Data.Aeson.Types.Internal.Object),
    -- | branding_custom_css
    brandRequestBrandingCustomCss :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | branding_default_flow_background
    --
    -- Constraints:
    --
    -- * Minimum length of 1
    brandRequestBrandingDefaultFlowBackground :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | branding_favicon
    --
    -- Constraints:
    --
    -- * Minimum length of 1
    brandRequestBrandingFavicon :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | branding_logo
    --
    -- Constraints:
    --
    -- * Minimum length of 1
    brandRequestBrandingLogo :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | branding_title
    --
    -- Constraints:
    --
    -- * Minimum length of 1
    brandRequestBrandingTitle :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | default
    brandRequestDefault :: (GHC.Maybe.Maybe GHC.Types.Bool),
    -- | default_application: When set, external users will be redirected to this application after authenticating.
    brandRequestDefaultApplication :: (GHC.Maybe.Maybe (AuthentikAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | domain: Domain that activates this brand. Can be a superset, i.e. \`a.b\` for \`aa.b\` and \`ba.b\`
    --
    -- Constraints:
    --
    -- * Minimum length of 1
    brandRequestDomain :: Data.Text.Internal.Text,
    -- | flow_authentication
    brandRequestFlowAuthentication :: (GHC.Maybe.Maybe (AuthentikAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | flow_device_code
    brandRequestFlowDeviceCode :: (GHC.Maybe.Maybe (AuthentikAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | flow_invalidation
    brandRequestFlowInvalidation :: (GHC.Maybe.Maybe (AuthentikAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | flow_recovery
    brandRequestFlowRecovery :: (GHC.Maybe.Maybe (AuthentikAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | flow_unenrollment
    brandRequestFlowUnenrollment :: (GHC.Maybe.Maybe (AuthentikAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | flow_user_settings
    brandRequestFlowUserSettings :: (GHC.Maybe.Maybe (AuthentikAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | web_certificate: Web Certificate used by the authentik Core webserver.
    brandRequestWebCertificate :: (GHC.Maybe.Maybe (AuthentikAPI.Common.Nullable Data.Text.Internal.Text))
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON BrandRequest where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("attributes" Data.Aeson.Types.ToJSON..=)) (brandRequestAttributes obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("branding_custom_css" Data.Aeson.Types.ToJSON..=)) (brandRequestBrandingCustomCss obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("branding_default_flow_background" Data.Aeson.Types.ToJSON..=)) (brandRequestBrandingDefaultFlowBackground obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("branding_favicon" Data.Aeson.Types.ToJSON..=)) (brandRequestBrandingFavicon obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("branding_logo" Data.Aeson.Types.ToJSON..=)) (brandRequestBrandingLogo obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("branding_title" Data.Aeson.Types.ToJSON..=)) (brandRequestBrandingTitle obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("default" Data.Aeson.Types.ToJSON..=)) (brandRequestDefault obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("default_application" Data.Aeson.Types.ToJSON..=)) (brandRequestDefaultApplication obj) : ["domain" Data.Aeson.Types.ToJSON..= brandRequestDomain obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("flow_authentication" Data.Aeson.Types.ToJSON..=)) (brandRequestFlowAuthentication obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("flow_device_code" Data.Aeson.Types.ToJSON..=)) (brandRequestFlowDeviceCode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("flow_invalidation" Data.Aeson.Types.ToJSON..=)) (brandRequestFlowInvalidation obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("flow_recovery" Data.Aeson.Types.ToJSON..=)) (brandRequestFlowRecovery obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("flow_unenrollment" Data.Aeson.Types.ToJSON..=)) (brandRequestFlowUnenrollment obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("flow_user_settings" Data.Aeson.Types.ToJSON..=)) (brandRequestFlowUserSettings obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("web_certificate" Data.Aeson.Types.ToJSON..=)) (brandRequestWebCertificate obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("attributes" Data.Aeson.Types.ToJSON..=)) (brandRequestAttributes obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("branding_custom_css" Data.Aeson.Types.ToJSON..=)) (brandRequestBrandingCustomCss obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("branding_default_flow_background" Data.Aeson.Types.ToJSON..=)) (brandRequestBrandingDefaultFlowBackground obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("branding_favicon" Data.Aeson.Types.ToJSON..=)) (brandRequestBrandingFavicon obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("branding_logo" Data.Aeson.Types.ToJSON..=)) (brandRequestBrandingLogo obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("branding_title" Data.Aeson.Types.ToJSON..=)) (brandRequestBrandingTitle obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("default" Data.Aeson.Types.ToJSON..=)) (brandRequestDefault obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("default_application" Data.Aeson.Types.ToJSON..=)) (brandRequestDefaultApplication obj) : ["domain" Data.Aeson.Types.ToJSON..= brandRequestDomain obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("flow_authentication" Data.Aeson.Types.ToJSON..=)) (brandRequestFlowAuthentication obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("flow_device_code" Data.Aeson.Types.ToJSON..=)) (brandRequestFlowDeviceCode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("flow_invalidation" Data.Aeson.Types.ToJSON..=)) (brandRequestFlowInvalidation obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("flow_recovery" Data.Aeson.Types.ToJSON..=)) (brandRequestFlowRecovery obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("flow_unenrollment" Data.Aeson.Types.ToJSON..=)) (brandRequestFlowUnenrollment obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("flow_user_settings" Data.Aeson.Types.ToJSON..=)) (brandRequestFlowUserSettings obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("web_certificate" Data.Aeson.Types.ToJSON..=)) (brandRequestWebCertificate obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON BrandRequest where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "BrandRequest" (\obj -> (((((((((((((((GHC.Base.pure BrandRequest GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "attributes")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "branding_custom_css")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "branding_default_flow_background")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "branding_favicon")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "branding_logo")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "branding_title")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "default")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "default_application")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "domain")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "flow_authentication")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "flow_device_code")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "flow_invalidation")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "flow_recovery")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "flow_unenrollment")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "flow_user_settings")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "web_certificate"))

-- | Create a new 'BrandRequest' with all required fields.
mkBrandRequest ::
  -- | 'brandRequestDomain'
  Data.Text.Internal.Text ->
  BrandRequest
mkBrandRequest brandRequestDomain =
  BrandRequest
    { brandRequestAttributes = GHC.Maybe.Nothing,
      brandRequestBrandingCustomCss = GHC.Maybe.Nothing,
      brandRequestBrandingDefaultFlowBackground = GHC.Maybe.Nothing,
      brandRequestBrandingFavicon = GHC.Maybe.Nothing,
      brandRequestBrandingLogo = GHC.Maybe.Nothing,
      brandRequestBrandingTitle = GHC.Maybe.Nothing,
      brandRequestDefault = GHC.Maybe.Nothing,
      brandRequestDefaultApplication = GHC.Maybe.Nothing,
      brandRequestDomain = brandRequestDomain,
      brandRequestFlowAuthentication = GHC.Maybe.Nothing,
      brandRequestFlowDeviceCode = GHC.Maybe.Nothing,
      brandRequestFlowInvalidation = GHC.Maybe.Nothing,
      brandRequestFlowRecovery = GHC.Maybe.Nothing,
      brandRequestFlowUnenrollment = GHC.Maybe.Nothing,
      brandRequestFlowUserSettings = GHC.Maybe.Nothing,
      brandRequestWebCertificate = GHC.Maybe.Nothing
    }
