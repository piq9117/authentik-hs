{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the types generated from the schema PatchedLDAPSourceRequest
module AuthentikAPI.Types.PatchedLDAPSourceRequest where

import qualified AuthentikAPI.Common
import AuthentikAPI.TypeAlias
import {-# SOURCE #-} AuthentikAPI.Types.PolicyEngineMode
import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | Defines the object schema located at @components.schemas.PatchedLDAPSourceRequest@ in the specification.
--
-- LDAP Source Serializer
data PatchedLDAPSourceRequest = PatchedLDAPSourceRequest
  { -- | additional_group_dn: Prepended to Base DN for Group-queries.
    patchedLDAPSourceRequestAdditionalGroupDn :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | additional_user_dn: Prepended to Base DN for User-queries.
    patchedLDAPSourceRequestAdditionalUserDn :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | authentication_flow: Flow to use when authenticating existing users.
    patchedLDAPSourceRequestAuthenticationFlow :: (GHC.Maybe.Maybe (AuthentikAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | base_dn
    --
    -- Constraints:
    --
    -- * Minimum length of 1
    patchedLDAPSourceRequestBaseDn :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | bind_cn
    patchedLDAPSourceRequestBindCn :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | bind_password
    patchedLDAPSourceRequestBindPassword :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | client_certificate: Client certificate to authenticate against the LDAP Server\'s Certificate.
    patchedLDAPSourceRequestClientCertificate :: (GHC.Maybe.Maybe (AuthentikAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | enabled
    patchedLDAPSourceRequestEnabled :: (GHC.Maybe.Maybe GHC.Types.Bool),
    -- | enrollment_flow: Flow to use when enrolling new users.
    patchedLDAPSourceRequestEnrollmentFlow :: (GHC.Maybe.Maybe (AuthentikAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | group_membership_field: Field which contains members of a group.
    --
    -- Constraints:
    --
    -- * Minimum length of 1
    patchedLDAPSourceRequestGroupMembershipField :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | group_object_filter: Consider Objects matching this filter to be Groups.
    --
    -- Constraints:
    --
    -- * Minimum length of 1
    patchedLDAPSourceRequestGroupObjectFilter :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | group_property_mappings
    patchedLDAPSourceRequestGroupPropertyMappings :: (GHC.Maybe.Maybe [Data.Text.Internal.Text]),
    -- | lookup_groups_from_user: Lookup group membership based on a user attribute instead of a group attribute. This allows nested group resolution on systems like FreeIPA and Active Directory
    patchedLDAPSourceRequestLookupGroupsFromUser :: (GHC.Maybe.Maybe GHC.Types.Bool),
    -- | name: Source\'s display Name.
    --
    -- Constraints:
    --
    -- * Minimum length of 1
    patchedLDAPSourceRequestName :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | object_uniqueness_field: Field which contains a unique Identifier.
    --
    -- Constraints:
    --
    -- * Minimum length of 1
    patchedLDAPSourceRequestObjectUniquenessField :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | password_login_update_internal_password: Update internal authentik password when login succeeds with LDAP
    patchedLDAPSourceRequestPasswordLoginUpdateInternalPassword :: (GHC.Maybe.Maybe GHC.Types.Bool),
    -- | peer_certificate: Optionally verify the LDAP Server\'s Certificate against the CA Chain in this keypair.
    patchedLDAPSourceRequestPeerCertificate :: (GHC.Maybe.Maybe (AuthentikAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | policy_engine_mode
    patchedLDAPSourceRequestPolicyEngineMode :: (GHC.Maybe.Maybe PolicyEngineMode),
    -- | server_uri
    --
    -- Constraints:
    --
    -- * Minimum length of 1
    patchedLDAPSourceRequestServerUri :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | slug: Internal source name, used in URLs.
    --
    -- Constraints:
    --
    -- * Maximum length of 50
    -- * Minimum length of 1
    -- * Must match pattern \'^[-a-zA-Z0-9_]+\$\'
    patchedLDAPSourceRequestSlug :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | sni
    patchedLDAPSourceRequestSni :: (GHC.Maybe.Maybe GHC.Types.Bool),
    -- | start_tls
    patchedLDAPSourceRequestStartTls :: (GHC.Maybe.Maybe GHC.Types.Bool),
    -- | sync_groups
    patchedLDAPSourceRequestSyncGroups :: (GHC.Maybe.Maybe GHC.Types.Bool),
    -- | sync_parent_group
    patchedLDAPSourceRequestSyncParentGroup :: (GHC.Maybe.Maybe (AuthentikAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | sync_users
    patchedLDAPSourceRequestSyncUsers :: (GHC.Maybe.Maybe GHC.Types.Bool),
    -- | sync_users_password: When a user changes their password, sync it back to LDAP. This can only be enabled on a single LDAP source.
    patchedLDAPSourceRequestSyncUsersPassword :: (GHC.Maybe.Maybe GHC.Types.Bool),
    -- | user_matching_mode: How the source determines if an existing user should be authenticated or a new user enrolled.
    patchedLDAPSourceRequestUserMatchingMode :: (GHC.Maybe.Maybe Data.Aeson.Types.Internal.Object),
    -- | user_object_filter: Consider Objects matching this filter to be Users.
    --
    -- Constraints:
    --
    -- * Minimum length of 1
    patchedLDAPSourceRequestUserObjectFilter :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | user_path_template
    --
    -- Constraints:
    --
    -- * Minimum length of 1
    patchedLDAPSourceRequestUserPathTemplate :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | user_property_mappings
    patchedLDAPSourceRequestUserPropertyMappings :: (GHC.Maybe.Maybe [Data.Text.Internal.Text])
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PatchedLDAPSourceRequest where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("additional_group_dn" Data.Aeson.Types.ToJSON..=)) (patchedLDAPSourceRequestAdditionalGroupDn obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("additional_user_dn" Data.Aeson.Types.ToJSON..=)) (patchedLDAPSourceRequestAdditionalUserDn obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("authentication_flow" Data.Aeson.Types.ToJSON..=)) (patchedLDAPSourceRequestAuthenticationFlow obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("base_dn" Data.Aeson.Types.ToJSON..=)) (patchedLDAPSourceRequestBaseDn obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("bind_cn" Data.Aeson.Types.ToJSON..=)) (patchedLDAPSourceRequestBindCn obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("bind_password" Data.Aeson.Types.ToJSON..=)) (patchedLDAPSourceRequestBindPassword obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("client_certificate" Data.Aeson.Types.ToJSON..=)) (patchedLDAPSourceRequestClientCertificate obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("enabled" Data.Aeson.Types.ToJSON..=)) (patchedLDAPSourceRequestEnabled obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("enrollment_flow" Data.Aeson.Types.ToJSON..=)) (patchedLDAPSourceRequestEnrollmentFlow obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("group_membership_field" Data.Aeson.Types.ToJSON..=)) (patchedLDAPSourceRequestGroupMembershipField obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("group_object_filter" Data.Aeson.Types.ToJSON..=)) (patchedLDAPSourceRequestGroupObjectFilter obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("group_property_mappings" Data.Aeson.Types.ToJSON..=)) (patchedLDAPSourceRequestGroupPropertyMappings obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("lookup_groups_from_user" Data.Aeson.Types.ToJSON..=)) (patchedLDAPSourceRequestLookupGroupsFromUser obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("name" Data.Aeson.Types.ToJSON..=)) (patchedLDAPSourceRequestName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("object_uniqueness_field" Data.Aeson.Types.ToJSON..=)) (patchedLDAPSourceRequestObjectUniquenessField obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("password_login_update_internal_password" Data.Aeson.Types.ToJSON..=)) (patchedLDAPSourceRequestPasswordLoginUpdateInternalPassword obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("peer_certificate" Data.Aeson.Types.ToJSON..=)) (patchedLDAPSourceRequestPeerCertificate obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("policy_engine_mode" Data.Aeson.Types.ToJSON..=)) (patchedLDAPSourceRequestPolicyEngineMode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("server_uri" Data.Aeson.Types.ToJSON..=)) (patchedLDAPSourceRequestServerUri obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("slug" Data.Aeson.Types.ToJSON..=)) (patchedLDAPSourceRequestSlug obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("sni" Data.Aeson.Types.ToJSON..=)) (patchedLDAPSourceRequestSni obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("start_tls" Data.Aeson.Types.ToJSON..=)) (patchedLDAPSourceRequestStartTls obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("sync_groups" Data.Aeson.Types.ToJSON..=)) (patchedLDAPSourceRequestSyncGroups obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("sync_parent_group" Data.Aeson.Types.ToJSON..=)) (patchedLDAPSourceRequestSyncParentGroup obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("sync_users" Data.Aeson.Types.ToJSON..=)) (patchedLDAPSourceRequestSyncUsers obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("sync_users_password" Data.Aeson.Types.ToJSON..=)) (patchedLDAPSourceRequestSyncUsersPassword obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("user_matching_mode" Data.Aeson.Types.ToJSON..=)) (patchedLDAPSourceRequestUserMatchingMode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("user_object_filter" Data.Aeson.Types.ToJSON..=)) (patchedLDAPSourceRequestUserObjectFilter obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("user_path_template" Data.Aeson.Types.ToJSON..=)) (patchedLDAPSourceRequestUserPathTemplate obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("user_property_mappings" Data.Aeson.Types.ToJSON..=)) (patchedLDAPSourceRequestUserPropertyMappings obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("additional_group_dn" Data.Aeson.Types.ToJSON..=)) (patchedLDAPSourceRequestAdditionalGroupDn obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("additional_user_dn" Data.Aeson.Types.ToJSON..=)) (patchedLDAPSourceRequestAdditionalUserDn obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("authentication_flow" Data.Aeson.Types.ToJSON..=)) (patchedLDAPSourceRequestAuthenticationFlow obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("base_dn" Data.Aeson.Types.ToJSON..=)) (patchedLDAPSourceRequestBaseDn obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("bind_cn" Data.Aeson.Types.ToJSON..=)) (patchedLDAPSourceRequestBindCn obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("bind_password" Data.Aeson.Types.ToJSON..=)) (patchedLDAPSourceRequestBindPassword obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("client_certificate" Data.Aeson.Types.ToJSON..=)) (patchedLDAPSourceRequestClientCertificate obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("enabled" Data.Aeson.Types.ToJSON..=)) (patchedLDAPSourceRequestEnabled obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("enrollment_flow" Data.Aeson.Types.ToJSON..=)) (patchedLDAPSourceRequestEnrollmentFlow obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("group_membership_field" Data.Aeson.Types.ToJSON..=)) (patchedLDAPSourceRequestGroupMembershipField obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("group_object_filter" Data.Aeson.Types.ToJSON..=)) (patchedLDAPSourceRequestGroupObjectFilter obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("group_property_mappings" Data.Aeson.Types.ToJSON..=)) (patchedLDAPSourceRequestGroupPropertyMappings obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("lookup_groups_from_user" Data.Aeson.Types.ToJSON..=)) (patchedLDAPSourceRequestLookupGroupsFromUser obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("name" Data.Aeson.Types.ToJSON..=)) (patchedLDAPSourceRequestName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("object_uniqueness_field" Data.Aeson.Types.ToJSON..=)) (patchedLDAPSourceRequestObjectUniquenessField obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("password_login_update_internal_password" Data.Aeson.Types.ToJSON..=)) (patchedLDAPSourceRequestPasswordLoginUpdateInternalPassword obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("peer_certificate" Data.Aeson.Types.ToJSON..=)) (patchedLDAPSourceRequestPeerCertificate obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("policy_engine_mode" Data.Aeson.Types.ToJSON..=)) (patchedLDAPSourceRequestPolicyEngineMode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("server_uri" Data.Aeson.Types.ToJSON..=)) (patchedLDAPSourceRequestServerUri obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("slug" Data.Aeson.Types.ToJSON..=)) (patchedLDAPSourceRequestSlug obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("sni" Data.Aeson.Types.ToJSON..=)) (patchedLDAPSourceRequestSni obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("start_tls" Data.Aeson.Types.ToJSON..=)) (patchedLDAPSourceRequestStartTls obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("sync_groups" Data.Aeson.Types.ToJSON..=)) (patchedLDAPSourceRequestSyncGroups obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("sync_parent_group" Data.Aeson.Types.ToJSON..=)) (patchedLDAPSourceRequestSyncParentGroup obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("sync_users" Data.Aeson.Types.ToJSON..=)) (patchedLDAPSourceRequestSyncUsers obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("sync_users_password" Data.Aeson.Types.ToJSON..=)) (patchedLDAPSourceRequestSyncUsersPassword obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("user_matching_mode" Data.Aeson.Types.ToJSON..=)) (patchedLDAPSourceRequestUserMatchingMode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("user_object_filter" Data.Aeson.Types.ToJSON..=)) (patchedLDAPSourceRequestUserObjectFilter obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("user_path_template" Data.Aeson.Types.ToJSON..=)) (patchedLDAPSourceRequestUserPathTemplate obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("user_property_mappings" Data.Aeson.Types.ToJSON..=)) (patchedLDAPSourceRequestUserPropertyMappings obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PatchedLDAPSourceRequest where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PatchedLDAPSourceRequest" (\obj -> (((((((((((((((((((((((((((((GHC.Base.pure PatchedLDAPSourceRequest GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "additional_group_dn")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "additional_user_dn")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "authentication_flow")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "base_dn")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "bind_cn")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "bind_password")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "client_certificate")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "enabled")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "enrollment_flow")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "group_membership_field")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "group_object_filter")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "group_property_mappings")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "lookup_groups_from_user")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "object_uniqueness_field")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "password_login_update_internal_password")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "peer_certificate")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "policy_engine_mode")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "server_uri")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "slug")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "sni")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "start_tls")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "sync_groups")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "sync_parent_group")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "sync_users")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "sync_users_password")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "user_matching_mode")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "user_object_filter")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "user_path_template")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "user_property_mappings"))

-- | Create a new 'PatchedLDAPSourceRequest' with all required fields.
mkPatchedLDAPSourceRequest :: PatchedLDAPSourceRequest
mkPatchedLDAPSourceRequest =
  PatchedLDAPSourceRequest
    { patchedLDAPSourceRequestAdditionalGroupDn = GHC.Maybe.Nothing,
      patchedLDAPSourceRequestAdditionalUserDn = GHC.Maybe.Nothing,
      patchedLDAPSourceRequestAuthenticationFlow = GHC.Maybe.Nothing,
      patchedLDAPSourceRequestBaseDn = GHC.Maybe.Nothing,
      patchedLDAPSourceRequestBindCn = GHC.Maybe.Nothing,
      patchedLDAPSourceRequestBindPassword = GHC.Maybe.Nothing,
      patchedLDAPSourceRequestClientCertificate = GHC.Maybe.Nothing,
      patchedLDAPSourceRequestEnabled = GHC.Maybe.Nothing,
      patchedLDAPSourceRequestEnrollmentFlow = GHC.Maybe.Nothing,
      patchedLDAPSourceRequestGroupMembershipField = GHC.Maybe.Nothing,
      patchedLDAPSourceRequestGroupObjectFilter = GHC.Maybe.Nothing,
      patchedLDAPSourceRequestGroupPropertyMappings = GHC.Maybe.Nothing,
      patchedLDAPSourceRequestLookupGroupsFromUser = GHC.Maybe.Nothing,
      patchedLDAPSourceRequestName = GHC.Maybe.Nothing,
      patchedLDAPSourceRequestObjectUniquenessField = GHC.Maybe.Nothing,
      patchedLDAPSourceRequestPasswordLoginUpdateInternalPassword = GHC.Maybe.Nothing,
      patchedLDAPSourceRequestPeerCertificate = GHC.Maybe.Nothing,
      patchedLDAPSourceRequestPolicyEngineMode = GHC.Maybe.Nothing,
      patchedLDAPSourceRequestServerUri = GHC.Maybe.Nothing,
      patchedLDAPSourceRequestSlug = GHC.Maybe.Nothing,
      patchedLDAPSourceRequestSni = GHC.Maybe.Nothing,
      patchedLDAPSourceRequestStartTls = GHC.Maybe.Nothing,
      patchedLDAPSourceRequestSyncGroups = GHC.Maybe.Nothing,
      patchedLDAPSourceRequestSyncParentGroup = GHC.Maybe.Nothing,
      patchedLDAPSourceRequestSyncUsers = GHC.Maybe.Nothing,
      patchedLDAPSourceRequestSyncUsersPassword = GHC.Maybe.Nothing,
      patchedLDAPSourceRequestUserMatchingMode = GHC.Maybe.Nothing,
      patchedLDAPSourceRequestUserObjectFilter = GHC.Maybe.Nothing,
      patchedLDAPSourceRequestUserPathTemplate = GHC.Maybe.Nothing,
      patchedLDAPSourceRequestUserPropertyMappings = GHC.Maybe.Nothing
    }
