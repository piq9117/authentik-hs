{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the types generated from the schema PatchedSAMLProviderRequest
module AuthentikAPI.Types.PatchedSAMLProviderRequest where

import qualified AuthentikAPI.Common
import AuthentikAPI.TypeAlias
import {-# SOURCE #-} AuthentikAPI.Types.DigestAlgorithmEnum
import {-# SOURCE #-} AuthentikAPI.Types.SignatureAlgorithmEnum
import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | Defines the object schema located at @components.schemas.PatchedSAMLProviderRequest@ in the specification.
--
-- SAMLProvider Serializer
data PatchedSAMLProviderRequest = PatchedSAMLProviderRequest
  { -- | acs_url
    --
    -- Constraints:
    --
    -- * Minimum length of 1
    patchedSAMLProviderRequestAcsUrl :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | assertion_valid_not_before: Assertion valid not before current time + this value (Format: hours=-1;minutes=-2;seconds=-3).
    --
    -- Constraints:
    --
    -- * Minimum length of 1
    patchedSAMLProviderRequestAssertionValidNotBefore :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | assertion_valid_not_on_or_after: Assertion not valid on or after current time + this value (Format: hours=1;minutes=2;seconds=3).
    --
    -- Constraints:
    --
    -- * Minimum length of 1
    patchedSAMLProviderRequestAssertionValidNotOnOrAfter :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | audience: Value of the audience restriction field of the assertion. When left empty, no audience restriction will be added.
    patchedSAMLProviderRequestAudience :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | authentication_flow: Flow used for authentication when the associated application is accessed by an un-authenticated user.
    patchedSAMLProviderRequestAuthenticationFlow :: (GHC.Maybe.Maybe (AuthentikAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | authn_context_class_ref_mapping: Configure how the AuthnContextClassRef value will be created. When left empty, the AuthnContextClassRef will be set based on which authentication methods the user used to authenticate.
    patchedSAMLProviderRequestAuthnContextClassRefMapping :: (GHC.Maybe.Maybe (AuthentikAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | authorization_flow: Flow used when authorizing this provider.
    patchedSAMLProviderRequestAuthorizationFlow :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | default_relay_state: Default relay_state value for IDP-initiated logins
    patchedSAMLProviderRequestDefaultRelayState :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | digest_algorithm
    patchedSAMLProviderRequestDigestAlgorithm :: (GHC.Maybe.Maybe DigestAlgorithmEnum),
    -- | encryption_kp: When selected, incoming assertions are encrypted by the IdP using the public key of the encryption keypair. The assertion is decrypted by the SP using the the private key.
    patchedSAMLProviderRequestEncryptionKp :: (GHC.Maybe.Maybe (AuthentikAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | invalidation_flow: Flow used ending the session from a provider.
    patchedSAMLProviderRequestInvalidationFlow :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | issuer: Also known as EntityID
    --
    -- Constraints:
    --
    -- * Minimum length of 1
    patchedSAMLProviderRequestIssuer :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | name
    --
    -- Constraints:
    --
    -- * Minimum length of 1
    patchedSAMLProviderRequestName :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | name_id_mapping: Configure how the NameID value will be created. When left empty, the NameIDPolicy of the incoming request will be considered
    patchedSAMLProviderRequestNameIdMapping :: (GHC.Maybe.Maybe (AuthentikAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | property_mappings
    patchedSAMLProviderRequestPropertyMappings :: (GHC.Maybe.Maybe [Data.Text.Internal.Text]),
    -- | session_valid_not_on_or_after: Session not valid on or after current time + this value (Format: hours=1;minutes=2;seconds=3).
    --
    -- Constraints:
    --
    -- * Minimum length of 1
    patchedSAMLProviderRequestSessionValidNotOnOrAfter :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | sign_assertion
    patchedSAMLProviderRequestSignAssertion :: (GHC.Maybe.Maybe GHC.Types.Bool),
    -- | sign_response
    patchedSAMLProviderRequestSignResponse :: (GHC.Maybe.Maybe GHC.Types.Bool),
    -- | signature_algorithm
    patchedSAMLProviderRequestSignatureAlgorithm :: (GHC.Maybe.Maybe SignatureAlgorithmEnum),
    -- | signing_kp: Keypair used to sign outgoing Responses going to the Service Provider.
    patchedSAMLProviderRequestSigningKp :: (GHC.Maybe.Maybe (AuthentikAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | sp_binding: This determines how authentik sends the response back to the Service Provider.
    patchedSAMLProviderRequestSpBinding :: (GHC.Maybe.Maybe Data.Aeson.Types.Internal.Object),
    -- | verification_kp: When selected, incoming assertion\'s Signatures will be validated against this certificate. To allow unsigned Requests, leave on default.
    patchedSAMLProviderRequestVerificationKp :: (GHC.Maybe.Maybe (AuthentikAPI.Common.Nullable Data.Text.Internal.Text))
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PatchedSAMLProviderRequest where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("acs_url" Data.Aeson.Types.ToJSON..=)) (patchedSAMLProviderRequestAcsUrl obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("assertion_valid_not_before" Data.Aeson.Types.ToJSON..=)) (patchedSAMLProviderRequestAssertionValidNotBefore obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("assertion_valid_not_on_or_after" Data.Aeson.Types.ToJSON..=)) (patchedSAMLProviderRequestAssertionValidNotOnOrAfter obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("audience" Data.Aeson.Types.ToJSON..=)) (patchedSAMLProviderRequestAudience obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("authentication_flow" Data.Aeson.Types.ToJSON..=)) (patchedSAMLProviderRequestAuthenticationFlow obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("authn_context_class_ref_mapping" Data.Aeson.Types.ToJSON..=)) (patchedSAMLProviderRequestAuthnContextClassRefMapping obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("authorization_flow" Data.Aeson.Types.ToJSON..=)) (patchedSAMLProviderRequestAuthorizationFlow obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("default_relay_state" Data.Aeson.Types.ToJSON..=)) (patchedSAMLProviderRequestDefaultRelayState obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("digest_algorithm" Data.Aeson.Types.ToJSON..=)) (patchedSAMLProviderRequestDigestAlgorithm obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("encryption_kp" Data.Aeson.Types.ToJSON..=)) (patchedSAMLProviderRequestEncryptionKp obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("invalidation_flow" Data.Aeson.Types.ToJSON..=)) (patchedSAMLProviderRequestInvalidationFlow obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("issuer" Data.Aeson.Types.ToJSON..=)) (patchedSAMLProviderRequestIssuer obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("name" Data.Aeson.Types.ToJSON..=)) (patchedSAMLProviderRequestName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("name_id_mapping" Data.Aeson.Types.ToJSON..=)) (patchedSAMLProviderRequestNameIdMapping obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("property_mappings" Data.Aeson.Types.ToJSON..=)) (patchedSAMLProviderRequestPropertyMappings obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("session_valid_not_on_or_after" Data.Aeson.Types.ToJSON..=)) (patchedSAMLProviderRequestSessionValidNotOnOrAfter obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("sign_assertion" Data.Aeson.Types.ToJSON..=)) (patchedSAMLProviderRequestSignAssertion obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("sign_response" Data.Aeson.Types.ToJSON..=)) (patchedSAMLProviderRequestSignResponse obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("signature_algorithm" Data.Aeson.Types.ToJSON..=)) (patchedSAMLProviderRequestSignatureAlgorithm obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("signing_kp" Data.Aeson.Types.ToJSON..=)) (patchedSAMLProviderRequestSigningKp obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("sp_binding" Data.Aeson.Types.ToJSON..=)) (patchedSAMLProviderRequestSpBinding obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("verification_kp" Data.Aeson.Types.ToJSON..=)) (patchedSAMLProviderRequestVerificationKp obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("acs_url" Data.Aeson.Types.ToJSON..=)) (patchedSAMLProviderRequestAcsUrl obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("assertion_valid_not_before" Data.Aeson.Types.ToJSON..=)) (patchedSAMLProviderRequestAssertionValidNotBefore obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("assertion_valid_not_on_or_after" Data.Aeson.Types.ToJSON..=)) (patchedSAMLProviderRequestAssertionValidNotOnOrAfter obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("audience" Data.Aeson.Types.ToJSON..=)) (patchedSAMLProviderRequestAudience obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("authentication_flow" Data.Aeson.Types.ToJSON..=)) (patchedSAMLProviderRequestAuthenticationFlow obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("authn_context_class_ref_mapping" Data.Aeson.Types.ToJSON..=)) (patchedSAMLProviderRequestAuthnContextClassRefMapping obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("authorization_flow" Data.Aeson.Types.ToJSON..=)) (patchedSAMLProviderRequestAuthorizationFlow obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("default_relay_state" Data.Aeson.Types.ToJSON..=)) (patchedSAMLProviderRequestDefaultRelayState obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("digest_algorithm" Data.Aeson.Types.ToJSON..=)) (patchedSAMLProviderRequestDigestAlgorithm obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("encryption_kp" Data.Aeson.Types.ToJSON..=)) (patchedSAMLProviderRequestEncryptionKp obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("invalidation_flow" Data.Aeson.Types.ToJSON..=)) (patchedSAMLProviderRequestInvalidationFlow obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("issuer" Data.Aeson.Types.ToJSON..=)) (patchedSAMLProviderRequestIssuer obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("name" Data.Aeson.Types.ToJSON..=)) (patchedSAMLProviderRequestName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("name_id_mapping" Data.Aeson.Types.ToJSON..=)) (patchedSAMLProviderRequestNameIdMapping obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("property_mappings" Data.Aeson.Types.ToJSON..=)) (patchedSAMLProviderRequestPropertyMappings obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("session_valid_not_on_or_after" Data.Aeson.Types.ToJSON..=)) (patchedSAMLProviderRequestSessionValidNotOnOrAfter obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("sign_assertion" Data.Aeson.Types.ToJSON..=)) (patchedSAMLProviderRequestSignAssertion obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("sign_response" Data.Aeson.Types.ToJSON..=)) (patchedSAMLProviderRequestSignResponse obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("signature_algorithm" Data.Aeson.Types.ToJSON..=)) (patchedSAMLProviderRequestSignatureAlgorithm obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("signing_kp" Data.Aeson.Types.ToJSON..=)) (patchedSAMLProviderRequestSigningKp obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("sp_binding" Data.Aeson.Types.ToJSON..=)) (patchedSAMLProviderRequestSpBinding obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("verification_kp" Data.Aeson.Types.ToJSON..=)) (patchedSAMLProviderRequestVerificationKp obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PatchedSAMLProviderRequest where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PatchedSAMLProviderRequest" (\obj -> (((((((((((((((((((((GHC.Base.pure PatchedSAMLProviderRequest GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "acs_url")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "assertion_valid_not_before")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "assertion_valid_not_on_or_after")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "audience")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "authentication_flow")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "authn_context_class_ref_mapping")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "authorization_flow")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "default_relay_state")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "digest_algorithm")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "encryption_kp")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "invalidation_flow")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "issuer")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "name_id_mapping")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "property_mappings")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "session_valid_not_on_or_after")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "sign_assertion")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "sign_response")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "signature_algorithm")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "signing_kp")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "sp_binding")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "verification_kp"))

-- | Create a new 'PatchedSAMLProviderRequest' with all required fields.
mkPatchedSAMLProviderRequest :: PatchedSAMLProviderRequest
mkPatchedSAMLProviderRequest =
  PatchedSAMLProviderRequest
    { patchedSAMLProviderRequestAcsUrl = GHC.Maybe.Nothing,
      patchedSAMLProviderRequestAssertionValidNotBefore = GHC.Maybe.Nothing,
      patchedSAMLProviderRequestAssertionValidNotOnOrAfter = GHC.Maybe.Nothing,
      patchedSAMLProviderRequestAudience = GHC.Maybe.Nothing,
      patchedSAMLProviderRequestAuthenticationFlow = GHC.Maybe.Nothing,
      patchedSAMLProviderRequestAuthnContextClassRefMapping = GHC.Maybe.Nothing,
      patchedSAMLProviderRequestAuthorizationFlow = GHC.Maybe.Nothing,
      patchedSAMLProviderRequestDefaultRelayState = GHC.Maybe.Nothing,
      patchedSAMLProviderRequestDigestAlgorithm = GHC.Maybe.Nothing,
      patchedSAMLProviderRequestEncryptionKp = GHC.Maybe.Nothing,
      patchedSAMLProviderRequestInvalidationFlow = GHC.Maybe.Nothing,
      patchedSAMLProviderRequestIssuer = GHC.Maybe.Nothing,
      patchedSAMLProviderRequestName = GHC.Maybe.Nothing,
      patchedSAMLProviderRequestNameIdMapping = GHC.Maybe.Nothing,
      patchedSAMLProviderRequestPropertyMappings = GHC.Maybe.Nothing,
      patchedSAMLProviderRequestSessionValidNotOnOrAfter = GHC.Maybe.Nothing,
      patchedSAMLProviderRequestSignAssertion = GHC.Maybe.Nothing,
      patchedSAMLProviderRequestSignResponse = GHC.Maybe.Nothing,
      patchedSAMLProviderRequestSignatureAlgorithm = GHC.Maybe.Nothing,
      patchedSAMLProviderRequestSigningKp = GHC.Maybe.Nothing,
      patchedSAMLProviderRequestSpBinding = GHC.Maybe.Nothing,
      patchedSAMLProviderRequestVerificationKp = GHC.Maybe.Nothing
    }
