{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the types generated from the schema PatchedEmailStageRequest
module AuthentikAPI.Types.PatchedEmailStageRequest where

import qualified AuthentikAPI.Common
import AuthentikAPI.TypeAlias
import {-# SOURCE #-} AuthentikAPI.Types.FlowSetRequest
import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | Defines the object schema located at @components.schemas.PatchedEmailStageRequest@ in the specification.
--
-- EmailStage Serializer
data PatchedEmailStageRequest = PatchedEmailStageRequest
  { -- | activate_user_on_success: Activate users upon completion of stage.
    patchedEmailStageRequestActivateUserOnSuccess :: (GHC.Maybe.Maybe GHC.Types.Bool),
    -- | flow_set
    patchedEmailStageRequestFlowSet :: (GHC.Maybe.Maybe [FlowSetRequest]),
    -- | from_address
    --
    -- Constraints:
    --
    -- * Maximum length of 254
    -- * Minimum length of 1
    patchedEmailStageRequestFromAddress :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | host
    --
    -- Constraints:
    --
    -- * Minimum length of 1
    patchedEmailStageRequestHost :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | name
    --
    -- Constraints:
    --
    -- * Minimum length of 1
    patchedEmailStageRequestName :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | password
    patchedEmailStageRequestPassword :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | port
    --
    -- Constraints:
    --
    -- * Maxium  of 2.1474836e9
    -- * Minimum  of -2.1474836e9
    patchedEmailStageRequestPort :: (GHC.Maybe.Maybe GHC.Types.Int),
    -- | subject
    --
    -- Constraints:
    --
    -- * Minimum length of 1
    patchedEmailStageRequestSubject :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | template
    --
    -- Constraints:
    --
    -- * Minimum length of 1
    patchedEmailStageRequestTemplate :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | timeout
    --
    -- Constraints:
    --
    -- * Maxium  of 2.1474836e9
    -- * Minimum  of -2.1474836e9
    patchedEmailStageRequestTimeout :: (GHC.Maybe.Maybe GHC.Types.Int),
    -- | token_expiry: Time the token sent is valid (Format: hours=3,minutes=17,seconds=300).
    --
    -- Constraints:
    --
    -- * Minimum length of 1
    patchedEmailStageRequestTokenExpiry :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | use_global_settings: When enabled, global Email connection settings will be used and connection settings below will be ignored.
    patchedEmailStageRequestUseGlobalSettings :: (GHC.Maybe.Maybe GHC.Types.Bool),
    -- | use_ssl
    patchedEmailStageRequestUseSsl :: (GHC.Maybe.Maybe GHC.Types.Bool),
    -- | use_tls
    patchedEmailStageRequestUseTls :: (GHC.Maybe.Maybe GHC.Types.Bool),
    -- | username
    patchedEmailStageRequestUsername :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PatchedEmailStageRequest where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("activate_user_on_success" Data.Aeson.Types.ToJSON..=)) (patchedEmailStageRequestActivateUserOnSuccess obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("flow_set" Data.Aeson.Types.ToJSON..=)) (patchedEmailStageRequestFlowSet obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("from_address" Data.Aeson.Types.ToJSON..=)) (patchedEmailStageRequestFromAddress obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("host" Data.Aeson.Types.ToJSON..=)) (patchedEmailStageRequestHost obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("name" Data.Aeson.Types.ToJSON..=)) (patchedEmailStageRequestName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("password" Data.Aeson.Types.ToJSON..=)) (patchedEmailStageRequestPassword obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("port" Data.Aeson.Types.ToJSON..=)) (patchedEmailStageRequestPort obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("subject" Data.Aeson.Types.ToJSON..=)) (patchedEmailStageRequestSubject obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("template" Data.Aeson.Types.ToJSON..=)) (patchedEmailStageRequestTemplate obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("timeout" Data.Aeson.Types.ToJSON..=)) (patchedEmailStageRequestTimeout obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("token_expiry" Data.Aeson.Types.ToJSON..=)) (patchedEmailStageRequestTokenExpiry obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("use_global_settings" Data.Aeson.Types.ToJSON..=)) (patchedEmailStageRequestUseGlobalSettings obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("use_ssl" Data.Aeson.Types.ToJSON..=)) (patchedEmailStageRequestUseSsl obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("use_tls" Data.Aeson.Types.ToJSON..=)) (patchedEmailStageRequestUseTls obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("username" Data.Aeson.Types.ToJSON..=)) (patchedEmailStageRequestUsername obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("activate_user_on_success" Data.Aeson.Types.ToJSON..=)) (patchedEmailStageRequestActivateUserOnSuccess obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("flow_set" Data.Aeson.Types.ToJSON..=)) (patchedEmailStageRequestFlowSet obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("from_address" Data.Aeson.Types.ToJSON..=)) (patchedEmailStageRequestFromAddress obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("host" Data.Aeson.Types.ToJSON..=)) (patchedEmailStageRequestHost obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("name" Data.Aeson.Types.ToJSON..=)) (patchedEmailStageRequestName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("password" Data.Aeson.Types.ToJSON..=)) (patchedEmailStageRequestPassword obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("port" Data.Aeson.Types.ToJSON..=)) (patchedEmailStageRequestPort obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("subject" Data.Aeson.Types.ToJSON..=)) (patchedEmailStageRequestSubject obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("template" Data.Aeson.Types.ToJSON..=)) (patchedEmailStageRequestTemplate obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("timeout" Data.Aeson.Types.ToJSON..=)) (patchedEmailStageRequestTimeout obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("token_expiry" Data.Aeson.Types.ToJSON..=)) (patchedEmailStageRequestTokenExpiry obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("use_global_settings" Data.Aeson.Types.ToJSON..=)) (patchedEmailStageRequestUseGlobalSettings obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("use_ssl" Data.Aeson.Types.ToJSON..=)) (patchedEmailStageRequestUseSsl obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("use_tls" Data.Aeson.Types.ToJSON..=)) (patchedEmailStageRequestUseTls obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("username" Data.Aeson.Types.ToJSON..=)) (patchedEmailStageRequestUsername obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PatchedEmailStageRequest where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PatchedEmailStageRequest" (\obj -> ((((((((((((((GHC.Base.pure PatchedEmailStageRequest GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "activate_user_on_success")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "flow_set")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "from_address")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "host")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "password")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "port")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "subject")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "template")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "timeout")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "token_expiry")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "use_global_settings")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "use_ssl")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "use_tls")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "username"))

-- | Create a new 'PatchedEmailStageRequest' with all required fields.
mkPatchedEmailStageRequest :: PatchedEmailStageRequest
mkPatchedEmailStageRequest =
  PatchedEmailStageRequest
    { patchedEmailStageRequestActivateUserOnSuccess = GHC.Maybe.Nothing,
      patchedEmailStageRequestFlowSet = GHC.Maybe.Nothing,
      patchedEmailStageRequestFromAddress = GHC.Maybe.Nothing,
      patchedEmailStageRequestHost = GHC.Maybe.Nothing,
      patchedEmailStageRequestName = GHC.Maybe.Nothing,
      patchedEmailStageRequestPassword = GHC.Maybe.Nothing,
      patchedEmailStageRequestPort = GHC.Maybe.Nothing,
      patchedEmailStageRequestSubject = GHC.Maybe.Nothing,
      patchedEmailStageRequestTemplate = GHC.Maybe.Nothing,
      patchedEmailStageRequestTimeout = GHC.Maybe.Nothing,
      patchedEmailStageRequestTokenExpiry = GHC.Maybe.Nothing,
      patchedEmailStageRequestUseGlobalSettings = GHC.Maybe.Nothing,
      patchedEmailStageRequestUseSsl = GHC.Maybe.Nothing,
      patchedEmailStageRequestUseTls = GHC.Maybe.Nothing,
      patchedEmailStageRequestUsername = GHC.Maybe.Nothing
    }
