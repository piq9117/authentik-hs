{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the types generated from the schema AuthenticatorWebAuthnStage
module AuthentikAPI.Types.AuthenticatorWebAuthnStage where

import qualified AuthentikAPI.Common
import AuthentikAPI.TypeAlias
import {-# SOURCE #-} AuthentikAPI.Types.FlowSet
import {-# SOURCE #-} AuthentikAPI.Types.ResidentKeyRequirementEnum
import {-# SOURCE #-} AuthentikAPI.Types.UserVerificationEnum
import {-# SOURCE #-} AuthentikAPI.Types.WebAuthnDeviceType
import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | Defines the object schema located at @components.schemas.AuthenticatorWebAuthnStage@ in the specification.
--
-- AuthenticatorWebAuthnStage Serializer
data AuthenticatorWebAuthnStage = AuthenticatorWebAuthnStage
  { -- | authenticator_attachment
    authenticatorWebAuthnStageAuthenticatorAttachment :: (GHC.Maybe.Maybe (AuthentikAPI.Common.Nullable Data.Aeson.Types.Internal.Object)),
    -- | component: Get object type so that we know how to edit the object
    authenticatorWebAuthnStageComponent :: Data.Text.Internal.Text,
    -- | configure_flow: Flow used by an authenticated user to configure this Stage. If empty, user will not be able to configure this stage.
    authenticatorWebAuthnStageConfigureFlow :: (GHC.Maybe.Maybe (AuthentikAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | device_type_restrictions
    authenticatorWebAuthnStageDeviceTypeRestrictions :: (GHC.Maybe.Maybe [Data.Text.Internal.Text]),
    -- | device_type_restrictions_obj
    authenticatorWebAuthnStageDeviceTypeRestrictionsObj :: [WebAuthnDeviceType],
    -- | flow_set
    authenticatorWebAuthnStageFlowSet :: (GHC.Maybe.Maybe [FlowSet]),
    -- | friendly_name
    authenticatorWebAuthnStageFriendlyName :: (GHC.Maybe.Maybe (AuthentikAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | meta_model_name: Return internal model name
    authenticatorWebAuthnStageMetaModelName :: Data.Text.Internal.Text,
    -- | name
    authenticatorWebAuthnStageName :: Data.Text.Internal.Text,
    -- | pk
    authenticatorWebAuthnStagePk :: Data.Text.Internal.Text,
    -- | resident_key_requirement
    authenticatorWebAuthnStageResidentKeyRequirement :: (GHC.Maybe.Maybe ResidentKeyRequirementEnum),
    -- | user_verification
    authenticatorWebAuthnStageUserVerification :: (GHC.Maybe.Maybe UserVerificationEnum),
    -- | verbose_name: Return object\'s verbose_name
    authenticatorWebAuthnStageVerboseName :: Data.Text.Internal.Text,
    -- | verbose_name_plural: Return object\'s plural verbose_name
    authenticatorWebAuthnStageVerboseNamePlural :: Data.Text.Internal.Text
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON AuthenticatorWebAuthnStage where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("authenticator_attachment" Data.Aeson.Types.ToJSON..=)) (authenticatorWebAuthnStageAuthenticatorAttachment obj) : ["component" Data.Aeson.Types.ToJSON..= authenticatorWebAuthnStageComponent obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("configure_flow" Data.Aeson.Types.ToJSON..=)) (authenticatorWebAuthnStageConfigureFlow obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("device_type_restrictions" Data.Aeson.Types.ToJSON..=)) (authenticatorWebAuthnStageDeviceTypeRestrictions obj) : ["device_type_restrictions_obj" Data.Aeson.Types.ToJSON..= authenticatorWebAuthnStageDeviceTypeRestrictionsObj obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("flow_set" Data.Aeson.Types.ToJSON..=)) (authenticatorWebAuthnStageFlowSet obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("friendly_name" Data.Aeson.Types.ToJSON..=)) (authenticatorWebAuthnStageFriendlyName obj) : ["meta_model_name" Data.Aeson.Types.ToJSON..= authenticatorWebAuthnStageMetaModelName obj] : ["name" Data.Aeson.Types.ToJSON..= authenticatorWebAuthnStageName obj] : ["pk" Data.Aeson.Types.ToJSON..= authenticatorWebAuthnStagePk obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("resident_key_requirement" Data.Aeson.Types.ToJSON..=)) (authenticatorWebAuthnStageResidentKeyRequirement obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("user_verification" Data.Aeson.Types.ToJSON..=)) (authenticatorWebAuthnStageUserVerification obj) : ["verbose_name" Data.Aeson.Types.ToJSON..= authenticatorWebAuthnStageVerboseName obj] : ["verbose_name_plural" Data.Aeson.Types.ToJSON..= authenticatorWebAuthnStageVerboseNamePlural obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("authenticator_attachment" Data.Aeson.Types.ToJSON..=)) (authenticatorWebAuthnStageAuthenticatorAttachment obj) : ["component" Data.Aeson.Types.ToJSON..= authenticatorWebAuthnStageComponent obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("configure_flow" Data.Aeson.Types.ToJSON..=)) (authenticatorWebAuthnStageConfigureFlow obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("device_type_restrictions" Data.Aeson.Types.ToJSON..=)) (authenticatorWebAuthnStageDeviceTypeRestrictions obj) : ["device_type_restrictions_obj" Data.Aeson.Types.ToJSON..= authenticatorWebAuthnStageDeviceTypeRestrictionsObj obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("flow_set" Data.Aeson.Types.ToJSON..=)) (authenticatorWebAuthnStageFlowSet obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("friendly_name" Data.Aeson.Types.ToJSON..=)) (authenticatorWebAuthnStageFriendlyName obj) : ["meta_model_name" Data.Aeson.Types.ToJSON..= authenticatorWebAuthnStageMetaModelName obj] : ["name" Data.Aeson.Types.ToJSON..= authenticatorWebAuthnStageName obj] : ["pk" Data.Aeson.Types.ToJSON..= authenticatorWebAuthnStagePk obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("resident_key_requirement" Data.Aeson.Types.ToJSON..=)) (authenticatorWebAuthnStageResidentKeyRequirement obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("user_verification" Data.Aeson.Types.ToJSON..=)) (authenticatorWebAuthnStageUserVerification obj) : ["verbose_name" Data.Aeson.Types.ToJSON..= authenticatorWebAuthnStageVerboseName obj] : ["verbose_name_plural" Data.Aeson.Types.ToJSON..= authenticatorWebAuthnStageVerboseNamePlural obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON AuthenticatorWebAuthnStage where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "AuthenticatorWebAuthnStage" (\obj -> (((((((((((((GHC.Base.pure AuthenticatorWebAuthnStage GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "authenticator_attachment")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "component")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "configure_flow")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "device_type_restrictions")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "device_type_restrictions_obj")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "flow_set")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "friendly_name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "meta_model_name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "pk")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "resident_key_requirement")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "user_verification")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "verbose_name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "verbose_name_plural"))

-- | Create a new 'AuthenticatorWebAuthnStage' with all required fields.
mkAuthenticatorWebAuthnStage ::
  -- | 'authenticatorWebAuthnStageComponent'
  Data.Text.Internal.Text ->
  -- | 'authenticatorWebAuthnStageDeviceTypeRestrictionsObj'
  [WebAuthnDeviceType] ->
  -- | 'authenticatorWebAuthnStageMetaModelName'
  Data.Text.Internal.Text ->
  -- | 'authenticatorWebAuthnStageName'
  Data.Text.Internal.Text ->
  -- | 'authenticatorWebAuthnStagePk'
  Data.Text.Internal.Text ->
  -- | 'authenticatorWebAuthnStageVerboseName'
  Data.Text.Internal.Text ->
  -- | 'authenticatorWebAuthnStageVerboseNamePlural'
  Data.Text.Internal.Text ->
  AuthenticatorWebAuthnStage
mkAuthenticatorWebAuthnStage authenticatorWebAuthnStageComponent authenticatorWebAuthnStageDeviceTypeRestrictionsObj authenticatorWebAuthnStageMetaModelName authenticatorWebAuthnStageName authenticatorWebAuthnStagePk authenticatorWebAuthnStageVerboseName authenticatorWebAuthnStageVerboseNamePlural =
  AuthenticatorWebAuthnStage
    { authenticatorWebAuthnStageAuthenticatorAttachment = GHC.Maybe.Nothing,
      authenticatorWebAuthnStageComponent = authenticatorWebAuthnStageComponent,
      authenticatorWebAuthnStageConfigureFlow = GHC.Maybe.Nothing,
      authenticatorWebAuthnStageDeviceTypeRestrictions = GHC.Maybe.Nothing,
      authenticatorWebAuthnStageDeviceTypeRestrictionsObj = authenticatorWebAuthnStageDeviceTypeRestrictionsObj,
      authenticatorWebAuthnStageFlowSet = GHC.Maybe.Nothing,
      authenticatorWebAuthnStageFriendlyName = GHC.Maybe.Nothing,
      authenticatorWebAuthnStageMetaModelName = authenticatorWebAuthnStageMetaModelName,
      authenticatorWebAuthnStageName = authenticatorWebAuthnStageName,
      authenticatorWebAuthnStagePk = authenticatorWebAuthnStagePk,
      authenticatorWebAuthnStageResidentKeyRequirement = GHC.Maybe.Nothing,
      authenticatorWebAuthnStageUserVerification = GHC.Maybe.Nothing,
      authenticatorWebAuthnStageVerboseName = authenticatorWebAuthnStageVerboseName,
      authenticatorWebAuthnStageVerboseNamePlural = authenticatorWebAuthnStageVerboseNamePlural
    }
