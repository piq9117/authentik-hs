{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the types generated from the schema ExtraRoleObjectPermission
module AuthentikAPI.Types.ExtraRoleObjectPermission where

import qualified AuthentikAPI.Common
import AuthentikAPI.TypeAlias
import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | Defines the object schema located at @components.schemas.ExtraRoleObjectPermission@ in the specification.
--
-- User permission with additional object-related data
data ExtraRoleObjectPermission = ExtraRoleObjectPermission
  { -- | app_label
    extraRoleObjectPermissionAppLabel :: Data.Text.Internal.Text,
    -- | app_label_verbose: Get app label from permission\'s model
    extraRoleObjectPermissionAppLabelVerbose :: Data.Text.Internal.Text,
    -- | codename
    extraRoleObjectPermissionCodename :: Data.Text.Internal.Text,
    -- | id
    extraRoleObjectPermissionId :: GHC.Types.Int,
    -- | model
    extraRoleObjectPermissionModel :: Data.Text.Internal.Text,
    -- | model_verbose: Get model label from permission\'s model
    extraRoleObjectPermissionModelVerbose :: Data.Text.Internal.Text,
    -- | name
    extraRoleObjectPermissionName :: Data.Text.Internal.Text,
    -- | object_description: Get model description from attached model. This operation takes at least
    -- one additional query, and the description is only shown if the user\/role has the
    -- view_ permission on the object
    extraRoleObjectPermissionObjectDescription :: (AuthentikAPI.Common.Nullable Data.Text.Internal.Text),
    -- | object_pk
    extraRoleObjectPermissionObjectPk :: Data.Text.Internal.Text
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON ExtraRoleObjectPermission where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["app_label" Data.Aeson.Types.ToJSON..= extraRoleObjectPermissionAppLabel obj] : ["app_label_verbose" Data.Aeson.Types.ToJSON..= extraRoleObjectPermissionAppLabelVerbose obj] : ["codename" Data.Aeson.Types.ToJSON..= extraRoleObjectPermissionCodename obj] : ["id" Data.Aeson.Types.ToJSON..= extraRoleObjectPermissionId obj] : ["model" Data.Aeson.Types.ToJSON..= extraRoleObjectPermissionModel obj] : ["model_verbose" Data.Aeson.Types.ToJSON..= extraRoleObjectPermissionModelVerbose obj] : ["name" Data.Aeson.Types.ToJSON..= extraRoleObjectPermissionName obj] : ["object_description" Data.Aeson.Types.ToJSON..= extraRoleObjectPermissionObjectDescription obj] : ["object_pk" Data.Aeson.Types.ToJSON..= extraRoleObjectPermissionObjectPk obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["app_label" Data.Aeson.Types.ToJSON..= extraRoleObjectPermissionAppLabel obj] : ["app_label_verbose" Data.Aeson.Types.ToJSON..= extraRoleObjectPermissionAppLabelVerbose obj] : ["codename" Data.Aeson.Types.ToJSON..= extraRoleObjectPermissionCodename obj] : ["id" Data.Aeson.Types.ToJSON..= extraRoleObjectPermissionId obj] : ["model" Data.Aeson.Types.ToJSON..= extraRoleObjectPermissionModel obj] : ["model_verbose" Data.Aeson.Types.ToJSON..= extraRoleObjectPermissionModelVerbose obj] : ["name" Data.Aeson.Types.ToJSON..= extraRoleObjectPermissionName obj] : ["object_description" Data.Aeson.Types.ToJSON..= extraRoleObjectPermissionObjectDescription obj] : ["object_pk" Data.Aeson.Types.ToJSON..= extraRoleObjectPermissionObjectPk obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON ExtraRoleObjectPermission where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "ExtraRoleObjectPermission" (\obj -> ((((((((GHC.Base.pure ExtraRoleObjectPermission GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "app_label")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "app_label_verbose")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "codename")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "model")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "model_verbose")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "object_description")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "object_pk"))

-- | Create a new 'ExtraRoleObjectPermission' with all required fields.
mkExtraRoleObjectPermission ::
  -- | 'extraRoleObjectPermissionAppLabel'
  Data.Text.Internal.Text ->
  -- | 'extraRoleObjectPermissionAppLabelVerbose'
  Data.Text.Internal.Text ->
  -- | 'extraRoleObjectPermissionCodename'
  Data.Text.Internal.Text ->
  -- | 'extraRoleObjectPermissionId'
  GHC.Types.Int ->
  -- | 'extraRoleObjectPermissionModel'
  Data.Text.Internal.Text ->
  -- | 'extraRoleObjectPermissionModelVerbose'
  Data.Text.Internal.Text ->
  -- | 'extraRoleObjectPermissionName'
  Data.Text.Internal.Text ->
  -- | 'extraRoleObjectPermissionObjectDescription'
  AuthentikAPI.Common.Nullable Data.Text.Internal.Text ->
  -- | 'extraRoleObjectPermissionObjectPk'
  Data.Text.Internal.Text ->
  ExtraRoleObjectPermission
mkExtraRoleObjectPermission extraRoleObjectPermissionAppLabel extraRoleObjectPermissionAppLabelVerbose extraRoleObjectPermissionCodename extraRoleObjectPermissionId extraRoleObjectPermissionModel extraRoleObjectPermissionModelVerbose extraRoleObjectPermissionName extraRoleObjectPermissionObjectDescription extraRoleObjectPermissionObjectPk =
  ExtraRoleObjectPermission
    { extraRoleObjectPermissionAppLabel = extraRoleObjectPermissionAppLabel,
      extraRoleObjectPermissionAppLabelVerbose = extraRoleObjectPermissionAppLabelVerbose,
      extraRoleObjectPermissionCodename = extraRoleObjectPermissionCodename,
      extraRoleObjectPermissionId = extraRoleObjectPermissionId,
      extraRoleObjectPermissionModel = extraRoleObjectPermissionModel,
      extraRoleObjectPermissionModelVerbose = extraRoleObjectPermissionModelVerbose,
      extraRoleObjectPermissionName = extraRoleObjectPermissionName,
      extraRoleObjectPermissionObjectDescription = extraRoleObjectPermissionObjectDescription,
      extraRoleObjectPermissionObjectPk = extraRoleObjectPermissionObjectPk
    }
