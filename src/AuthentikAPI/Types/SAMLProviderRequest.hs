{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the types generated from the schema SAMLProviderRequest
module AuthentikAPI.Types.SAMLProviderRequest where

import qualified AuthentikAPI.Common
import AuthentikAPI.TypeAlias
import {-# SOURCE #-} AuthentikAPI.Types.DigestAlgorithmEnum
import {-# SOURCE #-} AuthentikAPI.Types.SignatureAlgorithmEnum
import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | Defines the object schema located at @components.schemas.SAMLProviderRequest@ in the specification.
--
-- SAMLProvider Serializer
data SAMLProviderRequest = SAMLProviderRequest
  { -- | acs_url
    --
    -- Constraints:
    --
    -- * Minimum length of 1
    sAMLProviderRequestAcsUrl :: Data.Text.Internal.Text,
    -- | assertion_valid_not_before: Assertion valid not before current time + this value (Format: hours=-1;minutes=-2;seconds=-3).
    --
    -- Constraints:
    --
    -- * Minimum length of 1
    sAMLProviderRequestAssertionValidNotBefore :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | assertion_valid_not_on_or_after: Assertion not valid on or after current time + this value (Format: hours=1;minutes=2;seconds=3).
    --
    -- Constraints:
    --
    -- * Minimum length of 1
    sAMLProviderRequestAssertionValidNotOnOrAfter :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | audience: Value of the audience restriction field of the assertion. When left empty, no audience restriction will be added.
    sAMLProviderRequestAudience :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | authentication_flow: Flow used for authentication when the associated application is accessed by an un-authenticated user.
    sAMLProviderRequestAuthenticationFlow :: (GHC.Maybe.Maybe (AuthentikAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | authn_context_class_ref_mapping: Configure how the AuthnContextClassRef value will be created. When left empty, the AuthnContextClassRef will be set based on which authentication methods the user used to authenticate.
    sAMLProviderRequestAuthnContextClassRefMapping :: (GHC.Maybe.Maybe (AuthentikAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | authorization_flow: Flow used when authorizing this provider.
    sAMLProviderRequestAuthorizationFlow :: Data.Text.Internal.Text,
    -- | default_relay_state: Default relay_state value for IDP-initiated logins
    sAMLProviderRequestDefaultRelayState :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | digest_algorithm
    sAMLProviderRequestDigestAlgorithm :: (GHC.Maybe.Maybe DigestAlgorithmEnum),
    -- | encryption_kp: When selected, incoming assertions are encrypted by the IdP using the public key of the encryption keypair. The assertion is decrypted by the SP using the the private key.
    sAMLProviderRequestEncryptionKp :: (GHC.Maybe.Maybe (AuthentikAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | invalidation_flow: Flow used ending the session from a provider.
    sAMLProviderRequestInvalidationFlow :: Data.Text.Internal.Text,
    -- | issuer: Also known as EntityID
    --
    -- Constraints:
    --
    -- * Minimum length of 1
    sAMLProviderRequestIssuer :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | name
    --
    -- Constraints:
    --
    -- * Minimum length of 1
    sAMLProviderRequestName :: Data.Text.Internal.Text,
    -- | name_id_mapping: Configure how the NameID value will be created. When left empty, the NameIDPolicy of the incoming request will be considered
    sAMLProviderRequestNameIdMapping :: (GHC.Maybe.Maybe (AuthentikAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | property_mappings
    sAMLProviderRequestPropertyMappings :: (GHC.Maybe.Maybe [Data.Text.Internal.Text]),
    -- | session_valid_not_on_or_after: Session not valid on or after current time + this value (Format: hours=1;minutes=2;seconds=3).
    --
    -- Constraints:
    --
    -- * Minimum length of 1
    sAMLProviderRequestSessionValidNotOnOrAfter :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | sign_assertion
    sAMLProviderRequestSignAssertion :: (GHC.Maybe.Maybe GHC.Types.Bool),
    -- | sign_response
    sAMLProviderRequestSignResponse :: (GHC.Maybe.Maybe GHC.Types.Bool),
    -- | signature_algorithm
    sAMLProviderRequestSignatureAlgorithm :: (GHC.Maybe.Maybe SignatureAlgorithmEnum),
    -- | signing_kp: Keypair used to sign outgoing Responses going to the Service Provider.
    sAMLProviderRequestSigningKp :: (GHC.Maybe.Maybe (AuthentikAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | sp_binding: This determines how authentik sends the response back to the Service Provider.
    sAMLProviderRequestSpBinding :: (GHC.Maybe.Maybe Data.Aeson.Types.Internal.Object),
    -- | verification_kp: When selected, incoming assertion\'s Signatures will be validated against this certificate. To allow unsigned Requests, leave on default.
    sAMLProviderRequestVerificationKp :: (GHC.Maybe.Maybe (AuthentikAPI.Common.Nullable Data.Text.Internal.Text))
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON SAMLProviderRequest where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["acs_url" Data.Aeson.Types.ToJSON..= sAMLProviderRequestAcsUrl obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("assertion_valid_not_before" Data.Aeson.Types.ToJSON..=)) (sAMLProviderRequestAssertionValidNotBefore obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("assertion_valid_not_on_or_after" Data.Aeson.Types.ToJSON..=)) (sAMLProviderRequestAssertionValidNotOnOrAfter obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("audience" Data.Aeson.Types.ToJSON..=)) (sAMLProviderRequestAudience obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("authentication_flow" Data.Aeson.Types.ToJSON..=)) (sAMLProviderRequestAuthenticationFlow obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("authn_context_class_ref_mapping" Data.Aeson.Types.ToJSON..=)) (sAMLProviderRequestAuthnContextClassRefMapping obj) : ["authorization_flow" Data.Aeson.Types.ToJSON..= sAMLProviderRequestAuthorizationFlow obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("default_relay_state" Data.Aeson.Types.ToJSON..=)) (sAMLProviderRequestDefaultRelayState obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("digest_algorithm" Data.Aeson.Types.ToJSON..=)) (sAMLProviderRequestDigestAlgorithm obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("encryption_kp" Data.Aeson.Types.ToJSON..=)) (sAMLProviderRequestEncryptionKp obj) : ["invalidation_flow" Data.Aeson.Types.ToJSON..= sAMLProviderRequestInvalidationFlow obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("issuer" Data.Aeson.Types.ToJSON..=)) (sAMLProviderRequestIssuer obj) : ["name" Data.Aeson.Types.ToJSON..= sAMLProviderRequestName obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("name_id_mapping" Data.Aeson.Types.ToJSON..=)) (sAMLProviderRequestNameIdMapping obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("property_mappings" Data.Aeson.Types.ToJSON..=)) (sAMLProviderRequestPropertyMappings obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("session_valid_not_on_or_after" Data.Aeson.Types.ToJSON..=)) (sAMLProviderRequestSessionValidNotOnOrAfter obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("sign_assertion" Data.Aeson.Types.ToJSON..=)) (sAMLProviderRequestSignAssertion obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("sign_response" Data.Aeson.Types.ToJSON..=)) (sAMLProviderRequestSignResponse obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("signature_algorithm" Data.Aeson.Types.ToJSON..=)) (sAMLProviderRequestSignatureAlgorithm obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("signing_kp" Data.Aeson.Types.ToJSON..=)) (sAMLProviderRequestSigningKp obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("sp_binding" Data.Aeson.Types.ToJSON..=)) (sAMLProviderRequestSpBinding obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("verification_kp" Data.Aeson.Types.ToJSON..=)) (sAMLProviderRequestVerificationKp obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["acs_url" Data.Aeson.Types.ToJSON..= sAMLProviderRequestAcsUrl obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("assertion_valid_not_before" Data.Aeson.Types.ToJSON..=)) (sAMLProviderRequestAssertionValidNotBefore obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("assertion_valid_not_on_or_after" Data.Aeson.Types.ToJSON..=)) (sAMLProviderRequestAssertionValidNotOnOrAfter obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("audience" Data.Aeson.Types.ToJSON..=)) (sAMLProviderRequestAudience obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("authentication_flow" Data.Aeson.Types.ToJSON..=)) (sAMLProviderRequestAuthenticationFlow obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("authn_context_class_ref_mapping" Data.Aeson.Types.ToJSON..=)) (sAMLProviderRequestAuthnContextClassRefMapping obj) : ["authorization_flow" Data.Aeson.Types.ToJSON..= sAMLProviderRequestAuthorizationFlow obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("default_relay_state" Data.Aeson.Types.ToJSON..=)) (sAMLProviderRequestDefaultRelayState obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("digest_algorithm" Data.Aeson.Types.ToJSON..=)) (sAMLProviderRequestDigestAlgorithm obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("encryption_kp" Data.Aeson.Types.ToJSON..=)) (sAMLProviderRequestEncryptionKp obj) : ["invalidation_flow" Data.Aeson.Types.ToJSON..= sAMLProviderRequestInvalidationFlow obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("issuer" Data.Aeson.Types.ToJSON..=)) (sAMLProviderRequestIssuer obj) : ["name" Data.Aeson.Types.ToJSON..= sAMLProviderRequestName obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("name_id_mapping" Data.Aeson.Types.ToJSON..=)) (sAMLProviderRequestNameIdMapping obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("property_mappings" Data.Aeson.Types.ToJSON..=)) (sAMLProviderRequestPropertyMappings obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("session_valid_not_on_or_after" Data.Aeson.Types.ToJSON..=)) (sAMLProviderRequestSessionValidNotOnOrAfter obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("sign_assertion" Data.Aeson.Types.ToJSON..=)) (sAMLProviderRequestSignAssertion obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("sign_response" Data.Aeson.Types.ToJSON..=)) (sAMLProviderRequestSignResponse obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("signature_algorithm" Data.Aeson.Types.ToJSON..=)) (sAMLProviderRequestSignatureAlgorithm obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("signing_kp" Data.Aeson.Types.ToJSON..=)) (sAMLProviderRequestSigningKp obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("sp_binding" Data.Aeson.Types.ToJSON..=)) (sAMLProviderRequestSpBinding obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("verification_kp" Data.Aeson.Types.ToJSON..=)) (sAMLProviderRequestVerificationKp obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON SAMLProviderRequest where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "SAMLProviderRequest" (\obj -> (((((((((((((((((((((GHC.Base.pure SAMLProviderRequest GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "acs_url")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "assertion_valid_not_before")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "assertion_valid_not_on_or_after")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "audience")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "authentication_flow")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "authn_context_class_ref_mapping")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "authorization_flow")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "default_relay_state")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "digest_algorithm")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "encryption_kp")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "invalidation_flow")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "issuer")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "name_id_mapping")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "property_mappings")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "session_valid_not_on_or_after")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "sign_assertion")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "sign_response")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "signature_algorithm")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "signing_kp")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "sp_binding")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "verification_kp"))

-- | Create a new 'SAMLProviderRequest' with all required fields.
mkSAMLProviderRequest ::
  -- | 'sAMLProviderRequestAcsUrl'
  Data.Text.Internal.Text ->
  -- | 'sAMLProviderRequestAuthorizationFlow'
  Data.Text.Internal.Text ->
  -- | 'sAMLProviderRequestInvalidationFlow'
  Data.Text.Internal.Text ->
  -- | 'sAMLProviderRequestName'
  Data.Text.Internal.Text ->
  SAMLProviderRequest
mkSAMLProviderRequest sAMLProviderRequestAcsUrl sAMLProviderRequestAuthorizationFlow sAMLProviderRequestInvalidationFlow sAMLProviderRequestName =
  SAMLProviderRequest
    { sAMLProviderRequestAcsUrl = sAMLProviderRequestAcsUrl,
      sAMLProviderRequestAssertionValidNotBefore = GHC.Maybe.Nothing,
      sAMLProviderRequestAssertionValidNotOnOrAfter = GHC.Maybe.Nothing,
      sAMLProviderRequestAudience = GHC.Maybe.Nothing,
      sAMLProviderRequestAuthenticationFlow = GHC.Maybe.Nothing,
      sAMLProviderRequestAuthnContextClassRefMapping = GHC.Maybe.Nothing,
      sAMLProviderRequestAuthorizationFlow = sAMLProviderRequestAuthorizationFlow,
      sAMLProviderRequestDefaultRelayState = GHC.Maybe.Nothing,
      sAMLProviderRequestDigestAlgorithm = GHC.Maybe.Nothing,
      sAMLProviderRequestEncryptionKp = GHC.Maybe.Nothing,
      sAMLProviderRequestInvalidationFlow = sAMLProviderRequestInvalidationFlow,
      sAMLProviderRequestIssuer = GHC.Maybe.Nothing,
      sAMLProviderRequestName = sAMLProviderRequestName,
      sAMLProviderRequestNameIdMapping = GHC.Maybe.Nothing,
      sAMLProviderRequestPropertyMappings = GHC.Maybe.Nothing,
      sAMLProviderRequestSessionValidNotOnOrAfter = GHC.Maybe.Nothing,
      sAMLProviderRequestSignAssertion = GHC.Maybe.Nothing,
      sAMLProviderRequestSignResponse = GHC.Maybe.Nothing,
      sAMLProviderRequestSignatureAlgorithm = GHC.Maybe.Nothing,
      sAMLProviderRequestSigningKp = GHC.Maybe.Nothing,
      sAMLProviderRequestSpBinding = GHC.Maybe.Nothing,
      sAMLProviderRequestVerificationKp = GHC.Maybe.Nothing
    }
