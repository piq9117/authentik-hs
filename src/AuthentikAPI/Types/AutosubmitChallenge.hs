{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the types generated from the schema AutosubmitChallenge
module AuthentikAPI.Types.AutosubmitChallenge where

import qualified AuthentikAPI.Common
import AuthentikAPI.TypeAlias
import {-# SOURCE #-} AuthentikAPI.Types.ContextualFlowInfo
import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | Defines the object schema located at @components.schemas.AutosubmitChallenge@ in the specification.
--
-- Autosubmit challenge used to send and navigate a POST request
data AutosubmitChallenge = AutosubmitChallenge
  { -- | attrs
    autosubmitChallengeAttrs :: Data.Aeson.Types.Internal.Object,
    -- | component
    autosubmitChallengeComponent :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | flow_info: Contextual flow information for a challenge
    autosubmitChallengeFlowInfo :: (GHC.Maybe.Maybe ContextualFlowInfo),
    -- | response_errors
    autosubmitChallengeResponseErrors :: (GHC.Maybe.Maybe Data.Aeson.Types.Internal.Object),
    -- | title
    autosubmitChallengeTitle :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | url
    autosubmitChallengeUrl :: Data.Text.Internal.Text
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON AutosubmitChallenge where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["attrs" Data.Aeson.Types.ToJSON..= autosubmitChallengeAttrs obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("component" Data.Aeson.Types.ToJSON..=)) (autosubmitChallengeComponent obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("flow_info" Data.Aeson.Types.ToJSON..=)) (autosubmitChallengeFlowInfo obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("response_errors" Data.Aeson.Types.ToJSON..=)) (autosubmitChallengeResponseErrors obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("title" Data.Aeson.Types.ToJSON..=)) (autosubmitChallengeTitle obj) : ["url" Data.Aeson.Types.ToJSON..= autosubmitChallengeUrl obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["attrs" Data.Aeson.Types.ToJSON..= autosubmitChallengeAttrs obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("component" Data.Aeson.Types.ToJSON..=)) (autosubmitChallengeComponent obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("flow_info" Data.Aeson.Types.ToJSON..=)) (autosubmitChallengeFlowInfo obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("response_errors" Data.Aeson.Types.ToJSON..=)) (autosubmitChallengeResponseErrors obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("title" Data.Aeson.Types.ToJSON..=)) (autosubmitChallengeTitle obj) : ["url" Data.Aeson.Types.ToJSON..= autosubmitChallengeUrl obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON AutosubmitChallenge where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "AutosubmitChallenge" (\obj -> (((((GHC.Base.pure AutosubmitChallenge GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "attrs")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "component")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "flow_info")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "response_errors")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "title")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "url"))

-- | Create a new 'AutosubmitChallenge' with all required fields.
mkAutosubmitChallenge ::
  -- | 'autosubmitChallengeAttrs'
  Data.Aeson.Types.Internal.Object ->
  -- | 'autosubmitChallengeUrl'
  Data.Text.Internal.Text ->
  AutosubmitChallenge
mkAutosubmitChallenge autosubmitChallengeAttrs autosubmitChallengeUrl =
  AutosubmitChallenge
    { autosubmitChallengeAttrs = autosubmitChallengeAttrs,
      autosubmitChallengeComponent = GHC.Maybe.Nothing,
      autosubmitChallengeFlowInfo = GHC.Maybe.Nothing,
      autosubmitChallengeResponseErrors = GHC.Maybe.Nothing,
      autosubmitChallengeTitle = GHC.Maybe.Nothing,
      autosubmitChallengeUrl = autosubmitChallengeUrl
    }
