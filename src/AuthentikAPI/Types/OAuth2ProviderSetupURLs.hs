{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the types generated from the schema OAuth2ProviderSetupURLs
module AuthentikAPI.Types.OAuth2ProviderSetupURLs where

import qualified AuthentikAPI.Common
import AuthentikAPI.TypeAlias
import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | Defines the object schema located at @components.schemas.OAuth2ProviderSetupURLs@ in the specification.
--
-- OAuth2 Provider Metadata serializer
data OAuth2ProviderSetupURLs = OAuth2ProviderSetupURLs
  { -- | authorize
    oAuth2ProviderSetupURLsAuthorize :: Data.Text.Internal.Text,
    -- | issuer
    oAuth2ProviderSetupURLsIssuer :: Data.Text.Internal.Text,
    -- | jwks
    oAuth2ProviderSetupURLsJwks :: Data.Text.Internal.Text,
    -- | logout
    oAuth2ProviderSetupURLsLogout :: Data.Text.Internal.Text,
    -- | provider_info
    oAuth2ProviderSetupURLsProviderInfo :: Data.Text.Internal.Text,
    -- | token
    oAuth2ProviderSetupURLsToken :: Data.Text.Internal.Text,
    -- | user_info
    oAuth2ProviderSetupURLsUserInfo :: Data.Text.Internal.Text
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON OAuth2ProviderSetupURLs where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["authorize" Data.Aeson.Types.ToJSON..= oAuth2ProviderSetupURLsAuthorize obj] : ["issuer" Data.Aeson.Types.ToJSON..= oAuth2ProviderSetupURLsIssuer obj] : ["jwks" Data.Aeson.Types.ToJSON..= oAuth2ProviderSetupURLsJwks obj] : ["logout" Data.Aeson.Types.ToJSON..= oAuth2ProviderSetupURLsLogout obj] : ["provider_info" Data.Aeson.Types.ToJSON..= oAuth2ProviderSetupURLsProviderInfo obj] : ["token" Data.Aeson.Types.ToJSON..= oAuth2ProviderSetupURLsToken obj] : ["user_info" Data.Aeson.Types.ToJSON..= oAuth2ProviderSetupURLsUserInfo obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["authorize" Data.Aeson.Types.ToJSON..= oAuth2ProviderSetupURLsAuthorize obj] : ["issuer" Data.Aeson.Types.ToJSON..= oAuth2ProviderSetupURLsIssuer obj] : ["jwks" Data.Aeson.Types.ToJSON..= oAuth2ProviderSetupURLsJwks obj] : ["logout" Data.Aeson.Types.ToJSON..= oAuth2ProviderSetupURLsLogout obj] : ["provider_info" Data.Aeson.Types.ToJSON..= oAuth2ProviderSetupURLsProviderInfo obj] : ["token" Data.Aeson.Types.ToJSON..= oAuth2ProviderSetupURLsToken obj] : ["user_info" Data.Aeson.Types.ToJSON..= oAuth2ProviderSetupURLsUserInfo obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON OAuth2ProviderSetupURLs where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "OAuth2ProviderSetupURLs" (\obj -> ((((((GHC.Base.pure OAuth2ProviderSetupURLs GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "authorize")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "issuer")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "jwks")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "logout")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "provider_info")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "token")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "user_info"))

-- | Create a new 'OAuth2ProviderSetupURLs' with all required fields.
mkOAuth2ProviderSetupURLs ::
  -- | 'oAuth2ProviderSetupURLsAuthorize'
  Data.Text.Internal.Text ->
  -- | 'oAuth2ProviderSetupURLsIssuer'
  Data.Text.Internal.Text ->
  -- | 'oAuth2ProviderSetupURLsJwks'
  Data.Text.Internal.Text ->
  -- | 'oAuth2ProviderSetupURLsLogout'
  Data.Text.Internal.Text ->
  -- | 'oAuth2ProviderSetupURLsProviderInfo'
  Data.Text.Internal.Text ->
  -- | 'oAuth2ProviderSetupURLsToken'
  Data.Text.Internal.Text ->
  -- | 'oAuth2ProviderSetupURLsUserInfo'
  Data.Text.Internal.Text ->
  OAuth2ProviderSetupURLs
mkOAuth2ProviderSetupURLs oAuth2ProviderSetupURLsAuthorize oAuth2ProviderSetupURLsIssuer oAuth2ProviderSetupURLsJwks oAuth2ProviderSetupURLsLogout oAuth2ProviderSetupURLsProviderInfo oAuth2ProviderSetupURLsToken oAuth2ProviderSetupURLsUserInfo =
  OAuth2ProviderSetupURLs
    { oAuth2ProviderSetupURLsAuthorize = oAuth2ProviderSetupURLsAuthorize,
      oAuth2ProviderSetupURLsIssuer = oAuth2ProviderSetupURLsIssuer,
      oAuth2ProviderSetupURLsJwks = oAuth2ProviderSetupURLsJwks,
      oAuth2ProviderSetupURLsLogout = oAuth2ProviderSetupURLsLogout,
      oAuth2ProviderSetupURLsProviderInfo = oAuth2ProviderSetupURLsProviderInfo,
      oAuth2ProviderSetupURLsToken = oAuth2ProviderSetupURLsToken,
      oAuth2ProviderSetupURLsUserInfo = oAuth2ProviderSetupURLsUserInfo
    }
