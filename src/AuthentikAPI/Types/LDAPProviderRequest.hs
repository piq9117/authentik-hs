{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the types generated from the schema LDAPProviderRequest
module AuthentikAPI.Types.LDAPProviderRequest where

import qualified AuthentikAPI.Common
import AuthentikAPI.TypeAlias
import {-# SOURCE #-} AuthentikAPI.Types.LDAPAPIAccessMode
import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | Defines the object schema located at @components.schemas.LDAPProviderRequest@ in the specification.
--
-- LDAPProvider Serializer
data LDAPProviderRequest = LDAPProviderRequest
  { -- | authentication_flow: Flow used for authentication when the associated application is accessed by an un-authenticated user.
    lDAPProviderRequestAuthenticationFlow :: (GHC.Maybe.Maybe (AuthentikAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | authorization_flow: Flow used when authorizing this provider.
    lDAPProviderRequestAuthorizationFlow :: Data.Text.Internal.Text,
    -- | base_dn: DN under which objects are accessible.
    --
    -- Constraints:
    --
    -- * Minimum length of 1
    lDAPProviderRequestBaseDn :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | bind_mode
    lDAPProviderRequestBindMode :: (GHC.Maybe.Maybe LDAPAPIAccessMode),
    -- | certificate
    lDAPProviderRequestCertificate :: (GHC.Maybe.Maybe (AuthentikAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | gid_start_number: The start for gidNumbers, this number is added to a number generated from the group.pk to make sure that the numbers aren\'t too low for POSIX groups. Default is 4000 to ensure that we don\'t collide with local groups or users primary groups gidNumber
    --
    -- Constraints:
    --
    -- * Maxium  of 2.1474836e9
    -- * Minimum  of -2.1474836e9
    lDAPProviderRequestGidStartNumber :: (GHC.Maybe.Maybe GHC.Types.Int),
    -- | invalidation_flow: Flow used ending the session from a provider.
    lDAPProviderRequestInvalidationFlow :: Data.Text.Internal.Text,
    -- | mfa_support: When enabled, code-based multi-factor authentication can be used by appending a semicolon and the TOTP code to the password. This should only be enabled if all users that will bind to this provider have a TOTP device configured, as otherwise a password may incorrectly be rejected if it contains a semicolon.
    lDAPProviderRequestMfaSupport :: (GHC.Maybe.Maybe GHC.Types.Bool),
    -- | name
    --
    -- Constraints:
    --
    -- * Minimum length of 1
    lDAPProviderRequestName :: Data.Text.Internal.Text,
    -- | property_mappings
    lDAPProviderRequestPropertyMappings :: (GHC.Maybe.Maybe [Data.Text.Internal.Text]),
    -- | search_mode
    lDAPProviderRequestSearchMode :: (GHC.Maybe.Maybe LDAPAPIAccessMode),
    -- | tls_server_name
    lDAPProviderRequestTlsServerName :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | uid_start_number: The start for uidNumbers, this number is added to the user.pk to make sure that the numbers aren\'t too low for POSIX users. Default is 2000 to ensure that we don\'t collide with local users uidNumber
    --
    -- Constraints:
    --
    -- * Maxium  of 2.1474836e9
    -- * Minimum  of -2.1474836e9
    lDAPProviderRequestUidStartNumber :: (GHC.Maybe.Maybe GHC.Types.Int)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON LDAPProviderRequest where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("authentication_flow" Data.Aeson.Types.ToJSON..=)) (lDAPProviderRequestAuthenticationFlow obj) : ["authorization_flow" Data.Aeson.Types.ToJSON..= lDAPProviderRequestAuthorizationFlow obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("base_dn" Data.Aeson.Types.ToJSON..=)) (lDAPProviderRequestBaseDn obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("bind_mode" Data.Aeson.Types.ToJSON..=)) (lDAPProviderRequestBindMode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("certificate" Data.Aeson.Types.ToJSON..=)) (lDAPProviderRequestCertificate obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("gid_start_number" Data.Aeson.Types.ToJSON..=)) (lDAPProviderRequestGidStartNumber obj) : ["invalidation_flow" Data.Aeson.Types.ToJSON..= lDAPProviderRequestInvalidationFlow obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("mfa_support" Data.Aeson.Types.ToJSON..=)) (lDAPProviderRequestMfaSupport obj) : ["name" Data.Aeson.Types.ToJSON..= lDAPProviderRequestName obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("property_mappings" Data.Aeson.Types.ToJSON..=)) (lDAPProviderRequestPropertyMappings obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("search_mode" Data.Aeson.Types.ToJSON..=)) (lDAPProviderRequestSearchMode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tls_server_name" Data.Aeson.Types.ToJSON..=)) (lDAPProviderRequestTlsServerName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("uid_start_number" Data.Aeson.Types.ToJSON..=)) (lDAPProviderRequestUidStartNumber obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("authentication_flow" Data.Aeson.Types.ToJSON..=)) (lDAPProviderRequestAuthenticationFlow obj) : ["authorization_flow" Data.Aeson.Types.ToJSON..= lDAPProviderRequestAuthorizationFlow obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("base_dn" Data.Aeson.Types.ToJSON..=)) (lDAPProviderRequestBaseDn obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("bind_mode" Data.Aeson.Types.ToJSON..=)) (lDAPProviderRequestBindMode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("certificate" Data.Aeson.Types.ToJSON..=)) (lDAPProviderRequestCertificate obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("gid_start_number" Data.Aeson.Types.ToJSON..=)) (lDAPProviderRequestGidStartNumber obj) : ["invalidation_flow" Data.Aeson.Types.ToJSON..= lDAPProviderRequestInvalidationFlow obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("mfa_support" Data.Aeson.Types.ToJSON..=)) (lDAPProviderRequestMfaSupport obj) : ["name" Data.Aeson.Types.ToJSON..= lDAPProviderRequestName obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("property_mappings" Data.Aeson.Types.ToJSON..=)) (lDAPProviderRequestPropertyMappings obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("search_mode" Data.Aeson.Types.ToJSON..=)) (lDAPProviderRequestSearchMode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tls_server_name" Data.Aeson.Types.ToJSON..=)) (lDAPProviderRequestTlsServerName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("uid_start_number" Data.Aeson.Types.ToJSON..=)) (lDAPProviderRequestUidStartNumber obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON LDAPProviderRequest where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "LDAPProviderRequest" (\obj -> ((((((((((((GHC.Base.pure LDAPProviderRequest GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "authentication_flow")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "authorization_flow")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "base_dn")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "bind_mode")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "certificate")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "gid_start_number")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "invalidation_flow")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "mfa_support")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "property_mappings")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "search_mode")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "tls_server_name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "uid_start_number"))

-- | Create a new 'LDAPProviderRequest' with all required fields.
mkLDAPProviderRequest ::
  -- | 'lDAPProviderRequestAuthorizationFlow'
  Data.Text.Internal.Text ->
  -- | 'lDAPProviderRequestInvalidationFlow'
  Data.Text.Internal.Text ->
  -- | 'lDAPProviderRequestName'
  Data.Text.Internal.Text ->
  LDAPProviderRequest
mkLDAPProviderRequest lDAPProviderRequestAuthorizationFlow lDAPProviderRequestInvalidationFlow lDAPProviderRequestName =
  LDAPProviderRequest
    { lDAPProviderRequestAuthenticationFlow = GHC.Maybe.Nothing,
      lDAPProviderRequestAuthorizationFlow = lDAPProviderRequestAuthorizationFlow,
      lDAPProviderRequestBaseDn = GHC.Maybe.Nothing,
      lDAPProviderRequestBindMode = GHC.Maybe.Nothing,
      lDAPProviderRequestCertificate = GHC.Maybe.Nothing,
      lDAPProviderRequestGidStartNumber = GHC.Maybe.Nothing,
      lDAPProviderRequestInvalidationFlow = lDAPProviderRequestInvalidationFlow,
      lDAPProviderRequestMfaSupport = GHC.Maybe.Nothing,
      lDAPProviderRequestName = lDAPProviderRequestName,
      lDAPProviderRequestPropertyMappings = GHC.Maybe.Nothing,
      lDAPProviderRequestSearchMode = GHC.Maybe.Nothing,
      lDAPProviderRequestTlsServerName = GHC.Maybe.Nothing,
      lDAPProviderRequestUidStartNumber = GHC.Maybe.Nothing
    }
