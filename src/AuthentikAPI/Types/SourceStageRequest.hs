{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the types generated from the schema SourceStageRequest
module AuthentikAPI.Types.SourceStageRequest where

import qualified AuthentikAPI.Common
import AuthentikAPI.TypeAlias
import {-# SOURCE #-} AuthentikAPI.Types.FlowSetRequest
import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | Defines the object schema located at @components.schemas.SourceStageRequest@ in the specification.
--
-- SourceStage Serializer
data SourceStageRequest = SourceStageRequest
  { -- | flow_set
    sourceStageRequestFlowSet :: (GHC.Maybe.Maybe [FlowSetRequest]),
    -- | name
    --
    -- Constraints:
    --
    -- * Minimum length of 1
    sourceStageRequestName :: Data.Text.Internal.Text,
    -- | resume_timeout: Amount of time a user can take to return from the source to continue the flow (Format: hours=-1;minutes=-2;seconds=-3)
    --
    -- Constraints:
    --
    -- * Minimum length of 1
    sourceStageRequestResumeTimeout :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | source
    sourceStageRequestSource :: Data.Text.Internal.Text
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON SourceStageRequest where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("flow_set" Data.Aeson.Types.ToJSON..=)) (sourceStageRequestFlowSet obj) : ["name" Data.Aeson.Types.ToJSON..= sourceStageRequestName obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("resume_timeout" Data.Aeson.Types.ToJSON..=)) (sourceStageRequestResumeTimeout obj) : ["source" Data.Aeson.Types.ToJSON..= sourceStageRequestSource obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("flow_set" Data.Aeson.Types.ToJSON..=)) (sourceStageRequestFlowSet obj) : ["name" Data.Aeson.Types.ToJSON..= sourceStageRequestName obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("resume_timeout" Data.Aeson.Types.ToJSON..=)) (sourceStageRequestResumeTimeout obj) : ["source" Data.Aeson.Types.ToJSON..= sourceStageRequestSource obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON SourceStageRequest where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "SourceStageRequest" (\obj -> (((GHC.Base.pure SourceStageRequest GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "flow_set")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "resume_timeout")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "source"))

-- | Create a new 'SourceStageRequest' with all required fields.
mkSourceStageRequest ::
  -- | 'sourceStageRequestName'
  Data.Text.Internal.Text ->
  -- | 'sourceStageRequestSource'
  Data.Text.Internal.Text ->
  SourceStageRequest
mkSourceStageRequest sourceStageRequestName sourceStageRequestSource =
  SourceStageRequest
    { sourceStageRequestFlowSet = GHC.Maybe.Nothing,
      sourceStageRequestName = sourceStageRequestName,
      sourceStageRequestResumeTimeout = GHC.Maybe.Nothing,
      sourceStageRequestSource = sourceStageRequestSource
    }
