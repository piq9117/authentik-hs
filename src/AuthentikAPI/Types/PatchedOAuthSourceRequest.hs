{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the types generated from the schema PatchedOAuthSourceRequest
module AuthentikAPI.Types.PatchedOAuthSourceRequest where

import qualified AuthentikAPI.Common
import AuthentikAPI.TypeAlias
import {-# SOURCE #-} AuthentikAPI.Types.PolicyEngineMode
import {-# SOURCE #-} AuthentikAPI.Types.ProviderTypeEnum
import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | Defines the object schema located at @components.schemas.PatchedOAuthSourceRequest@ in the specification.
--
-- OAuth Source Serializer
data PatchedOAuthSourceRequest = PatchedOAuthSourceRequest
  { -- | access_token_url: URL used by authentik to retrieve tokens.
    --
    -- Constraints:
    --
    -- * Maximum length of 255
    patchedOAuthSourceRequestAccessTokenUrl :: (GHC.Maybe.Maybe (AuthentikAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | additional_scopes
    patchedOAuthSourceRequestAdditionalScopes :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | authentication_flow: Flow to use when authenticating existing users.
    patchedOAuthSourceRequestAuthenticationFlow :: (GHC.Maybe.Maybe (AuthentikAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | authorization_code_auth_method: How to perform authentication during an authorization_code token request flow
    patchedOAuthSourceRequestAuthorizationCodeAuthMethod :: (GHC.Maybe.Maybe Data.Aeson.Types.Internal.Object),
    -- | authorization_url: URL the user is redirect to to conest the flow.
    --
    -- Constraints:
    --
    -- * Maximum length of 255
    patchedOAuthSourceRequestAuthorizationUrl :: (GHC.Maybe.Maybe (AuthentikAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | consumer_key
    --
    -- Constraints:
    --
    -- * Minimum length of 1
    patchedOAuthSourceRequestConsumerKey :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | consumer_secret
    --
    -- Constraints:
    --
    -- * Minimum length of 1
    patchedOAuthSourceRequestConsumerSecret :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | enabled
    patchedOAuthSourceRequestEnabled :: (GHC.Maybe.Maybe GHC.Types.Bool),
    -- | enrollment_flow: Flow to use when enrolling new users.
    patchedOAuthSourceRequestEnrollmentFlow :: (GHC.Maybe.Maybe (AuthentikAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | group_matching_mode: How the source determines if an existing group should be used or a new group created.
    patchedOAuthSourceRequestGroupMatchingMode :: (GHC.Maybe.Maybe Data.Aeson.Types.Internal.Object),
    -- | group_property_mappings
    patchedOAuthSourceRequestGroupPropertyMappings :: (GHC.Maybe.Maybe [Data.Text.Internal.Text]),
    -- | name: Source\'s display Name.
    --
    -- Constraints:
    --
    -- * Minimum length of 1
    patchedOAuthSourceRequestName :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | oidc_jwks
    patchedOAuthSourceRequestOidcJwks :: (GHC.Maybe.Maybe Data.Aeson.Types.Internal.Object),
    -- | oidc_jwks_url
    patchedOAuthSourceRequestOidcJwksUrl :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | oidc_well_known_url
    patchedOAuthSourceRequestOidcWellKnownUrl :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | policy_engine_mode
    patchedOAuthSourceRequestPolicyEngineMode :: (GHC.Maybe.Maybe PolicyEngineMode),
    -- | profile_url: URL used by authentik to get user information.
    --
    -- Constraints:
    --
    -- * Maximum length of 255
    patchedOAuthSourceRequestProfileUrl :: (GHC.Maybe.Maybe (AuthentikAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | provider_type
    patchedOAuthSourceRequestProviderType :: (GHC.Maybe.Maybe ProviderTypeEnum),
    -- | request_token_url: URL used to request the initial token. This URL is only required for OAuth 1.
    --
    -- Constraints:
    --
    -- * Maximum length of 255
    patchedOAuthSourceRequestRequestTokenUrl :: (GHC.Maybe.Maybe (AuthentikAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | slug: Internal source name, used in URLs.
    --
    -- Constraints:
    --
    -- * Maximum length of 50
    -- * Minimum length of 1
    -- * Must match pattern \'^[-a-zA-Z0-9_]+\$\'
    patchedOAuthSourceRequestSlug :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | user_matching_mode: How the source determines if an existing user should be authenticated or a new user enrolled.
    patchedOAuthSourceRequestUserMatchingMode :: (GHC.Maybe.Maybe Data.Aeson.Types.Internal.Object),
    -- | user_path_template
    --
    -- Constraints:
    --
    -- * Minimum length of 1
    patchedOAuthSourceRequestUserPathTemplate :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | user_property_mappings
    patchedOAuthSourceRequestUserPropertyMappings :: (GHC.Maybe.Maybe [Data.Text.Internal.Text])
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PatchedOAuthSourceRequest where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("access_token_url" Data.Aeson.Types.ToJSON..=)) (patchedOAuthSourceRequestAccessTokenUrl obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("additional_scopes" Data.Aeson.Types.ToJSON..=)) (patchedOAuthSourceRequestAdditionalScopes obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("authentication_flow" Data.Aeson.Types.ToJSON..=)) (patchedOAuthSourceRequestAuthenticationFlow obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("authorization_code_auth_method" Data.Aeson.Types.ToJSON..=)) (patchedOAuthSourceRequestAuthorizationCodeAuthMethod obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("authorization_url" Data.Aeson.Types.ToJSON..=)) (patchedOAuthSourceRequestAuthorizationUrl obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("consumer_key" Data.Aeson.Types.ToJSON..=)) (patchedOAuthSourceRequestConsumerKey obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("consumer_secret" Data.Aeson.Types.ToJSON..=)) (patchedOAuthSourceRequestConsumerSecret obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("enabled" Data.Aeson.Types.ToJSON..=)) (patchedOAuthSourceRequestEnabled obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("enrollment_flow" Data.Aeson.Types.ToJSON..=)) (patchedOAuthSourceRequestEnrollmentFlow obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("group_matching_mode" Data.Aeson.Types.ToJSON..=)) (patchedOAuthSourceRequestGroupMatchingMode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("group_property_mappings" Data.Aeson.Types.ToJSON..=)) (patchedOAuthSourceRequestGroupPropertyMappings obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("name" Data.Aeson.Types.ToJSON..=)) (patchedOAuthSourceRequestName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("oidc_jwks" Data.Aeson.Types.ToJSON..=)) (patchedOAuthSourceRequestOidcJwks obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("oidc_jwks_url" Data.Aeson.Types.ToJSON..=)) (patchedOAuthSourceRequestOidcJwksUrl obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("oidc_well_known_url" Data.Aeson.Types.ToJSON..=)) (patchedOAuthSourceRequestOidcWellKnownUrl obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("policy_engine_mode" Data.Aeson.Types.ToJSON..=)) (patchedOAuthSourceRequestPolicyEngineMode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("profile_url" Data.Aeson.Types.ToJSON..=)) (patchedOAuthSourceRequestProfileUrl obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("provider_type" Data.Aeson.Types.ToJSON..=)) (patchedOAuthSourceRequestProviderType obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("request_token_url" Data.Aeson.Types.ToJSON..=)) (patchedOAuthSourceRequestRequestTokenUrl obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("slug" Data.Aeson.Types.ToJSON..=)) (patchedOAuthSourceRequestSlug obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("user_matching_mode" Data.Aeson.Types.ToJSON..=)) (patchedOAuthSourceRequestUserMatchingMode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("user_path_template" Data.Aeson.Types.ToJSON..=)) (patchedOAuthSourceRequestUserPathTemplate obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("user_property_mappings" Data.Aeson.Types.ToJSON..=)) (patchedOAuthSourceRequestUserPropertyMappings obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("access_token_url" Data.Aeson.Types.ToJSON..=)) (patchedOAuthSourceRequestAccessTokenUrl obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("additional_scopes" Data.Aeson.Types.ToJSON..=)) (patchedOAuthSourceRequestAdditionalScopes obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("authentication_flow" Data.Aeson.Types.ToJSON..=)) (patchedOAuthSourceRequestAuthenticationFlow obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("authorization_code_auth_method" Data.Aeson.Types.ToJSON..=)) (patchedOAuthSourceRequestAuthorizationCodeAuthMethod obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("authorization_url" Data.Aeson.Types.ToJSON..=)) (patchedOAuthSourceRequestAuthorizationUrl obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("consumer_key" Data.Aeson.Types.ToJSON..=)) (patchedOAuthSourceRequestConsumerKey obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("consumer_secret" Data.Aeson.Types.ToJSON..=)) (patchedOAuthSourceRequestConsumerSecret obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("enabled" Data.Aeson.Types.ToJSON..=)) (patchedOAuthSourceRequestEnabled obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("enrollment_flow" Data.Aeson.Types.ToJSON..=)) (patchedOAuthSourceRequestEnrollmentFlow obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("group_matching_mode" Data.Aeson.Types.ToJSON..=)) (patchedOAuthSourceRequestGroupMatchingMode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("group_property_mappings" Data.Aeson.Types.ToJSON..=)) (patchedOAuthSourceRequestGroupPropertyMappings obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("name" Data.Aeson.Types.ToJSON..=)) (patchedOAuthSourceRequestName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("oidc_jwks" Data.Aeson.Types.ToJSON..=)) (patchedOAuthSourceRequestOidcJwks obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("oidc_jwks_url" Data.Aeson.Types.ToJSON..=)) (patchedOAuthSourceRequestOidcJwksUrl obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("oidc_well_known_url" Data.Aeson.Types.ToJSON..=)) (patchedOAuthSourceRequestOidcWellKnownUrl obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("policy_engine_mode" Data.Aeson.Types.ToJSON..=)) (patchedOAuthSourceRequestPolicyEngineMode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("profile_url" Data.Aeson.Types.ToJSON..=)) (patchedOAuthSourceRequestProfileUrl obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("provider_type" Data.Aeson.Types.ToJSON..=)) (patchedOAuthSourceRequestProviderType obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("request_token_url" Data.Aeson.Types.ToJSON..=)) (patchedOAuthSourceRequestRequestTokenUrl obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("slug" Data.Aeson.Types.ToJSON..=)) (patchedOAuthSourceRequestSlug obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("user_matching_mode" Data.Aeson.Types.ToJSON..=)) (patchedOAuthSourceRequestUserMatchingMode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("user_path_template" Data.Aeson.Types.ToJSON..=)) (patchedOAuthSourceRequestUserPathTemplate obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("user_property_mappings" Data.Aeson.Types.ToJSON..=)) (patchedOAuthSourceRequestUserPropertyMappings obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PatchedOAuthSourceRequest where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PatchedOAuthSourceRequest" (\obj -> ((((((((((((((((((((((GHC.Base.pure PatchedOAuthSourceRequest GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "access_token_url")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "additional_scopes")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "authentication_flow")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "authorization_code_auth_method")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "authorization_url")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "consumer_key")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "consumer_secret")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "enabled")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "enrollment_flow")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "group_matching_mode")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "group_property_mappings")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "oidc_jwks")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "oidc_jwks_url")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "oidc_well_known_url")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "policy_engine_mode")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "profile_url")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "provider_type")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "request_token_url")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "slug")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "user_matching_mode")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "user_path_template")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "user_property_mappings"))

-- | Create a new 'PatchedOAuthSourceRequest' with all required fields.
mkPatchedOAuthSourceRequest :: PatchedOAuthSourceRequest
mkPatchedOAuthSourceRequest =
  PatchedOAuthSourceRequest
    { patchedOAuthSourceRequestAccessTokenUrl = GHC.Maybe.Nothing,
      patchedOAuthSourceRequestAdditionalScopes = GHC.Maybe.Nothing,
      patchedOAuthSourceRequestAuthenticationFlow = GHC.Maybe.Nothing,
      patchedOAuthSourceRequestAuthorizationCodeAuthMethod = GHC.Maybe.Nothing,
      patchedOAuthSourceRequestAuthorizationUrl = GHC.Maybe.Nothing,
      patchedOAuthSourceRequestConsumerKey = GHC.Maybe.Nothing,
      patchedOAuthSourceRequestConsumerSecret = GHC.Maybe.Nothing,
      patchedOAuthSourceRequestEnabled = GHC.Maybe.Nothing,
      patchedOAuthSourceRequestEnrollmentFlow = GHC.Maybe.Nothing,
      patchedOAuthSourceRequestGroupMatchingMode = GHC.Maybe.Nothing,
      patchedOAuthSourceRequestGroupPropertyMappings = GHC.Maybe.Nothing,
      patchedOAuthSourceRequestName = GHC.Maybe.Nothing,
      patchedOAuthSourceRequestOidcJwks = GHC.Maybe.Nothing,
      patchedOAuthSourceRequestOidcJwksUrl = GHC.Maybe.Nothing,
      patchedOAuthSourceRequestOidcWellKnownUrl = GHC.Maybe.Nothing,
      patchedOAuthSourceRequestPolicyEngineMode = GHC.Maybe.Nothing,
      patchedOAuthSourceRequestProfileUrl = GHC.Maybe.Nothing,
      patchedOAuthSourceRequestProviderType = GHC.Maybe.Nothing,
      patchedOAuthSourceRequestRequestTokenUrl = GHC.Maybe.Nothing,
      patchedOAuthSourceRequestSlug = GHC.Maybe.Nothing,
      patchedOAuthSourceRequestUserMatchingMode = GHC.Maybe.Nothing,
      patchedOAuthSourceRequestUserPathTemplate = GHC.Maybe.Nothing,
      patchedOAuthSourceRequestUserPropertyMappings = GHC.Maybe.Nothing
    }
