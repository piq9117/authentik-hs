{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the types generated from the schema PatchedSSFProviderRequest
module AuthentikAPI.Types.PatchedSSFProviderRequest where

import qualified AuthentikAPI.Common
import AuthentikAPI.TypeAlias
import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | Defines the object schema located at @components.schemas.PatchedSSFProviderRequest@ in the specification.
--
-- SSFProvider Serializer
data PatchedSSFProviderRequest = PatchedSSFProviderRequest
  { -- | event_retention
    --
    -- Constraints:
    --
    -- * Minimum length of 1
    patchedSSFProviderRequestEventRetention :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | name
    --
    -- Constraints:
    --
    -- * Minimum length of 1
    patchedSSFProviderRequestName :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | oidc_auth_providers
    patchedSSFProviderRequestOidcAuthProviders :: (GHC.Maybe.Maybe [GHC.Types.Int]),
    -- | signing_key: Key used to sign the SSF Events.
    patchedSSFProviderRequestSigningKey :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PatchedSSFProviderRequest where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("event_retention" Data.Aeson.Types.ToJSON..=)) (patchedSSFProviderRequestEventRetention obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("name" Data.Aeson.Types.ToJSON..=)) (patchedSSFProviderRequestName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("oidc_auth_providers" Data.Aeson.Types.ToJSON..=)) (patchedSSFProviderRequestOidcAuthProviders obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("signing_key" Data.Aeson.Types.ToJSON..=)) (patchedSSFProviderRequestSigningKey obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("event_retention" Data.Aeson.Types.ToJSON..=)) (patchedSSFProviderRequestEventRetention obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("name" Data.Aeson.Types.ToJSON..=)) (patchedSSFProviderRequestName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("oidc_auth_providers" Data.Aeson.Types.ToJSON..=)) (patchedSSFProviderRequestOidcAuthProviders obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("signing_key" Data.Aeson.Types.ToJSON..=)) (patchedSSFProviderRequestSigningKey obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PatchedSSFProviderRequest where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PatchedSSFProviderRequest" (\obj -> (((GHC.Base.pure PatchedSSFProviderRequest GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "event_retention")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "oidc_auth_providers")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "signing_key"))

-- | Create a new 'PatchedSSFProviderRequest' with all required fields.
mkPatchedSSFProviderRequest :: PatchedSSFProviderRequest
mkPatchedSSFProviderRequest =
  PatchedSSFProviderRequest
    { patchedSSFProviderRequestEventRetention = GHC.Maybe.Nothing,
      patchedSSFProviderRequestName = GHC.Maybe.Nothing,
      patchedSSFProviderRequestOidcAuthProviders = GHC.Maybe.Nothing,
      patchedSSFProviderRequestSigningKey = GHC.Maybe.Nothing
    }
