{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the types generated from the schema EmailStageRequest
module AuthentikAPI.Types.EmailStageRequest where

import qualified AuthentikAPI.Common
import AuthentikAPI.TypeAlias
import {-# SOURCE #-} AuthentikAPI.Types.FlowSetRequest
import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | Defines the object schema located at @components.schemas.EmailStageRequest@ in the specification.
--
-- EmailStage Serializer
data EmailStageRequest = EmailStageRequest
  { -- | activate_user_on_success: Activate users upon completion of stage.
    emailStageRequestActivateUserOnSuccess :: (GHC.Maybe.Maybe GHC.Types.Bool),
    -- | flow_set
    emailStageRequestFlowSet :: (GHC.Maybe.Maybe [FlowSetRequest]),
    -- | from_address
    --
    -- Constraints:
    --
    -- * Maximum length of 254
    -- * Minimum length of 1
    emailStageRequestFromAddress :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | host
    --
    -- Constraints:
    --
    -- * Minimum length of 1
    emailStageRequestHost :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | name
    --
    -- Constraints:
    --
    -- * Minimum length of 1
    emailStageRequestName :: Data.Text.Internal.Text,
    -- | password
    emailStageRequestPassword :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | port
    --
    -- Constraints:
    --
    -- * Maxium  of 2.1474836e9
    -- * Minimum  of -2.1474836e9
    emailStageRequestPort :: (GHC.Maybe.Maybe GHC.Types.Int),
    -- | subject
    --
    -- Constraints:
    --
    -- * Minimum length of 1
    emailStageRequestSubject :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | template
    --
    -- Constraints:
    --
    -- * Minimum length of 1
    emailStageRequestTemplate :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | timeout
    --
    -- Constraints:
    --
    -- * Maxium  of 2.1474836e9
    -- * Minimum  of -2.1474836e9
    emailStageRequestTimeout :: (GHC.Maybe.Maybe GHC.Types.Int),
    -- | token_expiry: Time the token sent is valid (Format: hours=3,minutes=17,seconds=300).
    --
    -- Constraints:
    --
    -- * Minimum length of 1
    emailStageRequestTokenExpiry :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | use_global_settings: When enabled, global Email connection settings will be used and connection settings below will be ignored.
    emailStageRequestUseGlobalSettings :: (GHC.Maybe.Maybe GHC.Types.Bool),
    -- | use_ssl
    emailStageRequestUseSsl :: (GHC.Maybe.Maybe GHC.Types.Bool),
    -- | use_tls
    emailStageRequestUseTls :: (GHC.Maybe.Maybe GHC.Types.Bool),
    -- | username
    emailStageRequestUsername :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON EmailStageRequest where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("activate_user_on_success" Data.Aeson.Types.ToJSON..=)) (emailStageRequestActivateUserOnSuccess obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("flow_set" Data.Aeson.Types.ToJSON..=)) (emailStageRequestFlowSet obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("from_address" Data.Aeson.Types.ToJSON..=)) (emailStageRequestFromAddress obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("host" Data.Aeson.Types.ToJSON..=)) (emailStageRequestHost obj) : ["name" Data.Aeson.Types.ToJSON..= emailStageRequestName obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("password" Data.Aeson.Types.ToJSON..=)) (emailStageRequestPassword obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("port" Data.Aeson.Types.ToJSON..=)) (emailStageRequestPort obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("subject" Data.Aeson.Types.ToJSON..=)) (emailStageRequestSubject obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("template" Data.Aeson.Types.ToJSON..=)) (emailStageRequestTemplate obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("timeout" Data.Aeson.Types.ToJSON..=)) (emailStageRequestTimeout obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("token_expiry" Data.Aeson.Types.ToJSON..=)) (emailStageRequestTokenExpiry obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("use_global_settings" Data.Aeson.Types.ToJSON..=)) (emailStageRequestUseGlobalSettings obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("use_ssl" Data.Aeson.Types.ToJSON..=)) (emailStageRequestUseSsl obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("use_tls" Data.Aeson.Types.ToJSON..=)) (emailStageRequestUseTls obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("username" Data.Aeson.Types.ToJSON..=)) (emailStageRequestUsername obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("activate_user_on_success" Data.Aeson.Types.ToJSON..=)) (emailStageRequestActivateUserOnSuccess obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("flow_set" Data.Aeson.Types.ToJSON..=)) (emailStageRequestFlowSet obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("from_address" Data.Aeson.Types.ToJSON..=)) (emailStageRequestFromAddress obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("host" Data.Aeson.Types.ToJSON..=)) (emailStageRequestHost obj) : ["name" Data.Aeson.Types.ToJSON..= emailStageRequestName obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("password" Data.Aeson.Types.ToJSON..=)) (emailStageRequestPassword obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("port" Data.Aeson.Types.ToJSON..=)) (emailStageRequestPort obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("subject" Data.Aeson.Types.ToJSON..=)) (emailStageRequestSubject obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("template" Data.Aeson.Types.ToJSON..=)) (emailStageRequestTemplate obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("timeout" Data.Aeson.Types.ToJSON..=)) (emailStageRequestTimeout obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("token_expiry" Data.Aeson.Types.ToJSON..=)) (emailStageRequestTokenExpiry obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("use_global_settings" Data.Aeson.Types.ToJSON..=)) (emailStageRequestUseGlobalSettings obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("use_ssl" Data.Aeson.Types.ToJSON..=)) (emailStageRequestUseSsl obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("use_tls" Data.Aeson.Types.ToJSON..=)) (emailStageRequestUseTls obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("username" Data.Aeson.Types.ToJSON..=)) (emailStageRequestUsername obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON EmailStageRequest where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "EmailStageRequest" (\obj -> ((((((((((((((GHC.Base.pure EmailStageRequest GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "activate_user_on_success")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "flow_set")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "from_address")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "host")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "password")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "port")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "subject")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "template")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "timeout")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "token_expiry")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "use_global_settings")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "use_ssl")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "use_tls")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "username"))

-- | Create a new 'EmailStageRequest' with all required fields.
mkEmailStageRequest ::
  -- | 'emailStageRequestName'
  Data.Text.Internal.Text ->
  EmailStageRequest
mkEmailStageRequest emailStageRequestName =
  EmailStageRequest
    { emailStageRequestActivateUserOnSuccess = GHC.Maybe.Nothing,
      emailStageRequestFlowSet = GHC.Maybe.Nothing,
      emailStageRequestFromAddress = GHC.Maybe.Nothing,
      emailStageRequestHost = GHC.Maybe.Nothing,
      emailStageRequestName = emailStageRequestName,
      emailStageRequestPassword = GHC.Maybe.Nothing,
      emailStageRequestPort = GHC.Maybe.Nothing,
      emailStageRequestSubject = GHC.Maybe.Nothing,
      emailStageRequestTemplate = GHC.Maybe.Nothing,
      emailStageRequestTimeout = GHC.Maybe.Nothing,
      emailStageRequestTokenExpiry = GHC.Maybe.Nothing,
      emailStageRequestUseGlobalSettings = GHC.Maybe.Nothing,
      emailStageRequestUseSsl = GHC.Maybe.Nothing,
      emailStageRequestUseTls = GHC.Maybe.Nothing,
      emailStageRequestUsername = GHC.Maybe.Nothing
    }
