{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the types generated from the schema UserLoginStageRequest
module AuthentikAPI.Types.UserLoginStageRequest where

import qualified AuthentikAPI.Common
import AuthentikAPI.TypeAlias
import {-# SOURCE #-} AuthentikAPI.Types.FlowSetRequest
import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | Defines the object schema located at @components.schemas.UserLoginStageRequest@ in the specification.
--
-- UserLoginStage Serializer
data UserLoginStageRequest = UserLoginStageRequest
  { -- | flow_set
    userLoginStageRequestFlowSet :: (GHC.Maybe.Maybe [FlowSetRequest]),
    -- | geoip_binding: Bind sessions created by this stage to the configured GeoIP location
    userLoginStageRequestGeoipBinding :: (GHC.Maybe.Maybe Data.Aeson.Types.Internal.Object),
    -- | name
    --
    -- Constraints:
    --
    -- * Minimum length of 1
    userLoginStageRequestName :: Data.Text.Internal.Text,
    -- | network_binding: Bind sessions created by this stage to the configured network
    userLoginStageRequestNetworkBinding :: (GHC.Maybe.Maybe Data.Aeson.Types.Internal.Object),
    -- | remember_me_offset: Offset the session will be extended by when the user picks the remember me option. Default of 0 means that the remember me option will not be shown. (Format: hours=-1;minutes=-2;seconds=-3)
    --
    -- Constraints:
    --
    -- * Minimum length of 1
    userLoginStageRequestRememberMeOffset :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | session_duration: Determines how long a session lasts. Default of 0 means that the sessions lasts until the browser is closed. (Format: hours=-1;minutes=-2;seconds=-3)
    --
    -- Constraints:
    --
    -- * Minimum length of 1
    userLoginStageRequestSessionDuration :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | terminate_other_sessions: Terminate all other sessions of the user logging in.
    userLoginStageRequestTerminateOtherSessions :: (GHC.Maybe.Maybe GHC.Types.Bool)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON UserLoginStageRequest where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("flow_set" Data.Aeson.Types.ToJSON..=)) (userLoginStageRequestFlowSet obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("geoip_binding" Data.Aeson.Types.ToJSON..=)) (userLoginStageRequestGeoipBinding obj) : ["name" Data.Aeson.Types.ToJSON..= userLoginStageRequestName obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("network_binding" Data.Aeson.Types.ToJSON..=)) (userLoginStageRequestNetworkBinding obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("remember_me_offset" Data.Aeson.Types.ToJSON..=)) (userLoginStageRequestRememberMeOffset obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("session_duration" Data.Aeson.Types.ToJSON..=)) (userLoginStageRequestSessionDuration obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("terminate_other_sessions" Data.Aeson.Types.ToJSON..=)) (userLoginStageRequestTerminateOtherSessions obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("flow_set" Data.Aeson.Types.ToJSON..=)) (userLoginStageRequestFlowSet obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("geoip_binding" Data.Aeson.Types.ToJSON..=)) (userLoginStageRequestGeoipBinding obj) : ["name" Data.Aeson.Types.ToJSON..= userLoginStageRequestName obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("network_binding" Data.Aeson.Types.ToJSON..=)) (userLoginStageRequestNetworkBinding obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("remember_me_offset" Data.Aeson.Types.ToJSON..=)) (userLoginStageRequestRememberMeOffset obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("session_duration" Data.Aeson.Types.ToJSON..=)) (userLoginStageRequestSessionDuration obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("terminate_other_sessions" Data.Aeson.Types.ToJSON..=)) (userLoginStageRequestTerminateOtherSessions obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON UserLoginStageRequest where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "UserLoginStageRequest" (\obj -> ((((((GHC.Base.pure UserLoginStageRequest GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "flow_set")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "geoip_binding")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "network_binding")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "remember_me_offset")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "session_duration")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "terminate_other_sessions"))

-- | Create a new 'UserLoginStageRequest' with all required fields.
mkUserLoginStageRequest ::
  -- | 'userLoginStageRequestName'
  Data.Text.Internal.Text ->
  UserLoginStageRequest
mkUserLoginStageRequest userLoginStageRequestName =
  UserLoginStageRequest
    { userLoginStageRequestFlowSet = GHC.Maybe.Nothing,
      userLoginStageRequestGeoipBinding = GHC.Maybe.Nothing,
      userLoginStageRequestName = userLoginStageRequestName,
      userLoginStageRequestNetworkBinding = GHC.Maybe.Nothing,
      userLoginStageRequestRememberMeOffset = GHC.Maybe.Nothing,
      userLoginStageRequestSessionDuration = GHC.Maybe.Nothing,
      userLoginStageRequestTerminateOtherSessions = GHC.Maybe.Nothing
    }
