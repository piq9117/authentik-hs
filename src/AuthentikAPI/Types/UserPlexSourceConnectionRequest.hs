{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the types generated from the schema UserPlexSourceConnectionRequest
module AuthentikAPI.Types.UserPlexSourceConnectionRequest where

import qualified AuthentikAPI.Common
import AuthentikAPI.TypeAlias
import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | Defines the object schema located at @components.schemas.UserPlexSourceConnectionRequest@ in the specification.
--
-- User source connection
data UserPlexSourceConnectionRequest = UserPlexSourceConnectionRequest
  { -- | identifier
    --
    -- Constraints:
    --
    -- * Minimum length of 1
    userPlexSourceConnectionRequestIdentifier :: Data.Text.Internal.Text,
    -- | plex_token
    --
    -- Constraints:
    --
    -- * Minimum length of 1
    userPlexSourceConnectionRequestPlexToken :: Data.Text.Internal.Text,
    -- | source
    userPlexSourceConnectionRequestSource :: Data.Text.Internal.Text,
    -- | user
    userPlexSourceConnectionRequestUser :: GHC.Types.Int
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON UserPlexSourceConnectionRequest where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["identifier" Data.Aeson.Types.ToJSON..= userPlexSourceConnectionRequestIdentifier obj] : ["plex_token" Data.Aeson.Types.ToJSON..= userPlexSourceConnectionRequestPlexToken obj] : ["source" Data.Aeson.Types.ToJSON..= userPlexSourceConnectionRequestSource obj] : ["user" Data.Aeson.Types.ToJSON..= userPlexSourceConnectionRequestUser obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["identifier" Data.Aeson.Types.ToJSON..= userPlexSourceConnectionRequestIdentifier obj] : ["plex_token" Data.Aeson.Types.ToJSON..= userPlexSourceConnectionRequestPlexToken obj] : ["source" Data.Aeson.Types.ToJSON..= userPlexSourceConnectionRequestSource obj] : ["user" Data.Aeson.Types.ToJSON..= userPlexSourceConnectionRequestUser obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON UserPlexSourceConnectionRequest where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "UserPlexSourceConnectionRequest" (\obj -> (((GHC.Base.pure UserPlexSourceConnectionRequest GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "identifier")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "plex_token")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "source")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "user"))

-- | Create a new 'UserPlexSourceConnectionRequest' with all required fields.
mkUserPlexSourceConnectionRequest ::
  -- | 'userPlexSourceConnectionRequestIdentifier'
  Data.Text.Internal.Text ->
  -- | 'userPlexSourceConnectionRequestPlexToken'
  Data.Text.Internal.Text ->
  -- | 'userPlexSourceConnectionRequestSource'
  Data.Text.Internal.Text ->
  -- | 'userPlexSourceConnectionRequestUser'
  GHC.Types.Int ->
  UserPlexSourceConnectionRequest
mkUserPlexSourceConnectionRequest userPlexSourceConnectionRequestIdentifier userPlexSourceConnectionRequestPlexToken userPlexSourceConnectionRequestSource userPlexSourceConnectionRequestUser =
  UserPlexSourceConnectionRequest
    { userPlexSourceConnectionRequestIdentifier = userPlexSourceConnectionRequestIdentifier,
      userPlexSourceConnectionRequestPlexToken = userPlexSourceConnectionRequestPlexToken,
      userPlexSourceConnectionRequestSource = userPlexSourceConnectionRequestSource,
      userPlexSourceConnectionRequestUser = userPlexSourceConnectionRequestUser
    }
