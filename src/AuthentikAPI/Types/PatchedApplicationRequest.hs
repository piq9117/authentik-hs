{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the types generated from the schema PatchedApplicationRequest
module AuthentikAPI.Types.PatchedApplicationRequest where

import qualified AuthentikAPI.Common
import AuthentikAPI.TypeAlias
import {-# SOURCE #-} AuthentikAPI.Types.PolicyEngineMode
import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | Defines the object schema located at @components.schemas.PatchedApplicationRequest@ in the specification.
--
-- Application Serializer
data PatchedApplicationRequest = PatchedApplicationRequest
  { -- | backchannel_providers
    patchedApplicationRequestBackchannelProviders :: (GHC.Maybe.Maybe [GHC.Types.Int]),
    -- | group
    patchedApplicationRequestGroup :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | meta_description
    patchedApplicationRequestMetaDescription :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | meta_launch_url
    patchedApplicationRequestMetaLaunchUrl :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | meta_publisher
    patchedApplicationRequestMetaPublisher :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | name: Application\'s display Name.
    --
    -- Constraints:
    --
    -- * Minimum length of 1
    patchedApplicationRequestName :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | open_in_new_tab: Open launch URL in a new browser tab or window.
    patchedApplicationRequestOpenInNewTab :: (GHC.Maybe.Maybe GHC.Types.Bool),
    -- | policy_engine_mode
    patchedApplicationRequestPolicyEngineMode :: (GHC.Maybe.Maybe PolicyEngineMode),
    -- | provider
    patchedApplicationRequestProvider :: (GHC.Maybe.Maybe (AuthentikAPI.Common.Nullable GHC.Types.Int)),
    -- | slug: Internal application name, used in URLs.
    --
    -- Constraints:
    --
    -- * Maximum length of 50
    -- * Minimum length of 1
    -- * Must match pattern \'^[-a-zA-Z0-9_]+\$\'
    patchedApplicationRequestSlug :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PatchedApplicationRequest where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("backchannel_providers" Data.Aeson.Types.ToJSON..=)) (patchedApplicationRequestBackchannelProviders obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("group" Data.Aeson.Types.ToJSON..=)) (patchedApplicationRequestGroup obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("meta_description" Data.Aeson.Types.ToJSON..=)) (patchedApplicationRequestMetaDescription obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("meta_launch_url" Data.Aeson.Types.ToJSON..=)) (patchedApplicationRequestMetaLaunchUrl obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("meta_publisher" Data.Aeson.Types.ToJSON..=)) (patchedApplicationRequestMetaPublisher obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("name" Data.Aeson.Types.ToJSON..=)) (patchedApplicationRequestName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("open_in_new_tab" Data.Aeson.Types.ToJSON..=)) (patchedApplicationRequestOpenInNewTab obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("policy_engine_mode" Data.Aeson.Types.ToJSON..=)) (patchedApplicationRequestPolicyEngineMode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("provider" Data.Aeson.Types.ToJSON..=)) (patchedApplicationRequestProvider obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("slug" Data.Aeson.Types.ToJSON..=)) (patchedApplicationRequestSlug obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("backchannel_providers" Data.Aeson.Types.ToJSON..=)) (patchedApplicationRequestBackchannelProviders obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("group" Data.Aeson.Types.ToJSON..=)) (patchedApplicationRequestGroup obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("meta_description" Data.Aeson.Types.ToJSON..=)) (patchedApplicationRequestMetaDescription obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("meta_launch_url" Data.Aeson.Types.ToJSON..=)) (patchedApplicationRequestMetaLaunchUrl obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("meta_publisher" Data.Aeson.Types.ToJSON..=)) (patchedApplicationRequestMetaPublisher obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("name" Data.Aeson.Types.ToJSON..=)) (patchedApplicationRequestName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("open_in_new_tab" Data.Aeson.Types.ToJSON..=)) (patchedApplicationRequestOpenInNewTab obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("policy_engine_mode" Data.Aeson.Types.ToJSON..=)) (patchedApplicationRequestPolicyEngineMode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("provider" Data.Aeson.Types.ToJSON..=)) (patchedApplicationRequestProvider obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("slug" Data.Aeson.Types.ToJSON..=)) (patchedApplicationRequestSlug obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PatchedApplicationRequest where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PatchedApplicationRequest" (\obj -> (((((((((GHC.Base.pure PatchedApplicationRequest GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "backchannel_providers")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "group")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "meta_description")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "meta_launch_url")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "meta_publisher")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "open_in_new_tab")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "policy_engine_mode")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "provider")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "slug"))

-- | Create a new 'PatchedApplicationRequest' with all required fields.
mkPatchedApplicationRequest :: PatchedApplicationRequest
mkPatchedApplicationRequest =
  PatchedApplicationRequest
    { patchedApplicationRequestBackchannelProviders = GHC.Maybe.Nothing,
      patchedApplicationRequestGroup = GHC.Maybe.Nothing,
      patchedApplicationRequestMetaDescription = GHC.Maybe.Nothing,
      patchedApplicationRequestMetaLaunchUrl = GHC.Maybe.Nothing,
      patchedApplicationRequestMetaPublisher = GHC.Maybe.Nothing,
      patchedApplicationRequestName = GHC.Maybe.Nothing,
      patchedApplicationRequestOpenInNewTab = GHC.Maybe.Nothing,
      patchedApplicationRequestPolicyEngineMode = GHC.Maybe.Nothing,
      patchedApplicationRequestProvider = GHC.Maybe.Nothing,
      patchedApplicationRequestSlug = GHC.Maybe.Nothing
    }
