{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the types generated from the schema GroupOAuthSourceConnection
module AuthentikAPI.Types.GroupOAuthSourceConnection where

import qualified AuthentikAPI.Common
import AuthentikAPI.TypeAlias
import {-# SOURCE #-} AuthentikAPI.Types.PolicyEngineMode
import {-# SOURCE #-} AuthentikAPI.Types.Source
import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | Defines the object schema located at @components.schemas.GroupOAuthSourceConnection@ in the specification.
--
-- Group Source Connection
data GroupOAuthSourceConnection = GroupOAuthSourceConnection
  { -- | created
    groupOAuthSourceConnectionCreated :: Data.Text.Internal.Text,
    -- | group
    groupOAuthSourceConnectionGroup :: Data.Text.Internal.Text,
    -- | identifier
    groupOAuthSourceConnectionIdentifier :: Data.Text.Internal.Text,
    -- | last_updated
    groupOAuthSourceConnectionLastUpdated :: Data.Text.Internal.Text,
    -- | pk
    groupOAuthSourceConnectionPk :: GHC.Types.Int,
    -- | source
    groupOAuthSourceConnectionSource :: Data.Text.Internal.Text,
    -- | source_obj
    groupOAuthSourceConnectionSourceObj :: GroupOAuthSourceConnectionSourceObj'
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GroupOAuthSourceConnection where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["created" Data.Aeson.Types.ToJSON..= groupOAuthSourceConnectionCreated obj] : ["group" Data.Aeson.Types.ToJSON..= groupOAuthSourceConnectionGroup obj] : ["identifier" Data.Aeson.Types.ToJSON..= groupOAuthSourceConnectionIdentifier obj] : ["last_updated" Data.Aeson.Types.ToJSON..= groupOAuthSourceConnectionLastUpdated obj] : ["pk" Data.Aeson.Types.ToJSON..= groupOAuthSourceConnectionPk obj] : ["source" Data.Aeson.Types.ToJSON..= groupOAuthSourceConnectionSource obj] : ["source_obj" Data.Aeson.Types.ToJSON..= groupOAuthSourceConnectionSourceObj obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["created" Data.Aeson.Types.ToJSON..= groupOAuthSourceConnectionCreated obj] : ["group" Data.Aeson.Types.ToJSON..= groupOAuthSourceConnectionGroup obj] : ["identifier" Data.Aeson.Types.ToJSON..= groupOAuthSourceConnectionIdentifier obj] : ["last_updated" Data.Aeson.Types.ToJSON..= groupOAuthSourceConnectionLastUpdated obj] : ["pk" Data.Aeson.Types.ToJSON..= groupOAuthSourceConnectionPk obj] : ["source" Data.Aeson.Types.ToJSON..= groupOAuthSourceConnectionSource obj] : ["source_obj" Data.Aeson.Types.ToJSON..= groupOAuthSourceConnectionSourceObj obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON GroupOAuthSourceConnection where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GroupOAuthSourceConnection" (\obj -> ((((((GHC.Base.pure GroupOAuthSourceConnection GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "created")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "group")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "identifier")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "last_updated")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "pk")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "source")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "source_obj"))

-- | Create a new 'GroupOAuthSourceConnection' with all required fields.
mkGroupOAuthSourceConnection ::
  -- | 'groupOAuthSourceConnectionCreated'
  Data.Text.Internal.Text ->
  -- | 'groupOAuthSourceConnectionGroup'
  Data.Text.Internal.Text ->
  -- | 'groupOAuthSourceConnectionIdentifier'
  Data.Text.Internal.Text ->
  -- | 'groupOAuthSourceConnectionLastUpdated'
  Data.Text.Internal.Text ->
  -- | 'groupOAuthSourceConnectionPk'
  GHC.Types.Int ->
  -- | 'groupOAuthSourceConnectionSource'
  Data.Text.Internal.Text ->
  -- | 'groupOAuthSourceConnectionSourceObj'
  GroupOAuthSourceConnectionSourceObj' ->
  GroupOAuthSourceConnection
mkGroupOAuthSourceConnection groupOAuthSourceConnectionCreated groupOAuthSourceConnectionGroup groupOAuthSourceConnectionIdentifier groupOAuthSourceConnectionLastUpdated groupOAuthSourceConnectionPk groupOAuthSourceConnectionSource groupOAuthSourceConnectionSourceObj =
  GroupOAuthSourceConnection
    { groupOAuthSourceConnectionCreated = groupOAuthSourceConnectionCreated,
      groupOAuthSourceConnectionGroup = groupOAuthSourceConnectionGroup,
      groupOAuthSourceConnectionIdentifier = groupOAuthSourceConnectionIdentifier,
      groupOAuthSourceConnectionLastUpdated = groupOAuthSourceConnectionLastUpdated,
      groupOAuthSourceConnectionPk = groupOAuthSourceConnectionPk,
      groupOAuthSourceConnectionSource = groupOAuthSourceConnectionSource,
      groupOAuthSourceConnectionSourceObj = groupOAuthSourceConnectionSourceObj
    }

-- | Defines the object schema located at @components.schemas.GroupOAuthSourceConnection.properties.source_obj.allOf@ in the specification.
data GroupOAuthSourceConnectionSourceObj' = GroupOAuthSourceConnectionSourceObj'
  { -- | authentication_flow: Flow to use when authenticating existing users.
    groupOAuthSourceConnectionSourceObj'AuthenticationFlow :: (GHC.Maybe.Maybe (AuthentikAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | component: Get object component so that we know how to edit the object
    groupOAuthSourceConnectionSourceObj'Component :: Data.Text.Internal.Text,
    -- | enabled
    groupOAuthSourceConnectionSourceObj'Enabled :: (GHC.Maybe.Maybe GHC.Types.Bool),
    -- | enrollment_flow: Flow to use when enrolling new users.
    groupOAuthSourceConnectionSourceObj'EnrollmentFlow :: (GHC.Maybe.Maybe (AuthentikAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | group_property_mappings
    groupOAuthSourceConnectionSourceObj'GroupPropertyMappings :: (GHC.Maybe.Maybe [Data.Text.Internal.Text]),
    -- | icon: Get the URL to the Icon. If the name is \/static or
    -- starts with http it is returned as-is
    groupOAuthSourceConnectionSourceObj'Icon :: (AuthentikAPI.Common.Nullable Data.Text.Internal.Text),
    -- | managed: Objects that are managed by authentik. These objects are created and updated automatically. This flag only indicates that an object can be overwritten by migrations. You can still modify the objects via the API, but expect changes to be overwritten in a later update.
    groupOAuthSourceConnectionSourceObj'Managed :: (AuthentikAPI.Common.Nullable Data.Text.Internal.Text),
    -- | meta_model_name: Return internal model name
    groupOAuthSourceConnectionSourceObj'MetaModelName :: Data.Text.Internal.Text,
    -- | name: Source\'s display Name.
    groupOAuthSourceConnectionSourceObj'Name :: Data.Text.Internal.Text,
    -- | pk
    groupOAuthSourceConnectionSourceObj'Pk :: Data.Text.Internal.Text,
    -- | policy_engine_mode
    groupOAuthSourceConnectionSourceObj'PolicyEngineMode :: (GHC.Maybe.Maybe PolicyEngineMode),
    -- | slug: Internal source name, used in URLs.
    --
    -- Constraints:
    --
    -- * Maximum length of 50
    -- * Must match pattern \'^[-a-zA-Z0-9_]+\$\'
    groupOAuthSourceConnectionSourceObj'Slug :: Data.Text.Internal.Text,
    -- | user_matching_mode: How the source determines if an existing user should be authenticated or a new user enrolled.
    groupOAuthSourceConnectionSourceObj'UserMatchingMode :: (GHC.Maybe.Maybe Data.Aeson.Types.Internal.Object),
    -- | user_path_template
    groupOAuthSourceConnectionSourceObj'UserPathTemplate :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | user_property_mappings
    groupOAuthSourceConnectionSourceObj'UserPropertyMappings :: (GHC.Maybe.Maybe [Data.Text.Internal.Text]),
    -- | verbose_name: Return object\'s verbose_name
    groupOAuthSourceConnectionSourceObj'VerboseName :: Data.Text.Internal.Text,
    -- | verbose_name_plural: Return object\'s plural verbose_name
    groupOAuthSourceConnectionSourceObj'VerboseNamePlural :: Data.Text.Internal.Text
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GroupOAuthSourceConnectionSourceObj' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("authentication_flow" Data.Aeson.Types.ToJSON..=)) (groupOAuthSourceConnectionSourceObj'AuthenticationFlow obj) : ["component" Data.Aeson.Types.ToJSON..= groupOAuthSourceConnectionSourceObj'Component obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("enabled" Data.Aeson.Types.ToJSON..=)) (groupOAuthSourceConnectionSourceObj'Enabled obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("enrollment_flow" Data.Aeson.Types.ToJSON..=)) (groupOAuthSourceConnectionSourceObj'EnrollmentFlow obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("group_property_mappings" Data.Aeson.Types.ToJSON..=)) (groupOAuthSourceConnectionSourceObj'GroupPropertyMappings obj) : ["icon" Data.Aeson.Types.ToJSON..= groupOAuthSourceConnectionSourceObj'Icon obj] : ["managed" Data.Aeson.Types.ToJSON..= groupOAuthSourceConnectionSourceObj'Managed obj] : ["meta_model_name" Data.Aeson.Types.ToJSON..= groupOAuthSourceConnectionSourceObj'MetaModelName obj] : ["name" Data.Aeson.Types.ToJSON..= groupOAuthSourceConnectionSourceObj'Name obj] : ["pk" Data.Aeson.Types.ToJSON..= groupOAuthSourceConnectionSourceObj'Pk obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("policy_engine_mode" Data.Aeson.Types.ToJSON..=)) (groupOAuthSourceConnectionSourceObj'PolicyEngineMode obj) : ["slug" Data.Aeson.Types.ToJSON..= groupOAuthSourceConnectionSourceObj'Slug obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("user_matching_mode" Data.Aeson.Types.ToJSON..=)) (groupOAuthSourceConnectionSourceObj'UserMatchingMode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("user_path_template" Data.Aeson.Types.ToJSON..=)) (groupOAuthSourceConnectionSourceObj'UserPathTemplate obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("user_property_mappings" Data.Aeson.Types.ToJSON..=)) (groupOAuthSourceConnectionSourceObj'UserPropertyMappings obj) : ["verbose_name" Data.Aeson.Types.ToJSON..= groupOAuthSourceConnectionSourceObj'VerboseName obj] : ["verbose_name_plural" Data.Aeson.Types.ToJSON..= groupOAuthSourceConnectionSourceObj'VerboseNamePlural obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("authentication_flow" Data.Aeson.Types.ToJSON..=)) (groupOAuthSourceConnectionSourceObj'AuthenticationFlow obj) : ["component" Data.Aeson.Types.ToJSON..= groupOAuthSourceConnectionSourceObj'Component obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("enabled" Data.Aeson.Types.ToJSON..=)) (groupOAuthSourceConnectionSourceObj'Enabled obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("enrollment_flow" Data.Aeson.Types.ToJSON..=)) (groupOAuthSourceConnectionSourceObj'EnrollmentFlow obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("group_property_mappings" Data.Aeson.Types.ToJSON..=)) (groupOAuthSourceConnectionSourceObj'GroupPropertyMappings obj) : ["icon" Data.Aeson.Types.ToJSON..= groupOAuthSourceConnectionSourceObj'Icon obj] : ["managed" Data.Aeson.Types.ToJSON..= groupOAuthSourceConnectionSourceObj'Managed obj] : ["meta_model_name" Data.Aeson.Types.ToJSON..= groupOAuthSourceConnectionSourceObj'MetaModelName obj] : ["name" Data.Aeson.Types.ToJSON..= groupOAuthSourceConnectionSourceObj'Name obj] : ["pk" Data.Aeson.Types.ToJSON..= groupOAuthSourceConnectionSourceObj'Pk obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("policy_engine_mode" Data.Aeson.Types.ToJSON..=)) (groupOAuthSourceConnectionSourceObj'PolicyEngineMode obj) : ["slug" Data.Aeson.Types.ToJSON..= groupOAuthSourceConnectionSourceObj'Slug obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("user_matching_mode" Data.Aeson.Types.ToJSON..=)) (groupOAuthSourceConnectionSourceObj'UserMatchingMode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("user_path_template" Data.Aeson.Types.ToJSON..=)) (groupOAuthSourceConnectionSourceObj'UserPathTemplate obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("user_property_mappings" Data.Aeson.Types.ToJSON..=)) (groupOAuthSourceConnectionSourceObj'UserPropertyMappings obj) : ["verbose_name" Data.Aeson.Types.ToJSON..= groupOAuthSourceConnectionSourceObj'VerboseName obj] : ["verbose_name_plural" Data.Aeson.Types.ToJSON..= groupOAuthSourceConnectionSourceObj'VerboseNamePlural obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON GroupOAuthSourceConnectionSourceObj' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GroupOAuthSourceConnectionSourceObj'" (\obj -> ((((((((((((((((GHC.Base.pure GroupOAuthSourceConnectionSourceObj' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "authentication_flow")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "component")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "enabled")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "enrollment_flow")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "group_property_mappings")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "icon")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "managed")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "meta_model_name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "pk")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "policy_engine_mode")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "slug")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "user_matching_mode")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "user_path_template")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "user_property_mappings")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "verbose_name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "verbose_name_plural"))

-- | Create a new 'GroupOAuthSourceConnectionSourceObj'' with all required fields.
mkGroupOAuthSourceConnectionSourceObj' ::
  -- | 'groupOAuthSourceConnectionSourceObj'Component'
  Data.Text.Internal.Text ->
  -- | 'groupOAuthSourceConnectionSourceObj'Icon'
  AuthentikAPI.Common.Nullable Data.Text.Internal.Text ->
  -- | 'groupOAuthSourceConnectionSourceObj'Managed'
  AuthentikAPI.Common.Nullable Data.Text.Internal.Text ->
  -- | 'groupOAuthSourceConnectionSourceObj'MetaModelName'
  Data.Text.Internal.Text ->
  -- | 'groupOAuthSourceConnectionSourceObj'Name'
  Data.Text.Internal.Text ->
  -- | 'groupOAuthSourceConnectionSourceObj'Pk'
  Data.Text.Internal.Text ->
  -- | 'groupOAuthSourceConnectionSourceObj'Slug'
  Data.Text.Internal.Text ->
  -- | 'groupOAuthSourceConnectionSourceObj'VerboseName'
  Data.Text.Internal.Text ->
  -- | 'groupOAuthSourceConnectionSourceObj'VerboseNamePlural'
  Data.Text.Internal.Text ->
  GroupOAuthSourceConnectionSourceObj'
mkGroupOAuthSourceConnectionSourceObj' groupOAuthSourceConnectionSourceObj'Component groupOAuthSourceConnectionSourceObj'Icon groupOAuthSourceConnectionSourceObj'Managed groupOAuthSourceConnectionSourceObj'MetaModelName groupOAuthSourceConnectionSourceObj'Name groupOAuthSourceConnectionSourceObj'Pk groupOAuthSourceConnectionSourceObj'Slug groupOAuthSourceConnectionSourceObj'VerboseName groupOAuthSourceConnectionSourceObj'VerboseNamePlural =
  GroupOAuthSourceConnectionSourceObj'
    { groupOAuthSourceConnectionSourceObj'AuthenticationFlow = GHC.Maybe.Nothing,
      groupOAuthSourceConnectionSourceObj'Component = groupOAuthSourceConnectionSourceObj'Component,
      groupOAuthSourceConnectionSourceObj'Enabled = GHC.Maybe.Nothing,
      groupOAuthSourceConnectionSourceObj'EnrollmentFlow = GHC.Maybe.Nothing,
      groupOAuthSourceConnectionSourceObj'GroupPropertyMappings = GHC.Maybe.Nothing,
      groupOAuthSourceConnectionSourceObj'Icon = groupOAuthSourceConnectionSourceObj'Icon,
      groupOAuthSourceConnectionSourceObj'Managed = groupOAuthSourceConnectionSourceObj'Managed,
      groupOAuthSourceConnectionSourceObj'MetaModelName = groupOAuthSourceConnectionSourceObj'MetaModelName,
      groupOAuthSourceConnectionSourceObj'Name = groupOAuthSourceConnectionSourceObj'Name,
      groupOAuthSourceConnectionSourceObj'Pk = groupOAuthSourceConnectionSourceObj'Pk,
      groupOAuthSourceConnectionSourceObj'PolicyEngineMode = GHC.Maybe.Nothing,
      groupOAuthSourceConnectionSourceObj'Slug = groupOAuthSourceConnectionSourceObj'Slug,
      groupOAuthSourceConnectionSourceObj'UserMatchingMode = GHC.Maybe.Nothing,
      groupOAuthSourceConnectionSourceObj'UserPathTemplate = GHC.Maybe.Nothing,
      groupOAuthSourceConnectionSourceObj'UserPropertyMappings = GHC.Maybe.Nothing,
      groupOAuthSourceConnectionSourceObj'VerboseName = groupOAuthSourceConnectionSourceObj'VerboseName,
      groupOAuthSourceConnectionSourceObj'VerboseNamePlural = groupOAuthSourceConnectionSourceObj'VerboseNamePlural
    }
