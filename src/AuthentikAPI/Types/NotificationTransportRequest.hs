{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the types generated from the schema NotificationTransportRequest
module AuthentikAPI.Types.NotificationTransportRequest where

import qualified AuthentikAPI.Common
import AuthentikAPI.TypeAlias
import {-# SOURCE #-} AuthentikAPI.Types.NotificationTransportModeEnum
import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | Defines the object schema located at @components.schemas.NotificationTransportRequest@ in the specification.
--
-- NotificationTransport Serializer
data NotificationTransportRequest = NotificationTransportRequest
  { -- | mode
    notificationTransportRequestMode :: (GHC.Maybe.Maybe NotificationTransportModeEnum),
    -- | name
    --
    -- Constraints:
    --
    -- * Minimum length of 1
    notificationTransportRequestName :: Data.Text.Internal.Text,
    -- | send_once: Only send notification once, for example when sending a webhook into a chat channel.
    notificationTransportRequestSendOnce :: (GHC.Maybe.Maybe GHC.Types.Bool),
    -- | webhook_mapping_body: Customize the body of the request. Mapping should return data that is JSON-serializable.
    notificationTransportRequestWebhookMappingBody :: (GHC.Maybe.Maybe (AuthentikAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | webhook_mapping_headers: Configure additional headers to be sent. Mapping should return a dictionary of key-value pairs
    notificationTransportRequestWebhookMappingHeaders :: (GHC.Maybe.Maybe (AuthentikAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | webhook_url
    notificationTransportRequestWebhookUrl :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON NotificationTransportRequest where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("mode" Data.Aeson.Types.ToJSON..=)) (notificationTransportRequestMode obj) : ["name" Data.Aeson.Types.ToJSON..= notificationTransportRequestName obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("send_once" Data.Aeson.Types.ToJSON..=)) (notificationTransportRequestSendOnce obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("webhook_mapping_body" Data.Aeson.Types.ToJSON..=)) (notificationTransportRequestWebhookMappingBody obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("webhook_mapping_headers" Data.Aeson.Types.ToJSON..=)) (notificationTransportRequestWebhookMappingHeaders obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("webhook_url" Data.Aeson.Types.ToJSON..=)) (notificationTransportRequestWebhookUrl obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("mode" Data.Aeson.Types.ToJSON..=)) (notificationTransportRequestMode obj) : ["name" Data.Aeson.Types.ToJSON..= notificationTransportRequestName obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("send_once" Data.Aeson.Types.ToJSON..=)) (notificationTransportRequestSendOnce obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("webhook_mapping_body" Data.Aeson.Types.ToJSON..=)) (notificationTransportRequestWebhookMappingBody obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("webhook_mapping_headers" Data.Aeson.Types.ToJSON..=)) (notificationTransportRequestWebhookMappingHeaders obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("webhook_url" Data.Aeson.Types.ToJSON..=)) (notificationTransportRequestWebhookUrl obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON NotificationTransportRequest where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "NotificationTransportRequest" (\obj -> (((((GHC.Base.pure NotificationTransportRequest GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "mode")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "send_once")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "webhook_mapping_body")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "webhook_mapping_headers")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "webhook_url"))

-- | Create a new 'NotificationTransportRequest' with all required fields.
mkNotificationTransportRequest ::
  -- | 'notificationTransportRequestName'
  Data.Text.Internal.Text ->
  NotificationTransportRequest
mkNotificationTransportRequest notificationTransportRequestName =
  NotificationTransportRequest
    { notificationTransportRequestMode = GHC.Maybe.Nothing,
      notificationTransportRequestName = notificationTransportRequestName,
      notificationTransportRequestSendOnce = GHC.Maybe.Nothing,
      notificationTransportRequestWebhookMappingBody = GHC.Maybe.Nothing,
      notificationTransportRequestWebhookMappingHeaders = GHC.Maybe.Nothing,
      notificationTransportRequestWebhookUrl = GHC.Maybe.Nothing
    }
