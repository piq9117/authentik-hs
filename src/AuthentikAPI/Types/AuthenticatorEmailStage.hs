{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the types generated from the schema AuthenticatorEmailStage
module AuthentikAPI.Types.AuthenticatorEmailStage where

import qualified AuthentikAPI.Common
import AuthentikAPI.TypeAlias
import {-# SOURCE #-} AuthentikAPI.Types.FlowSet
import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | Defines the object schema located at @components.schemas.AuthenticatorEmailStage@ in the specification.
--
-- AuthenticatorEmailStage Serializer
data AuthenticatorEmailStage = AuthenticatorEmailStage
  { -- | component: Get object type so that we know how to edit the object
    authenticatorEmailStageComponent :: Data.Text.Internal.Text,
    -- | configure_flow: Flow used by an authenticated user to configure this Stage. If empty, user will not be able to configure this stage.
    authenticatorEmailStageConfigureFlow :: (GHC.Maybe.Maybe (AuthentikAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | flow_set
    authenticatorEmailStageFlowSet :: (GHC.Maybe.Maybe [FlowSet]),
    -- | friendly_name
    authenticatorEmailStageFriendlyName :: (GHC.Maybe.Maybe (AuthentikAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | from_address
    --
    -- Constraints:
    --
    -- * Maximum length of 254
    authenticatorEmailStageFromAddress :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | host
    authenticatorEmailStageHost :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | meta_model_name: Return internal model name
    authenticatorEmailStageMetaModelName :: Data.Text.Internal.Text,
    -- | name
    authenticatorEmailStageName :: Data.Text.Internal.Text,
    -- | password
    authenticatorEmailStagePassword :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | pk
    authenticatorEmailStagePk :: Data.Text.Internal.Text,
    -- | port
    --
    -- Constraints:
    --
    -- * Maxium  of 2.1474836e9
    -- * Minimum  of -2.1474836e9
    authenticatorEmailStagePort :: (GHC.Maybe.Maybe GHC.Types.Int),
    -- | subject
    authenticatorEmailStageSubject :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | template
    authenticatorEmailStageTemplate :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | timeout
    --
    -- Constraints:
    --
    -- * Maxium  of 2.1474836e9
    -- * Minimum  of -2.1474836e9
    authenticatorEmailStageTimeout :: (GHC.Maybe.Maybe GHC.Types.Int),
    -- | token_expiry: Time the token sent is valid (Format: hours=3,minutes=17,seconds=300).
    authenticatorEmailStageTokenExpiry :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | use_global_settings: When enabled, global Email connection settings will be used and connection settings below will be ignored.
    authenticatorEmailStageUseGlobalSettings :: (GHC.Maybe.Maybe GHC.Types.Bool),
    -- | use_ssl
    authenticatorEmailStageUseSsl :: (GHC.Maybe.Maybe GHC.Types.Bool),
    -- | use_tls
    authenticatorEmailStageUseTls :: (GHC.Maybe.Maybe GHC.Types.Bool),
    -- | username
    authenticatorEmailStageUsername :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | verbose_name: Return object\'s verbose_name
    authenticatorEmailStageVerboseName :: Data.Text.Internal.Text,
    -- | verbose_name_plural: Return object\'s plural verbose_name
    authenticatorEmailStageVerboseNamePlural :: Data.Text.Internal.Text
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON AuthenticatorEmailStage where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["component" Data.Aeson.Types.ToJSON..= authenticatorEmailStageComponent obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("configure_flow" Data.Aeson.Types.ToJSON..=)) (authenticatorEmailStageConfigureFlow obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("flow_set" Data.Aeson.Types.ToJSON..=)) (authenticatorEmailStageFlowSet obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("friendly_name" Data.Aeson.Types.ToJSON..=)) (authenticatorEmailStageFriendlyName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("from_address" Data.Aeson.Types.ToJSON..=)) (authenticatorEmailStageFromAddress obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("host" Data.Aeson.Types.ToJSON..=)) (authenticatorEmailStageHost obj) : ["meta_model_name" Data.Aeson.Types.ToJSON..= authenticatorEmailStageMetaModelName obj] : ["name" Data.Aeson.Types.ToJSON..= authenticatorEmailStageName obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("password" Data.Aeson.Types.ToJSON..=)) (authenticatorEmailStagePassword obj) : ["pk" Data.Aeson.Types.ToJSON..= authenticatorEmailStagePk obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("port" Data.Aeson.Types.ToJSON..=)) (authenticatorEmailStagePort obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("subject" Data.Aeson.Types.ToJSON..=)) (authenticatorEmailStageSubject obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("template" Data.Aeson.Types.ToJSON..=)) (authenticatorEmailStageTemplate obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("timeout" Data.Aeson.Types.ToJSON..=)) (authenticatorEmailStageTimeout obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("token_expiry" Data.Aeson.Types.ToJSON..=)) (authenticatorEmailStageTokenExpiry obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("use_global_settings" Data.Aeson.Types.ToJSON..=)) (authenticatorEmailStageUseGlobalSettings obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("use_ssl" Data.Aeson.Types.ToJSON..=)) (authenticatorEmailStageUseSsl obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("use_tls" Data.Aeson.Types.ToJSON..=)) (authenticatorEmailStageUseTls obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("username" Data.Aeson.Types.ToJSON..=)) (authenticatorEmailStageUsername obj) : ["verbose_name" Data.Aeson.Types.ToJSON..= authenticatorEmailStageVerboseName obj] : ["verbose_name_plural" Data.Aeson.Types.ToJSON..= authenticatorEmailStageVerboseNamePlural obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["component" Data.Aeson.Types.ToJSON..= authenticatorEmailStageComponent obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("configure_flow" Data.Aeson.Types.ToJSON..=)) (authenticatorEmailStageConfigureFlow obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("flow_set" Data.Aeson.Types.ToJSON..=)) (authenticatorEmailStageFlowSet obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("friendly_name" Data.Aeson.Types.ToJSON..=)) (authenticatorEmailStageFriendlyName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("from_address" Data.Aeson.Types.ToJSON..=)) (authenticatorEmailStageFromAddress obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("host" Data.Aeson.Types.ToJSON..=)) (authenticatorEmailStageHost obj) : ["meta_model_name" Data.Aeson.Types.ToJSON..= authenticatorEmailStageMetaModelName obj] : ["name" Data.Aeson.Types.ToJSON..= authenticatorEmailStageName obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("password" Data.Aeson.Types.ToJSON..=)) (authenticatorEmailStagePassword obj) : ["pk" Data.Aeson.Types.ToJSON..= authenticatorEmailStagePk obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("port" Data.Aeson.Types.ToJSON..=)) (authenticatorEmailStagePort obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("subject" Data.Aeson.Types.ToJSON..=)) (authenticatorEmailStageSubject obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("template" Data.Aeson.Types.ToJSON..=)) (authenticatorEmailStageTemplate obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("timeout" Data.Aeson.Types.ToJSON..=)) (authenticatorEmailStageTimeout obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("token_expiry" Data.Aeson.Types.ToJSON..=)) (authenticatorEmailStageTokenExpiry obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("use_global_settings" Data.Aeson.Types.ToJSON..=)) (authenticatorEmailStageUseGlobalSettings obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("use_ssl" Data.Aeson.Types.ToJSON..=)) (authenticatorEmailStageUseSsl obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("use_tls" Data.Aeson.Types.ToJSON..=)) (authenticatorEmailStageUseTls obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("username" Data.Aeson.Types.ToJSON..=)) (authenticatorEmailStageUsername obj) : ["verbose_name" Data.Aeson.Types.ToJSON..= authenticatorEmailStageVerboseName obj] : ["verbose_name_plural" Data.Aeson.Types.ToJSON..= authenticatorEmailStageVerboseNamePlural obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON AuthenticatorEmailStage where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "AuthenticatorEmailStage" (\obj -> ((((((((((((((((((((GHC.Base.pure AuthenticatorEmailStage GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "component")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "configure_flow")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "flow_set")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "friendly_name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "from_address")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "host")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "meta_model_name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "password")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "pk")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "port")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "subject")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "template")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "timeout")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "token_expiry")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "use_global_settings")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "use_ssl")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "use_tls")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "username")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "verbose_name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "verbose_name_plural"))

-- | Create a new 'AuthenticatorEmailStage' with all required fields.
mkAuthenticatorEmailStage ::
  -- | 'authenticatorEmailStageComponent'
  Data.Text.Internal.Text ->
  -- | 'authenticatorEmailStageMetaModelName'
  Data.Text.Internal.Text ->
  -- | 'authenticatorEmailStageName'
  Data.Text.Internal.Text ->
  -- | 'authenticatorEmailStagePk'
  Data.Text.Internal.Text ->
  -- | 'authenticatorEmailStageVerboseName'
  Data.Text.Internal.Text ->
  -- | 'authenticatorEmailStageVerboseNamePlural'
  Data.Text.Internal.Text ->
  AuthenticatorEmailStage
mkAuthenticatorEmailStage authenticatorEmailStageComponent authenticatorEmailStageMetaModelName authenticatorEmailStageName authenticatorEmailStagePk authenticatorEmailStageVerboseName authenticatorEmailStageVerboseNamePlural =
  AuthenticatorEmailStage
    { authenticatorEmailStageComponent = authenticatorEmailStageComponent,
      authenticatorEmailStageConfigureFlow = GHC.Maybe.Nothing,
      authenticatorEmailStageFlowSet = GHC.Maybe.Nothing,
      authenticatorEmailStageFriendlyName = GHC.Maybe.Nothing,
      authenticatorEmailStageFromAddress = GHC.Maybe.Nothing,
      authenticatorEmailStageHost = GHC.Maybe.Nothing,
      authenticatorEmailStageMetaModelName = authenticatorEmailStageMetaModelName,
      authenticatorEmailStageName = authenticatorEmailStageName,
      authenticatorEmailStagePassword = GHC.Maybe.Nothing,
      authenticatorEmailStagePk = authenticatorEmailStagePk,
      authenticatorEmailStagePort = GHC.Maybe.Nothing,
      authenticatorEmailStageSubject = GHC.Maybe.Nothing,
      authenticatorEmailStageTemplate = GHC.Maybe.Nothing,
      authenticatorEmailStageTimeout = GHC.Maybe.Nothing,
      authenticatorEmailStageTokenExpiry = GHC.Maybe.Nothing,
      authenticatorEmailStageUseGlobalSettings = GHC.Maybe.Nothing,
      authenticatorEmailStageUseSsl = GHC.Maybe.Nothing,
      authenticatorEmailStageUseTls = GHC.Maybe.Nothing,
      authenticatorEmailStageUsername = GHC.Maybe.Nothing,
      authenticatorEmailStageVerboseName = authenticatorEmailStageVerboseName,
      authenticatorEmailStageVerboseNamePlural = authenticatorEmailStageVerboseNamePlural
    }
