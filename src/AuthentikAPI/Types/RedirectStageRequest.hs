{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the types generated from the schema RedirectStageRequest
module AuthentikAPI.Types.RedirectStageRequest where

import qualified AuthentikAPI.Common
import AuthentikAPI.TypeAlias
import {-# SOURCE #-} AuthentikAPI.Types.FlowSetRequest
import {-# SOURCE #-} AuthentikAPI.Types.RedirectStageModeEnum
import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | Defines the object schema located at @components.schemas.RedirectStageRequest@ in the specification.
--
-- RedirectStage Serializer
data RedirectStageRequest = RedirectStageRequest
  { -- | flow_set
    redirectStageRequestFlowSet :: (GHC.Maybe.Maybe [FlowSetRequest]),
    -- | keep_context
    redirectStageRequestKeepContext :: (GHC.Maybe.Maybe GHC.Types.Bool),
    -- | mode
    redirectStageRequestMode :: RedirectStageModeEnum,
    -- | name
    --
    -- Constraints:
    --
    -- * Minimum length of 1
    redirectStageRequestName :: Data.Text.Internal.Text,
    -- | target_flow
    redirectStageRequestTargetFlow :: (GHC.Maybe.Maybe (AuthentikAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | target_static
    redirectStageRequestTargetStatic :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON RedirectStageRequest where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("flow_set" Data.Aeson.Types.ToJSON..=)) (redirectStageRequestFlowSet obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("keep_context" Data.Aeson.Types.ToJSON..=)) (redirectStageRequestKeepContext obj) : ["mode" Data.Aeson.Types.ToJSON..= redirectStageRequestMode obj] : ["name" Data.Aeson.Types.ToJSON..= redirectStageRequestName obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("target_flow" Data.Aeson.Types.ToJSON..=)) (redirectStageRequestTargetFlow obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("target_static" Data.Aeson.Types.ToJSON..=)) (redirectStageRequestTargetStatic obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("flow_set" Data.Aeson.Types.ToJSON..=)) (redirectStageRequestFlowSet obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("keep_context" Data.Aeson.Types.ToJSON..=)) (redirectStageRequestKeepContext obj) : ["mode" Data.Aeson.Types.ToJSON..= redirectStageRequestMode obj] : ["name" Data.Aeson.Types.ToJSON..= redirectStageRequestName obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("target_flow" Data.Aeson.Types.ToJSON..=)) (redirectStageRequestTargetFlow obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("target_static" Data.Aeson.Types.ToJSON..=)) (redirectStageRequestTargetStatic obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON RedirectStageRequest where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "RedirectStageRequest" (\obj -> (((((GHC.Base.pure RedirectStageRequest GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "flow_set")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "keep_context")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "mode")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "target_flow")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "target_static"))

-- | Create a new 'RedirectStageRequest' with all required fields.
mkRedirectStageRequest ::
  -- | 'redirectStageRequestMode'
  RedirectStageModeEnum ->
  -- | 'redirectStageRequestName'
  Data.Text.Internal.Text ->
  RedirectStageRequest
mkRedirectStageRequest redirectStageRequestMode redirectStageRequestName =
  RedirectStageRequest
    { redirectStageRequestFlowSet = GHC.Maybe.Nothing,
      redirectStageRequestKeepContext = GHC.Maybe.Nothing,
      redirectStageRequestMode = redirectStageRequestMode,
      redirectStageRequestName = redirectStageRequestName,
      redirectStageRequestTargetFlow = GHC.Maybe.Nothing,
      redirectStageRequestTargetStatic = GHC.Maybe.Nothing
    }
