{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the types generated from the schema SAMLSourceRequest
module AuthentikAPI.Types.SAMLSourceRequest where

import qualified AuthentikAPI.Common
import AuthentikAPI.TypeAlias
import {-# SOURCE #-} AuthentikAPI.Types.BindingTypeEnum
import {-# SOURCE #-} AuthentikAPI.Types.DigestAlgorithmEnum
import {-# SOURCE #-} AuthentikAPI.Types.PolicyEngineMode
import {-# SOURCE #-} AuthentikAPI.Types.SignatureAlgorithmEnum
import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | Defines the object schema located at @components.schemas.SAMLSourceRequest@ in the specification.
--
-- SAMLSource Serializer
data SAMLSourceRequest = SAMLSourceRequest
  { -- | allow_idp_initiated: Allows authentication flows initiated by the IdP. This can be a security risk, as no validation of the request ID is done.
    sAMLSourceRequestAllowIdpInitiated :: (GHC.Maybe.Maybe GHC.Types.Bool),
    -- | authentication_flow: Flow to use when authenticating existing users.
    sAMLSourceRequestAuthenticationFlow :: (GHC.Maybe.Maybe (AuthentikAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | binding_type
    sAMLSourceRequestBindingType :: (GHC.Maybe.Maybe BindingTypeEnum),
    -- | digest_algorithm
    sAMLSourceRequestDigestAlgorithm :: (GHC.Maybe.Maybe DigestAlgorithmEnum),
    -- | enabled
    sAMLSourceRequestEnabled :: (GHC.Maybe.Maybe GHC.Types.Bool),
    -- | encryption_kp: When selected, incoming assertions are encrypted by the IdP using the public key of the encryption keypair. The assertion is decrypted by the SP using the the private key.
    sAMLSourceRequestEncryptionKp :: (GHC.Maybe.Maybe (AuthentikAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | enrollment_flow: Flow to use when enrolling new users.
    sAMLSourceRequestEnrollmentFlow :: (GHC.Maybe.Maybe (AuthentikAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | group_matching_mode: How the source determines if an existing group should be used or a new group created.
    sAMLSourceRequestGroupMatchingMode :: (GHC.Maybe.Maybe Data.Aeson.Types.Internal.Object),
    -- | group_property_mappings
    sAMLSourceRequestGroupPropertyMappings :: (GHC.Maybe.Maybe [Data.Text.Internal.Text]),
    -- | issuer: Also known as Entity ID. Defaults the Metadata URL.
    sAMLSourceRequestIssuer :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | name: Source\'s display Name.
    --
    -- Constraints:
    --
    -- * Minimum length of 1
    sAMLSourceRequestName :: Data.Text.Internal.Text,
    -- | name_id_policy: NameID Policy sent to the IdP. Can be unset, in which case no Policy is sent.
    sAMLSourceRequestNameIdPolicy :: (GHC.Maybe.Maybe Data.Aeson.Types.Internal.Object),
    -- | policy_engine_mode
    sAMLSourceRequestPolicyEngineMode :: (GHC.Maybe.Maybe PolicyEngineMode),
    -- | pre_authentication_flow: Flow used before authentication.
    sAMLSourceRequestPreAuthenticationFlow :: Data.Text.Internal.Text,
    -- | signature_algorithm
    sAMLSourceRequestSignatureAlgorithm :: (GHC.Maybe.Maybe SignatureAlgorithmEnum),
    -- | signing_kp: Keypair used to sign outgoing Responses going to the Identity Provider.
    sAMLSourceRequestSigningKp :: (GHC.Maybe.Maybe (AuthentikAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | slo_url: Optional URL if your IDP supports Single-Logout.
    sAMLSourceRequestSloUrl :: (GHC.Maybe.Maybe (AuthentikAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | slug: Internal source name, used in URLs.
    --
    -- Constraints:
    --
    -- * Maximum length of 50
    -- * Minimum length of 1
    -- * Must match pattern \'^[-a-zA-Z0-9_]+\$\'
    sAMLSourceRequestSlug :: Data.Text.Internal.Text,
    -- | sso_url: URL that the initial Login request is sent to.
    --
    -- Constraints:
    --
    -- * Minimum length of 1
    sAMLSourceRequestSsoUrl :: Data.Text.Internal.Text,
    -- | temporary_user_delete_after: Time offset when temporary users should be deleted. This only applies if your IDP uses the NameID Format \'transient\', and the user doesn\'t log out manually. (Format: hours=1;minutes=2;seconds=3).
    --
    -- Constraints:
    --
    -- * Minimum length of 1
    sAMLSourceRequestTemporaryUserDeleteAfter :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | user_matching_mode: How the source determines if an existing user should be authenticated or a new user enrolled.
    sAMLSourceRequestUserMatchingMode :: (GHC.Maybe.Maybe Data.Aeson.Types.Internal.Object),
    -- | user_path_template
    --
    -- Constraints:
    --
    -- * Minimum length of 1
    sAMLSourceRequestUserPathTemplate :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | user_property_mappings
    sAMLSourceRequestUserPropertyMappings :: (GHC.Maybe.Maybe [Data.Text.Internal.Text]),
    -- | verification_kp: When selected, incoming assertion\'s Signatures will be validated against this certificate. To allow unsigned Requests, leave on default.
    sAMLSourceRequestVerificationKp :: (GHC.Maybe.Maybe (AuthentikAPI.Common.Nullable Data.Text.Internal.Text))
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON SAMLSourceRequest where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("allow_idp_initiated" Data.Aeson.Types.ToJSON..=)) (sAMLSourceRequestAllowIdpInitiated obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("authentication_flow" Data.Aeson.Types.ToJSON..=)) (sAMLSourceRequestAuthenticationFlow obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("binding_type" Data.Aeson.Types.ToJSON..=)) (sAMLSourceRequestBindingType obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("digest_algorithm" Data.Aeson.Types.ToJSON..=)) (sAMLSourceRequestDigestAlgorithm obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("enabled" Data.Aeson.Types.ToJSON..=)) (sAMLSourceRequestEnabled obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("encryption_kp" Data.Aeson.Types.ToJSON..=)) (sAMLSourceRequestEncryptionKp obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("enrollment_flow" Data.Aeson.Types.ToJSON..=)) (sAMLSourceRequestEnrollmentFlow obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("group_matching_mode" Data.Aeson.Types.ToJSON..=)) (sAMLSourceRequestGroupMatchingMode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("group_property_mappings" Data.Aeson.Types.ToJSON..=)) (sAMLSourceRequestGroupPropertyMappings obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("issuer" Data.Aeson.Types.ToJSON..=)) (sAMLSourceRequestIssuer obj) : ["name" Data.Aeson.Types.ToJSON..= sAMLSourceRequestName obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("name_id_policy" Data.Aeson.Types.ToJSON..=)) (sAMLSourceRequestNameIdPolicy obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("policy_engine_mode" Data.Aeson.Types.ToJSON..=)) (sAMLSourceRequestPolicyEngineMode obj) : ["pre_authentication_flow" Data.Aeson.Types.ToJSON..= sAMLSourceRequestPreAuthenticationFlow obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("signature_algorithm" Data.Aeson.Types.ToJSON..=)) (sAMLSourceRequestSignatureAlgorithm obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("signing_kp" Data.Aeson.Types.ToJSON..=)) (sAMLSourceRequestSigningKp obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("slo_url" Data.Aeson.Types.ToJSON..=)) (sAMLSourceRequestSloUrl obj) : ["slug" Data.Aeson.Types.ToJSON..= sAMLSourceRequestSlug obj] : ["sso_url" Data.Aeson.Types.ToJSON..= sAMLSourceRequestSsoUrl obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("temporary_user_delete_after" Data.Aeson.Types.ToJSON..=)) (sAMLSourceRequestTemporaryUserDeleteAfter obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("user_matching_mode" Data.Aeson.Types.ToJSON..=)) (sAMLSourceRequestUserMatchingMode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("user_path_template" Data.Aeson.Types.ToJSON..=)) (sAMLSourceRequestUserPathTemplate obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("user_property_mappings" Data.Aeson.Types.ToJSON..=)) (sAMLSourceRequestUserPropertyMappings obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("verification_kp" Data.Aeson.Types.ToJSON..=)) (sAMLSourceRequestVerificationKp obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("allow_idp_initiated" Data.Aeson.Types.ToJSON..=)) (sAMLSourceRequestAllowIdpInitiated obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("authentication_flow" Data.Aeson.Types.ToJSON..=)) (sAMLSourceRequestAuthenticationFlow obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("binding_type" Data.Aeson.Types.ToJSON..=)) (sAMLSourceRequestBindingType obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("digest_algorithm" Data.Aeson.Types.ToJSON..=)) (sAMLSourceRequestDigestAlgorithm obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("enabled" Data.Aeson.Types.ToJSON..=)) (sAMLSourceRequestEnabled obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("encryption_kp" Data.Aeson.Types.ToJSON..=)) (sAMLSourceRequestEncryptionKp obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("enrollment_flow" Data.Aeson.Types.ToJSON..=)) (sAMLSourceRequestEnrollmentFlow obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("group_matching_mode" Data.Aeson.Types.ToJSON..=)) (sAMLSourceRequestGroupMatchingMode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("group_property_mappings" Data.Aeson.Types.ToJSON..=)) (sAMLSourceRequestGroupPropertyMappings obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("issuer" Data.Aeson.Types.ToJSON..=)) (sAMLSourceRequestIssuer obj) : ["name" Data.Aeson.Types.ToJSON..= sAMLSourceRequestName obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("name_id_policy" Data.Aeson.Types.ToJSON..=)) (sAMLSourceRequestNameIdPolicy obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("policy_engine_mode" Data.Aeson.Types.ToJSON..=)) (sAMLSourceRequestPolicyEngineMode obj) : ["pre_authentication_flow" Data.Aeson.Types.ToJSON..= sAMLSourceRequestPreAuthenticationFlow obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("signature_algorithm" Data.Aeson.Types.ToJSON..=)) (sAMLSourceRequestSignatureAlgorithm obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("signing_kp" Data.Aeson.Types.ToJSON..=)) (sAMLSourceRequestSigningKp obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("slo_url" Data.Aeson.Types.ToJSON..=)) (sAMLSourceRequestSloUrl obj) : ["slug" Data.Aeson.Types.ToJSON..= sAMLSourceRequestSlug obj] : ["sso_url" Data.Aeson.Types.ToJSON..= sAMLSourceRequestSsoUrl obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("temporary_user_delete_after" Data.Aeson.Types.ToJSON..=)) (sAMLSourceRequestTemporaryUserDeleteAfter obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("user_matching_mode" Data.Aeson.Types.ToJSON..=)) (sAMLSourceRequestUserMatchingMode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("user_path_template" Data.Aeson.Types.ToJSON..=)) (sAMLSourceRequestUserPathTemplate obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("user_property_mappings" Data.Aeson.Types.ToJSON..=)) (sAMLSourceRequestUserPropertyMappings obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("verification_kp" Data.Aeson.Types.ToJSON..=)) (sAMLSourceRequestVerificationKp obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON SAMLSourceRequest where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "SAMLSourceRequest" (\obj -> (((((((((((((((((((((((GHC.Base.pure SAMLSourceRequest GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "allow_idp_initiated")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "authentication_flow")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "binding_type")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "digest_algorithm")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "enabled")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "encryption_kp")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "enrollment_flow")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "group_matching_mode")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "group_property_mappings")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "issuer")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "name_id_policy")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "policy_engine_mode")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "pre_authentication_flow")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "signature_algorithm")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "signing_kp")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "slo_url")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "slug")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "sso_url")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "temporary_user_delete_after")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "user_matching_mode")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "user_path_template")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "user_property_mappings")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "verification_kp"))

-- | Create a new 'SAMLSourceRequest' with all required fields.
mkSAMLSourceRequest ::
  -- | 'sAMLSourceRequestName'
  Data.Text.Internal.Text ->
  -- | 'sAMLSourceRequestPreAuthenticationFlow'
  Data.Text.Internal.Text ->
  -- | 'sAMLSourceRequestSlug'
  Data.Text.Internal.Text ->
  -- | 'sAMLSourceRequestSsoUrl'
  Data.Text.Internal.Text ->
  SAMLSourceRequest
mkSAMLSourceRequest sAMLSourceRequestName sAMLSourceRequestPreAuthenticationFlow sAMLSourceRequestSlug sAMLSourceRequestSsoUrl =
  SAMLSourceRequest
    { sAMLSourceRequestAllowIdpInitiated = GHC.Maybe.Nothing,
      sAMLSourceRequestAuthenticationFlow = GHC.Maybe.Nothing,
      sAMLSourceRequestBindingType = GHC.Maybe.Nothing,
      sAMLSourceRequestDigestAlgorithm = GHC.Maybe.Nothing,
      sAMLSourceRequestEnabled = GHC.Maybe.Nothing,
      sAMLSourceRequestEncryptionKp = GHC.Maybe.Nothing,
      sAMLSourceRequestEnrollmentFlow = GHC.Maybe.Nothing,
      sAMLSourceRequestGroupMatchingMode = GHC.Maybe.Nothing,
      sAMLSourceRequestGroupPropertyMappings = GHC.Maybe.Nothing,
      sAMLSourceRequestIssuer = GHC.Maybe.Nothing,
      sAMLSourceRequestName = sAMLSourceRequestName,
      sAMLSourceRequestNameIdPolicy = GHC.Maybe.Nothing,
      sAMLSourceRequestPolicyEngineMode = GHC.Maybe.Nothing,
      sAMLSourceRequestPreAuthenticationFlow = sAMLSourceRequestPreAuthenticationFlow,
      sAMLSourceRequestSignatureAlgorithm = GHC.Maybe.Nothing,
      sAMLSourceRequestSigningKp = GHC.Maybe.Nothing,
      sAMLSourceRequestSloUrl = GHC.Maybe.Nothing,
      sAMLSourceRequestSlug = sAMLSourceRequestSlug,
      sAMLSourceRequestSsoUrl = sAMLSourceRequestSsoUrl,
      sAMLSourceRequestTemporaryUserDeleteAfter = GHC.Maybe.Nothing,
      sAMLSourceRequestUserMatchingMode = GHC.Maybe.Nothing,
      sAMLSourceRequestUserPathTemplate = GHC.Maybe.Nothing,
      sAMLSourceRequestUserPropertyMappings = GHC.Maybe.Nothing,
      sAMLSourceRequestVerificationKp = GHC.Maybe.Nothing
    }
