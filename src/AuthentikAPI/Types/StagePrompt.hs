{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the types generated from the schema StagePrompt
module AuthentikAPI.Types.StagePrompt where

import qualified AuthentikAPI.Common
import AuthentikAPI.TypeAlias
import {-# SOURCE #-} AuthentikAPI.Types.PromptTypeEnum
import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | Defines the object schema located at @components.schemas.StagePrompt@ in the specification.
--
-- Serializer for a single Prompt field
data StagePrompt = StagePrompt
  { -- | choices
    stagePromptChoices :: (AuthentikAPI.Common.Nullable [Data.Text.Internal.Text]),
    -- | field_key
    stagePromptFieldKey :: Data.Text.Internal.Text,
    -- | initial_value
    stagePromptInitialValue :: Data.Text.Internal.Text,
    -- | label
    stagePromptLabel :: Data.Text.Internal.Text,
    -- | order
    stagePromptOrder :: GHC.Types.Int,
    -- | placeholder
    stagePromptPlaceholder :: Data.Text.Internal.Text,
    -- | required
    stagePromptRequired :: GHC.Types.Bool,
    -- | sub_text
    stagePromptSubText :: Data.Text.Internal.Text,
    -- | type
    stagePromptType :: PromptTypeEnum
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON StagePrompt where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["choices" Data.Aeson.Types.ToJSON..= stagePromptChoices obj] : ["field_key" Data.Aeson.Types.ToJSON..= stagePromptFieldKey obj] : ["initial_value" Data.Aeson.Types.ToJSON..= stagePromptInitialValue obj] : ["label" Data.Aeson.Types.ToJSON..= stagePromptLabel obj] : ["order" Data.Aeson.Types.ToJSON..= stagePromptOrder obj] : ["placeholder" Data.Aeson.Types.ToJSON..= stagePromptPlaceholder obj] : ["required" Data.Aeson.Types.ToJSON..= stagePromptRequired obj] : ["sub_text" Data.Aeson.Types.ToJSON..= stagePromptSubText obj] : ["type" Data.Aeson.Types.ToJSON..= stagePromptType obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["choices" Data.Aeson.Types.ToJSON..= stagePromptChoices obj] : ["field_key" Data.Aeson.Types.ToJSON..= stagePromptFieldKey obj] : ["initial_value" Data.Aeson.Types.ToJSON..= stagePromptInitialValue obj] : ["label" Data.Aeson.Types.ToJSON..= stagePromptLabel obj] : ["order" Data.Aeson.Types.ToJSON..= stagePromptOrder obj] : ["placeholder" Data.Aeson.Types.ToJSON..= stagePromptPlaceholder obj] : ["required" Data.Aeson.Types.ToJSON..= stagePromptRequired obj] : ["sub_text" Data.Aeson.Types.ToJSON..= stagePromptSubText obj] : ["type" Data.Aeson.Types.ToJSON..= stagePromptType obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON StagePrompt where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "StagePrompt" (\obj -> ((((((((GHC.Base.pure StagePrompt GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "choices")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "field_key")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "initial_value")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "label")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "order")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "placeholder")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "required")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "sub_text")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "type"))

-- | Create a new 'StagePrompt' with all required fields.
mkStagePrompt ::
  -- | 'stagePromptChoices'
  AuthentikAPI.Common.Nullable [Data.Text.Internal.Text] ->
  -- | 'stagePromptFieldKey'
  Data.Text.Internal.Text ->
  -- | 'stagePromptInitialValue'
  Data.Text.Internal.Text ->
  -- | 'stagePromptLabel'
  Data.Text.Internal.Text ->
  -- | 'stagePromptOrder'
  GHC.Types.Int ->
  -- | 'stagePromptPlaceholder'
  Data.Text.Internal.Text ->
  -- | 'stagePromptRequired'
  GHC.Types.Bool ->
  -- | 'stagePromptSubText'
  Data.Text.Internal.Text ->
  -- | 'stagePromptType'
  PromptTypeEnum ->
  StagePrompt
mkStagePrompt stagePromptChoices stagePromptFieldKey stagePromptInitialValue stagePromptLabel stagePromptOrder stagePromptPlaceholder stagePromptRequired stagePromptSubText stagePromptType =
  StagePrompt
    { stagePromptChoices = stagePromptChoices,
      stagePromptFieldKey = stagePromptFieldKey,
      stagePromptInitialValue = stagePromptInitialValue,
      stagePromptLabel = stagePromptLabel,
      stagePromptOrder = stagePromptOrder,
      stagePromptPlaceholder = stagePromptPlaceholder,
      stagePromptRequired = stagePromptRequired,
      stagePromptSubText = stagePromptSubText,
      stagePromptType = stagePromptType
    }
