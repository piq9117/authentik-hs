{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the types generated from the schema SyncObjectRequest
module AuthentikAPI.Types.SyncObjectRequest where

import qualified AuthentikAPI.Common
import AuthentikAPI.TypeAlias
import {-# SOURCE #-} AuthentikAPI.Types.SyncObjectModelEnum
import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | Defines the object schema located at @components.schemas.SyncObjectRequest@ in the specification.
--
-- Sync object serializer
data SyncObjectRequest = SyncObjectRequest
  { -- | override_dry_run
    syncObjectRequestOverrideDryRun :: (GHC.Maybe.Maybe GHC.Types.Bool),
    -- | sync_object_id
    --
    -- Constraints:
    --
    -- * Minimum length of 1
    syncObjectRequestSyncObjectId :: Data.Text.Internal.Text,
    -- | sync_object_model
    syncObjectRequestSyncObjectModel :: SyncObjectModelEnum
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON SyncObjectRequest where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("override_dry_run" Data.Aeson.Types.ToJSON..=)) (syncObjectRequestOverrideDryRun obj) : ["sync_object_id" Data.Aeson.Types.ToJSON..= syncObjectRequestSyncObjectId obj] : ["sync_object_model" Data.Aeson.Types.ToJSON..= syncObjectRequestSyncObjectModel obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("override_dry_run" Data.Aeson.Types.ToJSON..=)) (syncObjectRequestOverrideDryRun obj) : ["sync_object_id" Data.Aeson.Types.ToJSON..= syncObjectRequestSyncObjectId obj] : ["sync_object_model" Data.Aeson.Types.ToJSON..= syncObjectRequestSyncObjectModel obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON SyncObjectRequest where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "SyncObjectRequest" (\obj -> ((GHC.Base.pure SyncObjectRequest GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "override_dry_run")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "sync_object_id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "sync_object_model"))

-- | Create a new 'SyncObjectRequest' with all required fields.
mkSyncObjectRequest ::
  -- | 'syncObjectRequestSyncObjectId'
  Data.Text.Internal.Text ->
  -- | 'syncObjectRequestSyncObjectModel'
  SyncObjectModelEnum ->
  SyncObjectRequest
mkSyncObjectRequest syncObjectRequestSyncObjectId syncObjectRequestSyncObjectModel =
  SyncObjectRequest
    { syncObjectRequestOverrideDryRun = GHC.Maybe.Nothing,
      syncObjectRequestSyncObjectId = syncObjectRequestSyncObjectId,
      syncObjectRequestSyncObjectModel = syncObjectRequestSyncObjectModel
    }
