{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the different functions to run the operation outpostsInstancesHealthList
module AuthentikAPI.Operations.OutpostsInstancesHealthList where

import qualified AuthentikAPI.Common
import AuthentikAPI.Types
import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.ByteString as Data.ByteString.Internal.Type
import qualified Data.Either
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | > GET /outposts/instances/{uuid}/health/
--
-- Get outposts current health
outpostsInstancesHealthList ::
  forall m.
  (AuthentikAPI.Common.MonadHTTP m) =>
  -- | Contains all available parameters of this operation (query and path parameters)
  OutpostsInstancesHealthListParameters ->
  -- | Monadic computation which returns the result of the operation
  AuthentikAPI.Common.ClientT m (Network.HTTP.Client.Types.Response OutpostsInstancesHealthListResponse)
outpostsInstancesHealthList parameters =
  GHC.Base.fmap
    ( \response_0 ->
        GHC.Base.fmap
          ( Data.Either.either OutpostsInstancesHealthListResponseError GHC.Base.id
              GHC.Base.. ( \response body ->
                             if
                               | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                   OutpostsInstancesHealthListResponse200
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            [OutpostHealth]
                                                      )
                               | (\status_2 -> Network.HTTP.Types.Status.statusCode status_2 GHC.Classes.== 400) (Network.HTTP.Client.Types.responseStatus response) ->
                                   OutpostsInstancesHealthListResponse400
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            ValidationError
                                                      )
                               | (\status_3 -> Network.HTTP.Types.Status.statusCode status_3 GHC.Classes.== 403) (Network.HTTP.Client.Types.responseStatus response) ->
                                   OutpostsInstancesHealthListResponse403
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            GenericError
                                                      )
                               | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                         )
                response_0
          )
          response_0
    )
    ( AuthentikAPI.Common.doCallWithConfigurationM
        (Data.Text.toUpper GHC.Base.$ Data.Text.Internal.pack "GET")
        ("/outposts/instances/" GHC.Base.<> (AuthentikAPI.Common.byteToText (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (AuthentikAPI.Common.textToByte GHC.Base.$ AuthentikAPI.Common.stringifyModel (outpostsInstancesHealthListParametersPathUuid parameters))) GHC.Base.<> "/health/"))
        [ AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "managed__icontains") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> outpostsInstancesHealthListParametersQueryManaged_Icontains parameters) (Data.Text.Internal.pack "form") GHC.Types.False,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "managed__iexact") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> outpostsInstancesHealthListParametersQueryManaged_Iexact parameters) (Data.Text.Internal.pack "form") GHC.Types.False,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "name__icontains") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> outpostsInstancesHealthListParametersQueryName_Icontains parameters) (Data.Text.Internal.pack "form") GHC.Types.False,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "name__iexact") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> outpostsInstancesHealthListParametersQueryName_Iexact parameters) (Data.Text.Internal.pack "form") GHC.Types.False,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "ordering") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> outpostsInstancesHealthListParametersQueryOrdering parameters) (Data.Text.Internal.pack "form") GHC.Types.False,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "providers__isnull") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> outpostsInstancesHealthListParametersQueryProviders_Isnull parameters) (Data.Text.Internal.pack "form") GHC.Types.False,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "providers_by_pk") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> outpostsInstancesHealthListParametersQueryProvidersByPk parameters) (Data.Text.Internal.pack "form") GHC.Types.True,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "search") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> outpostsInstancesHealthListParametersQuerySearch parameters) (Data.Text.Internal.pack "form") GHC.Types.False,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "service_connection__name__icontains") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> outpostsInstancesHealthListParametersQueryServiceConnection_Name_Icontains parameters) (Data.Text.Internal.pack "form") GHC.Types.False,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "service_connection__name__iexact") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> outpostsInstancesHealthListParametersQueryServiceConnection_Name_Iexact parameters) (Data.Text.Internal.pack "form") GHC.Types.False
        ]
    )

-- | Defines the object schema located at @paths.\/outposts\/instances\/{uuid}\/health\/.GET.parameters@ in the specification.
data OutpostsInstancesHealthListParameters = OutpostsInstancesHealthListParameters
  { -- | pathUuid: Represents the parameter named \'uuid\'
    --
    -- A UUID string identifying this Outpost.
    outpostsInstancesHealthListParametersPathUuid :: Data.Text.Internal.Text,
    -- | queryManaged__icontains: Represents the parameter named \'managed__icontains\'
    outpostsInstancesHealthListParametersQueryManaged_Icontains :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | queryManaged__iexact: Represents the parameter named \'managed__iexact\'
    outpostsInstancesHealthListParametersQueryManaged_Iexact :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | queryName__icontains: Represents the parameter named \'name__icontains\'
    outpostsInstancesHealthListParametersQueryName_Icontains :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | queryName__iexact: Represents the parameter named \'name__iexact\'
    outpostsInstancesHealthListParametersQueryName_Iexact :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | queryOrdering: Represents the parameter named \'ordering\'
    --
    -- Which field to use when ordering the results.
    outpostsInstancesHealthListParametersQueryOrdering :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | queryProviders__isnull: Represents the parameter named \'providers__isnull\'
    outpostsInstancesHealthListParametersQueryProviders_Isnull :: (GHC.Maybe.Maybe GHC.Types.Bool),
    -- | queryProviders_by_pk: Represents the parameter named \'providers_by_pk\'
    outpostsInstancesHealthListParametersQueryProvidersByPk :: (GHC.Maybe.Maybe [GHC.Types.Int]),
    -- | querySearch: Represents the parameter named \'search\'
    --
    -- A search term.
    outpostsInstancesHealthListParametersQuerySearch :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | queryService_connection__name__icontains: Represents the parameter named \'service_connection__name__icontains\'
    outpostsInstancesHealthListParametersQueryServiceConnection_Name_Icontains :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | queryService_connection__name__iexact: Represents the parameter named \'service_connection__name__iexact\'
    outpostsInstancesHealthListParametersQueryServiceConnection_Name_Iexact :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON OutpostsInstancesHealthListParameters where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["pathUuid" Data.Aeson.Types.ToJSON..= outpostsInstancesHealthListParametersPathUuid obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryManaged__icontains" Data.Aeson.Types.ToJSON..=)) (outpostsInstancesHealthListParametersQueryManaged_Icontains obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryManaged__iexact" Data.Aeson.Types.ToJSON..=)) (outpostsInstancesHealthListParametersQueryManaged_Iexact obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryName__icontains" Data.Aeson.Types.ToJSON..=)) (outpostsInstancesHealthListParametersQueryName_Icontains obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryName__iexact" Data.Aeson.Types.ToJSON..=)) (outpostsInstancesHealthListParametersQueryName_Iexact obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryOrdering" Data.Aeson.Types.ToJSON..=)) (outpostsInstancesHealthListParametersQueryOrdering obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryProviders__isnull" Data.Aeson.Types.ToJSON..=)) (outpostsInstancesHealthListParametersQueryProviders_Isnull obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryProviders_by_pk" Data.Aeson.Types.ToJSON..=)) (outpostsInstancesHealthListParametersQueryProvidersByPk obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("querySearch" Data.Aeson.Types.ToJSON..=)) (outpostsInstancesHealthListParametersQuerySearch obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryService_connection__name__icontains" Data.Aeson.Types.ToJSON..=)) (outpostsInstancesHealthListParametersQueryServiceConnection_Name_Icontains obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryService_connection__name__iexact" Data.Aeson.Types.ToJSON..=)) (outpostsInstancesHealthListParametersQueryServiceConnection_Name_Iexact obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["pathUuid" Data.Aeson.Types.ToJSON..= outpostsInstancesHealthListParametersPathUuid obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryManaged__icontains" Data.Aeson.Types.ToJSON..=)) (outpostsInstancesHealthListParametersQueryManaged_Icontains obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryManaged__iexact" Data.Aeson.Types.ToJSON..=)) (outpostsInstancesHealthListParametersQueryManaged_Iexact obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryName__icontains" Data.Aeson.Types.ToJSON..=)) (outpostsInstancesHealthListParametersQueryName_Icontains obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryName__iexact" Data.Aeson.Types.ToJSON..=)) (outpostsInstancesHealthListParametersQueryName_Iexact obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryOrdering" Data.Aeson.Types.ToJSON..=)) (outpostsInstancesHealthListParametersQueryOrdering obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryProviders__isnull" Data.Aeson.Types.ToJSON..=)) (outpostsInstancesHealthListParametersQueryProviders_Isnull obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryProviders_by_pk" Data.Aeson.Types.ToJSON..=)) (outpostsInstancesHealthListParametersQueryProvidersByPk obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("querySearch" Data.Aeson.Types.ToJSON..=)) (outpostsInstancesHealthListParametersQuerySearch obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryService_connection__name__icontains" Data.Aeson.Types.ToJSON..=)) (outpostsInstancesHealthListParametersQueryServiceConnection_Name_Icontains obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryService_connection__name__iexact" Data.Aeson.Types.ToJSON..=)) (outpostsInstancesHealthListParametersQueryServiceConnection_Name_Iexact obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON OutpostsInstancesHealthListParameters where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "OutpostsInstancesHealthListParameters" (\obj -> ((((((((((GHC.Base.pure OutpostsInstancesHealthListParameters GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "pathUuid")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryManaged__icontains")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryManaged__iexact")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryName__icontains")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryName__iexact")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryOrdering")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryProviders__isnull")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryProviders_by_pk")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "querySearch")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryService_connection__name__icontains")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryService_connection__name__iexact"))

-- | Create a new 'OutpostsInstancesHealthListParameters' with all required fields.
mkOutpostsInstancesHealthListParameters ::
  -- | 'outpostsInstancesHealthListParametersPathUuid'
  Data.Text.Internal.Text ->
  OutpostsInstancesHealthListParameters
mkOutpostsInstancesHealthListParameters outpostsInstancesHealthListParametersPathUuid =
  OutpostsInstancesHealthListParameters
    { outpostsInstancesHealthListParametersPathUuid = outpostsInstancesHealthListParametersPathUuid,
      outpostsInstancesHealthListParametersQueryManaged_Icontains = GHC.Maybe.Nothing,
      outpostsInstancesHealthListParametersQueryManaged_Iexact = GHC.Maybe.Nothing,
      outpostsInstancesHealthListParametersQueryName_Icontains = GHC.Maybe.Nothing,
      outpostsInstancesHealthListParametersQueryName_Iexact = GHC.Maybe.Nothing,
      outpostsInstancesHealthListParametersQueryOrdering = GHC.Maybe.Nothing,
      outpostsInstancesHealthListParametersQueryProviders_Isnull = GHC.Maybe.Nothing,
      outpostsInstancesHealthListParametersQueryProvidersByPk = GHC.Maybe.Nothing,
      outpostsInstancesHealthListParametersQuerySearch = GHC.Maybe.Nothing,
      outpostsInstancesHealthListParametersQueryServiceConnection_Name_Icontains = GHC.Maybe.Nothing,
      outpostsInstancesHealthListParametersQueryServiceConnection_Name_Iexact = GHC.Maybe.Nothing
    }

-- | Represents a response of the operation 'outpostsInstancesHealthList'.
--
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'OutpostsInstancesHealthListResponseError' is used.
data OutpostsInstancesHealthListResponse
  = -- | Means either no matching case available or a parse error
    OutpostsInstancesHealthListResponseError GHC.Base.String
  | OutpostsInstancesHealthListResponse200 [OutpostHealth]
  | OutpostsInstancesHealthListResponse400 ValidationError
  | OutpostsInstancesHealthListResponse403 GenericError
  deriving (GHC.Show.Show, GHC.Classes.Eq)
