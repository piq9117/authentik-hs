{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the different functions to run the operation stagesUserWriteList
module AuthentikAPI.Operations.StagesUserWriteList where

import qualified AuthentikAPI.Common
import AuthentikAPI.Types
import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.ByteString as Data.ByteString.Internal.Type
import qualified Data.Either
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | > GET /stages/user_write/
--
-- UserWriteStage Viewset
stagesUserWriteList ::
  forall m.
  (AuthentikAPI.Common.MonadHTTP m) =>
  -- | Contains all available parameters of this operation (query and path parameters)
  StagesUserWriteListParameters ->
  -- | Monadic computation which returns the result of the operation
  AuthentikAPI.Common.ClientT m (Network.HTTP.Client.Types.Response StagesUserWriteListResponse)
stagesUserWriteList parameters =
  GHC.Base.fmap
    ( \response_0 ->
        GHC.Base.fmap
          ( Data.Either.either StagesUserWriteListResponseError GHC.Base.id
              GHC.Base.. ( \response body ->
                             if
                               | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                   StagesUserWriteListResponse200
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            PaginatedUserWriteStageList
                                                      )
                               | (\status_2 -> Network.HTTP.Types.Status.statusCode status_2 GHC.Classes.== 400) (Network.HTTP.Client.Types.responseStatus response) ->
                                   StagesUserWriteListResponse400
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            ValidationError
                                                      )
                               | (\status_3 -> Network.HTTP.Types.Status.statusCode status_3 GHC.Classes.== 403) (Network.HTTP.Client.Types.responseStatus response) ->
                                   StagesUserWriteListResponse403
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            GenericError
                                                      )
                               | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                         )
                response_0
          )
          response_0
    )
    ( AuthentikAPI.Common.doCallWithConfigurationM
        (Data.Text.toUpper GHC.Base.$ Data.Text.Internal.pack "GET")
        "/stages/user_write/"
        [ AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "create_users_as_inactive") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> stagesUserWriteListParametersQueryCreateUsersAsInactive parameters) (Data.Text.Internal.pack "form") GHC.Types.False,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "create_users_group") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> stagesUserWriteListParametersQueryCreateUsersGroup parameters) (Data.Text.Internal.pack "form") GHC.Types.False,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "name") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> stagesUserWriteListParametersQueryName parameters) (Data.Text.Internal.pack "form") GHC.Types.False,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "ordering") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> stagesUserWriteListParametersQueryOrdering parameters) (Data.Text.Internal.pack "form") GHC.Types.False,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "page") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> stagesUserWriteListParametersQueryPage parameters) (Data.Text.Internal.pack "form") GHC.Types.False,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "page_size") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> stagesUserWriteListParametersQueryPageSize parameters) (Data.Text.Internal.pack "form") GHC.Types.False,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "search") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> stagesUserWriteListParametersQuerySearch parameters) (Data.Text.Internal.pack "form") GHC.Types.False,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "stage_uuid") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> stagesUserWriteListParametersQueryStageUuid parameters) (Data.Text.Internal.pack "form") GHC.Types.False,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "user_creation_mode") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> stagesUserWriteListParametersQueryUserCreationMode parameters) (Data.Text.Internal.pack "form") GHC.Types.False,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "user_path_template") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> stagesUserWriteListParametersQueryUserPathTemplate parameters) (Data.Text.Internal.pack "form") GHC.Types.False,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "user_type") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> stagesUserWriteListParametersQueryUserType parameters) (Data.Text.Internal.pack "form") GHC.Types.False
        ]
    )

-- | Defines the object schema located at @paths.\/stages\/user_write\/.GET.parameters@ in the specification.
data StagesUserWriteListParameters = StagesUserWriteListParameters
  { -- | queryCreate_users_as_inactive: Represents the parameter named \'create_users_as_inactive\'
    stagesUserWriteListParametersQueryCreateUsersAsInactive :: (GHC.Maybe.Maybe GHC.Types.Bool),
    -- | queryCreate_users_group: Represents the parameter named \'create_users_group\'
    stagesUserWriteListParametersQueryCreateUsersGroup :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | queryName: Represents the parameter named \'name\'
    stagesUserWriteListParametersQueryName :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | queryOrdering: Represents the parameter named \'ordering\'
    --
    -- Which field to use when ordering the results.
    stagesUserWriteListParametersQueryOrdering :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | queryPage: Represents the parameter named \'page\'
    --
    -- A page number within the paginated result set.
    stagesUserWriteListParametersQueryPage :: (GHC.Maybe.Maybe GHC.Types.Int),
    -- | queryPage_size: Represents the parameter named \'page_size\'
    --
    -- Number of results to return per page.
    stagesUserWriteListParametersQueryPageSize :: (GHC.Maybe.Maybe GHC.Types.Int),
    -- | querySearch: Represents the parameter named \'search\'
    --
    -- A search term.
    stagesUserWriteListParametersQuerySearch :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | queryStage_uuid: Represents the parameter named \'stage_uuid\'
    stagesUserWriteListParametersQueryStageUuid :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | queryUser_creation_mode: Represents the parameter named \'user_creation_mode\'
    stagesUserWriteListParametersQueryUserCreationMode :: (GHC.Maybe.Maybe StagesUserWriteListParametersQueryUserCreationMode'),
    -- | queryUser_path_template: Represents the parameter named \'user_path_template\'
    stagesUserWriteListParametersQueryUserPathTemplate :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | queryUser_type: Represents the parameter named \'user_type\'
    stagesUserWriteListParametersQueryUserType :: (GHC.Maybe.Maybe StagesUserWriteListParametersQueryUserType')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON StagesUserWriteListParameters where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryCreate_users_as_inactive" Data.Aeson.Types.ToJSON..=)) (stagesUserWriteListParametersQueryCreateUsersAsInactive obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryCreate_users_group" Data.Aeson.Types.ToJSON..=)) (stagesUserWriteListParametersQueryCreateUsersGroup obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryName" Data.Aeson.Types.ToJSON..=)) (stagesUserWriteListParametersQueryName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryOrdering" Data.Aeson.Types.ToJSON..=)) (stagesUserWriteListParametersQueryOrdering obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryPage" Data.Aeson.Types.ToJSON..=)) (stagesUserWriteListParametersQueryPage obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryPage_size" Data.Aeson.Types.ToJSON..=)) (stagesUserWriteListParametersQueryPageSize obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("querySearch" Data.Aeson.Types.ToJSON..=)) (stagesUserWriteListParametersQuerySearch obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryStage_uuid" Data.Aeson.Types.ToJSON..=)) (stagesUserWriteListParametersQueryStageUuid obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryUser_creation_mode" Data.Aeson.Types.ToJSON..=)) (stagesUserWriteListParametersQueryUserCreationMode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryUser_path_template" Data.Aeson.Types.ToJSON..=)) (stagesUserWriteListParametersQueryUserPathTemplate obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryUser_type" Data.Aeson.Types.ToJSON..=)) (stagesUserWriteListParametersQueryUserType obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryCreate_users_as_inactive" Data.Aeson.Types.ToJSON..=)) (stagesUserWriteListParametersQueryCreateUsersAsInactive obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryCreate_users_group" Data.Aeson.Types.ToJSON..=)) (stagesUserWriteListParametersQueryCreateUsersGroup obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryName" Data.Aeson.Types.ToJSON..=)) (stagesUserWriteListParametersQueryName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryOrdering" Data.Aeson.Types.ToJSON..=)) (stagesUserWriteListParametersQueryOrdering obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryPage" Data.Aeson.Types.ToJSON..=)) (stagesUserWriteListParametersQueryPage obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryPage_size" Data.Aeson.Types.ToJSON..=)) (stagesUserWriteListParametersQueryPageSize obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("querySearch" Data.Aeson.Types.ToJSON..=)) (stagesUserWriteListParametersQuerySearch obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryStage_uuid" Data.Aeson.Types.ToJSON..=)) (stagesUserWriteListParametersQueryStageUuid obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryUser_creation_mode" Data.Aeson.Types.ToJSON..=)) (stagesUserWriteListParametersQueryUserCreationMode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryUser_path_template" Data.Aeson.Types.ToJSON..=)) (stagesUserWriteListParametersQueryUserPathTemplate obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryUser_type" Data.Aeson.Types.ToJSON..=)) (stagesUserWriteListParametersQueryUserType obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON StagesUserWriteListParameters where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "StagesUserWriteListParameters" (\obj -> ((((((((((GHC.Base.pure StagesUserWriteListParameters GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryCreate_users_as_inactive")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryCreate_users_group")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryName")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryOrdering")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryPage")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryPage_size")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "querySearch")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryStage_uuid")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryUser_creation_mode")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryUser_path_template")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryUser_type"))

-- | Create a new 'StagesUserWriteListParameters' with all required fields.
mkStagesUserWriteListParameters :: StagesUserWriteListParameters
mkStagesUserWriteListParameters =
  StagesUserWriteListParameters
    { stagesUserWriteListParametersQueryCreateUsersAsInactive = GHC.Maybe.Nothing,
      stagesUserWriteListParametersQueryCreateUsersGroup = GHC.Maybe.Nothing,
      stagesUserWriteListParametersQueryName = GHC.Maybe.Nothing,
      stagesUserWriteListParametersQueryOrdering = GHC.Maybe.Nothing,
      stagesUserWriteListParametersQueryPage = GHC.Maybe.Nothing,
      stagesUserWriteListParametersQueryPageSize = GHC.Maybe.Nothing,
      stagesUserWriteListParametersQuerySearch = GHC.Maybe.Nothing,
      stagesUserWriteListParametersQueryStageUuid = GHC.Maybe.Nothing,
      stagesUserWriteListParametersQueryUserCreationMode = GHC.Maybe.Nothing,
      stagesUserWriteListParametersQueryUserPathTemplate = GHC.Maybe.Nothing,
      stagesUserWriteListParametersQueryUserType = GHC.Maybe.Nothing
    }

-- | Defines the enum schema located at @paths.\/stages\/user_write\/.GET.parameters.properties.queryUser_creation_mode@ in the specification.
--
-- Represents the parameter named \'user_creation_mode\'
data StagesUserWriteListParametersQueryUserCreationMode'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    StagesUserWriteListParametersQueryUserCreationMode'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    StagesUserWriteListParametersQueryUserCreationMode'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"always_create"@
    StagesUserWriteListParametersQueryUserCreationMode'EnumAlwaysCreate
  | -- | Represents the JSON value @"create_when_required"@
    StagesUserWriteListParametersQueryUserCreationMode'EnumCreateWhenRequired
  | -- | Represents the JSON value @"never_create"@
    StagesUserWriteListParametersQueryUserCreationMode'EnumNeverCreate
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON StagesUserWriteListParametersQueryUserCreationMode' where
  toJSON (StagesUserWriteListParametersQueryUserCreationMode'Other val) = val
  toJSON (StagesUserWriteListParametersQueryUserCreationMode'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (StagesUserWriteListParametersQueryUserCreationMode'EnumAlwaysCreate) = "always_create"
  toJSON (StagesUserWriteListParametersQueryUserCreationMode'EnumCreateWhenRequired) = "create_when_required"
  toJSON (StagesUserWriteListParametersQueryUserCreationMode'EnumNeverCreate) = "never_create"

instance Data.Aeson.Types.FromJSON.FromJSON StagesUserWriteListParametersQueryUserCreationMode' where
  parseJSON val =
    GHC.Base.pure
      ( if
          | val GHC.Classes.== "always_create" -> StagesUserWriteListParametersQueryUserCreationMode'EnumAlwaysCreate
          | val GHC.Classes.== "create_when_required" -> StagesUserWriteListParametersQueryUserCreationMode'EnumCreateWhenRequired
          | val GHC.Classes.== "never_create" -> StagesUserWriteListParametersQueryUserCreationMode'EnumNeverCreate
          | GHC.Base.otherwise -> StagesUserWriteListParametersQueryUserCreationMode'Other val
      )

-- | Defines the enum schema located at @paths.\/stages\/user_write\/.GET.parameters.properties.queryUser_type@ in the specification.
--
-- Represents the parameter named \'user_type\'
data StagesUserWriteListParametersQueryUserType'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    StagesUserWriteListParametersQueryUserType'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    StagesUserWriteListParametersQueryUserType'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"external"@
    StagesUserWriteListParametersQueryUserType'EnumExternal
  | -- | Represents the JSON value @"internal"@
    StagesUserWriteListParametersQueryUserType'EnumInternal
  | -- | Represents the JSON value @"internal_service_account"@
    StagesUserWriteListParametersQueryUserType'EnumInternalServiceAccount
  | -- | Represents the JSON value @"service_account"@
    StagesUserWriteListParametersQueryUserType'EnumServiceAccount
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON StagesUserWriteListParametersQueryUserType' where
  toJSON (StagesUserWriteListParametersQueryUserType'Other val) = val
  toJSON (StagesUserWriteListParametersQueryUserType'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (StagesUserWriteListParametersQueryUserType'EnumExternal) = "external"
  toJSON (StagesUserWriteListParametersQueryUserType'EnumInternal) = "internal"
  toJSON (StagesUserWriteListParametersQueryUserType'EnumInternalServiceAccount) = "internal_service_account"
  toJSON (StagesUserWriteListParametersQueryUserType'EnumServiceAccount) = "service_account"

instance Data.Aeson.Types.FromJSON.FromJSON StagesUserWriteListParametersQueryUserType' where
  parseJSON val =
    GHC.Base.pure
      ( if
          | val GHC.Classes.== "external" -> StagesUserWriteListParametersQueryUserType'EnumExternal
          | val GHC.Classes.== "internal" -> StagesUserWriteListParametersQueryUserType'EnumInternal
          | val GHC.Classes.== "internal_service_account" -> StagesUserWriteListParametersQueryUserType'EnumInternalServiceAccount
          | val GHC.Classes.== "service_account" -> StagesUserWriteListParametersQueryUserType'EnumServiceAccount
          | GHC.Base.otherwise -> StagesUserWriteListParametersQueryUserType'Other val
      )

-- | Represents a response of the operation 'stagesUserWriteList'.
--
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'StagesUserWriteListResponseError' is used.
data StagesUserWriteListResponse
  = -- | Means either no matching case available or a parse error
    StagesUserWriteListResponseError GHC.Base.String
  | StagesUserWriteListResponse200 PaginatedUserWriteStageList
  | StagesUserWriteListResponse400 ValidationError
  | StagesUserWriteListResponse403 GenericError
  deriving (GHC.Show.Show, GHC.Classes.Eq)
