{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the different functions to run the operation coreUsersList
module AuthentikAPI.Operations.CoreUsersList where

import qualified AuthentikAPI.Common
import AuthentikAPI.Types
import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.ByteString as Data.ByteString.Internal.Type
import qualified Data.Either
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | > GET /core/users/
--
-- User Viewset
coreUsersList ::
  forall m.
  (AuthentikAPI.Common.MonadHTTP m) =>
  -- | Contains all available parameters of this operation (query and path parameters)
  CoreUsersListParameters ->
  -- | Monadic computation which returns the result of the operation
  AuthentikAPI.Common.ClientT m (Network.HTTP.Client.Types.Response CoreUsersListResponse)
coreUsersList parameters =
  GHC.Base.fmap
    ( \response_0 ->
        GHC.Base.fmap
          ( Data.Either.either CoreUsersListResponseError GHC.Base.id
              GHC.Base.. ( \response body ->
                             if
                               | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                   CoreUsersListResponse200
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            PaginatedUserList
                                                      )
                               | (\status_2 -> Network.HTTP.Types.Status.statusCode status_2 GHC.Classes.== 400) (Network.HTTP.Client.Types.responseStatus response) ->
                                   CoreUsersListResponse400
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            ValidationError
                                                      )
                               | (\status_3 -> Network.HTTP.Types.Status.statusCode status_3 GHC.Classes.== 403) (Network.HTTP.Client.Types.responseStatus response) ->
                                   CoreUsersListResponse403
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            GenericError
                                                      )
                               | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                         )
                response_0
          )
          response_0
    )
    ( AuthentikAPI.Common.doCallWithConfigurationM
        (Data.Text.toUpper GHC.Base.$ Data.Text.Internal.pack "GET")
        "/core/users/"
        [ AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "attributes") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> coreUsersListParametersQueryAttributes parameters) (Data.Text.Internal.pack "form") GHC.Types.False,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "email") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> coreUsersListParametersQueryEmail parameters) (Data.Text.Internal.pack "form") GHC.Types.False,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "groups_by_name") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> coreUsersListParametersQueryGroupsByName parameters) (Data.Text.Internal.pack "form") GHC.Types.True,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "groups_by_pk") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> coreUsersListParametersQueryGroupsByPk parameters) (Data.Text.Internal.pack "form") GHC.Types.True,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "include_groups") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> coreUsersListParametersQueryIncludeGroups parameters) (Data.Text.Internal.pack "form") GHC.Types.False,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "is_active") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> coreUsersListParametersQueryIsActive parameters) (Data.Text.Internal.pack "form") GHC.Types.False,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "is_superuser") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> coreUsersListParametersQueryIsSuperuser parameters) (Data.Text.Internal.pack "form") GHC.Types.False,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "name") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> coreUsersListParametersQueryName parameters) (Data.Text.Internal.pack "form") GHC.Types.False,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "ordering") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> coreUsersListParametersQueryOrdering parameters) (Data.Text.Internal.pack "form") GHC.Types.False,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "page") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> coreUsersListParametersQueryPage parameters) (Data.Text.Internal.pack "form") GHC.Types.False,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "page_size") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> coreUsersListParametersQueryPageSize parameters) (Data.Text.Internal.pack "form") GHC.Types.False,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "path") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> coreUsersListParametersQueryPath parameters) (Data.Text.Internal.pack "form") GHC.Types.False,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "path_startswith") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> coreUsersListParametersQueryPathStartswith parameters) (Data.Text.Internal.pack "form") GHC.Types.False,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "search") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> coreUsersListParametersQuerySearch parameters) (Data.Text.Internal.pack "form") GHC.Types.False,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "type") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> coreUsersListParametersQueryType parameters) (Data.Text.Internal.pack "form") GHC.Types.True,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "username") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> coreUsersListParametersQueryUsername parameters) (Data.Text.Internal.pack "form") GHC.Types.False,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "uuid") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> coreUsersListParametersQueryUuid parameters) (Data.Text.Internal.pack "form") GHC.Types.False
        ]
    )

-- | Defines the object schema located at @paths.\/core\/users\/.GET.parameters@ in the specification.
data CoreUsersListParameters = CoreUsersListParameters
  { -- | queryAttributes: Represents the parameter named \'attributes\'
    --
    -- Attributes
    coreUsersListParametersQueryAttributes :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | queryEmail: Represents the parameter named \'email\'
    coreUsersListParametersQueryEmail :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | queryGroups_by_name: Represents the parameter named \'groups_by_name\'
    coreUsersListParametersQueryGroupsByName :: (GHC.Maybe.Maybe [Data.Text.Internal.Text]),
    -- | queryGroups_by_pk: Represents the parameter named \'groups_by_pk\'
    coreUsersListParametersQueryGroupsByPk :: (GHC.Maybe.Maybe [Data.Text.Internal.Text]),
    -- | queryInclude_groups: Represents the parameter named \'include_groups\'
    coreUsersListParametersQueryIncludeGroups :: (GHC.Maybe.Maybe GHC.Types.Bool),
    -- | queryIs_active: Represents the parameter named \'is_active\'
    coreUsersListParametersQueryIsActive :: (GHC.Maybe.Maybe GHC.Types.Bool),
    -- | queryIs_superuser: Represents the parameter named \'is_superuser\'
    coreUsersListParametersQueryIsSuperuser :: (GHC.Maybe.Maybe GHC.Types.Bool),
    -- | queryName: Represents the parameter named \'name\'
    coreUsersListParametersQueryName :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | queryOrdering: Represents the parameter named \'ordering\'
    --
    -- Which field to use when ordering the results.
    coreUsersListParametersQueryOrdering :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | queryPage: Represents the parameter named \'page\'
    --
    -- A page number within the paginated result set.
    coreUsersListParametersQueryPage :: (GHC.Maybe.Maybe GHC.Types.Int),
    -- | queryPage_size: Represents the parameter named \'page_size\'
    --
    -- Number of results to return per page.
    coreUsersListParametersQueryPageSize :: (GHC.Maybe.Maybe GHC.Types.Int),
    -- | queryPath: Represents the parameter named \'path\'
    coreUsersListParametersQueryPath :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | queryPath_startswith: Represents the parameter named \'path_startswith\'
    coreUsersListParametersQueryPathStartswith :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | querySearch: Represents the parameter named \'search\'
    --
    -- A search term.
    coreUsersListParametersQuerySearch :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | queryType: Represents the parameter named \'type\'
    coreUsersListParametersQueryType :: (GHC.Maybe.Maybe [CoreUsersListParametersQueryType']),
    -- | queryUsername: Represents the parameter named \'username\'
    coreUsersListParametersQueryUsername :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | queryUuid: Represents the parameter named \'uuid\'
    coreUsersListParametersQueryUuid :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON CoreUsersListParameters where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryAttributes" Data.Aeson.Types.ToJSON..=)) (coreUsersListParametersQueryAttributes obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryEmail" Data.Aeson.Types.ToJSON..=)) (coreUsersListParametersQueryEmail obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryGroups_by_name" Data.Aeson.Types.ToJSON..=)) (coreUsersListParametersQueryGroupsByName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryGroups_by_pk" Data.Aeson.Types.ToJSON..=)) (coreUsersListParametersQueryGroupsByPk obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryInclude_groups" Data.Aeson.Types.ToJSON..=)) (coreUsersListParametersQueryIncludeGroups obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryIs_active" Data.Aeson.Types.ToJSON..=)) (coreUsersListParametersQueryIsActive obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryIs_superuser" Data.Aeson.Types.ToJSON..=)) (coreUsersListParametersQueryIsSuperuser obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryName" Data.Aeson.Types.ToJSON..=)) (coreUsersListParametersQueryName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryOrdering" Data.Aeson.Types.ToJSON..=)) (coreUsersListParametersQueryOrdering obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryPage" Data.Aeson.Types.ToJSON..=)) (coreUsersListParametersQueryPage obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryPage_size" Data.Aeson.Types.ToJSON..=)) (coreUsersListParametersQueryPageSize obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryPath" Data.Aeson.Types.ToJSON..=)) (coreUsersListParametersQueryPath obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryPath_startswith" Data.Aeson.Types.ToJSON..=)) (coreUsersListParametersQueryPathStartswith obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("querySearch" Data.Aeson.Types.ToJSON..=)) (coreUsersListParametersQuerySearch obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryType" Data.Aeson.Types.ToJSON..=)) (coreUsersListParametersQueryType obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryUsername" Data.Aeson.Types.ToJSON..=)) (coreUsersListParametersQueryUsername obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryUuid" Data.Aeson.Types.ToJSON..=)) (coreUsersListParametersQueryUuid obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryAttributes" Data.Aeson.Types.ToJSON..=)) (coreUsersListParametersQueryAttributes obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryEmail" Data.Aeson.Types.ToJSON..=)) (coreUsersListParametersQueryEmail obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryGroups_by_name" Data.Aeson.Types.ToJSON..=)) (coreUsersListParametersQueryGroupsByName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryGroups_by_pk" Data.Aeson.Types.ToJSON..=)) (coreUsersListParametersQueryGroupsByPk obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryInclude_groups" Data.Aeson.Types.ToJSON..=)) (coreUsersListParametersQueryIncludeGroups obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryIs_active" Data.Aeson.Types.ToJSON..=)) (coreUsersListParametersQueryIsActive obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryIs_superuser" Data.Aeson.Types.ToJSON..=)) (coreUsersListParametersQueryIsSuperuser obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryName" Data.Aeson.Types.ToJSON..=)) (coreUsersListParametersQueryName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryOrdering" Data.Aeson.Types.ToJSON..=)) (coreUsersListParametersQueryOrdering obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryPage" Data.Aeson.Types.ToJSON..=)) (coreUsersListParametersQueryPage obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryPage_size" Data.Aeson.Types.ToJSON..=)) (coreUsersListParametersQueryPageSize obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryPath" Data.Aeson.Types.ToJSON..=)) (coreUsersListParametersQueryPath obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryPath_startswith" Data.Aeson.Types.ToJSON..=)) (coreUsersListParametersQueryPathStartswith obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("querySearch" Data.Aeson.Types.ToJSON..=)) (coreUsersListParametersQuerySearch obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryType" Data.Aeson.Types.ToJSON..=)) (coreUsersListParametersQueryType obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryUsername" Data.Aeson.Types.ToJSON..=)) (coreUsersListParametersQueryUsername obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryUuid" Data.Aeson.Types.ToJSON..=)) (coreUsersListParametersQueryUuid obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON CoreUsersListParameters where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "CoreUsersListParameters" (\obj -> ((((((((((((((((GHC.Base.pure CoreUsersListParameters GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryAttributes")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryEmail")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryGroups_by_name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryGroups_by_pk")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryInclude_groups")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryIs_active")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryIs_superuser")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryName")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryOrdering")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryPage")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryPage_size")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryPath")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryPath_startswith")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "querySearch")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryType")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryUsername")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryUuid"))

-- | Create a new 'CoreUsersListParameters' with all required fields.
mkCoreUsersListParameters :: CoreUsersListParameters
mkCoreUsersListParameters =
  CoreUsersListParameters
    { coreUsersListParametersQueryAttributes = GHC.Maybe.Nothing,
      coreUsersListParametersQueryEmail = GHC.Maybe.Nothing,
      coreUsersListParametersQueryGroupsByName = GHC.Maybe.Nothing,
      coreUsersListParametersQueryGroupsByPk = GHC.Maybe.Nothing,
      coreUsersListParametersQueryIncludeGroups = GHC.Maybe.Nothing,
      coreUsersListParametersQueryIsActive = GHC.Maybe.Nothing,
      coreUsersListParametersQueryIsSuperuser = GHC.Maybe.Nothing,
      coreUsersListParametersQueryName = GHC.Maybe.Nothing,
      coreUsersListParametersQueryOrdering = GHC.Maybe.Nothing,
      coreUsersListParametersQueryPage = GHC.Maybe.Nothing,
      coreUsersListParametersQueryPageSize = GHC.Maybe.Nothing,
      coreUsersListParametersQueryPath = GHC.Maybe.Nothing,
      coreUsersListParametersQueryPathStartswith = GHC.Maybe.Nothing,
      coreUsersListParametersQuerySearch = GHC.Maybe.Nothing,
      coreUsersListParametersQueryType = GHC.Maybe.Nothing,
      coreUsersListParametersQueryUsername = GHC.Maybe.Nothing,
      coreUsersListParametersQueryUuid = GHC.Maybe.Nothing
    }

-- | Defines the enum schema located at @paths.\/core\/users\/.GET.parameters.properties.queryType.items@ in the specification.
data CoreUsersListParametersQueryType'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    CoreUsersListParametersQueryType'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    CoreUsersListParametersQueryType'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"external"@
    CoreUsersListParametersQueryType'EnumExternal
  | -- | Represents the JSON value @"internal"@
    CoreUsersListParametersQueryType'EnumInternal
  | -- | Represents the JSON value @"internal_service_account"@
    CoreUsersListParametersQueryType'EnumInternalServiceAccount
  | -- | Represents the JSON value @"service_account"@
    CoreUsersListParametersQueryType'EnumServiceAccount
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON CoreUsersListParametersQueryType' where
  toJSON (CoreUsersListParametersQueryType'Other val) = val
  toJSON (CoreUsersListParametersQueryType'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (CoreUsersListParametersQueryType'EnumExternal) = "external"
  toJSON (CoreUsersListParametersQueryType'EnumInternal) = "internal"
  toJSON (CoreUsersListParametersQueryType'EnumInternalServiceAccount) = "internal_service_account"
  toJSON (CoreUsersListParametersQueryType'EnumServiceAccount) = "service_account"

instance Data.Aeson.Types.FromJSON.FromJSON CoreUsersListParametersQueryType' where
  parseJSON val =
    GHC.Base.pure
      ( if
          | val GHC.Classes.== "external" -> CoreUsersListParametersQueryType'EnumExternal
          | val GHC.Classes.== "internal" -> CoreUsersListParametersQueryType'EnumInternal
          | val GHC.Classes.== "internal_service_account" -> CoreUsersListParametersQueryType'EnumInternalServiceAccount
          | val GHC.Classes.== "service_account" -> CoreUsersListParametersQueryType'EnumServiceAccount
          | GHC.Base.otherwise -> CoreUsersListParametersQueryType'Other val
      )

-- | Represents a response of the operation 'coreUsersList'.
--
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'CoreUsersListResponseError' is used.
data CoreUsersListResponse
  = -- | Means either no matching case available or a parse error
    CoreUsersListResponseError GHC.Base.String
  | CoreUsersListResponse200 PaginatedUserList
  | CoreUsersListResponse400 ValidationError
  | CoreUsersListResponse403 GenericError
  deriving (GHC.Show.Show, GHC.Classes.Eq)
