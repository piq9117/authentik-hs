{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the different functions to run the operation stagesIdentificationList
module AuthentikAPI.Operations.StagesIdentificationList where

import qualified AuthentikAPI.Common
import AuthentikAPI.Types
import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.ByteString as Data.ByteString.Internal.Type
import qualified Data.Either
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | > GET /stages/identification/
--
-- IdentificationStage Viewset
stagesIdentificationList ::
  forall m.
  (AuthentikAPI.Common.MonadHTTP m) =>
  -- | Contains all available parameters of this operation (query and path parameters)
  StagesIdentificationListParameters ->
  -- | Monadic computation which returns the result of the operation
  AuthentikAPI.Common.ClientT m (Network.HTTP.Client.Types.Response StagesIdentificationListResponse)
stagesIdentificationList parameters =
  GHC.Base.fmap
    ( \response_0 ->
        GHC.Base.fmap
          ( Data.Either.either StagesIdentificationListResponseError GHC.Base.id
              GHC.Base.. ( \response body ->
                             if
                               | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                   StagesIdentificationListResponse200
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            PaginatedIdentificationStageList
                                                      )
                               | (\status_2 -> Network.HTTP.Types.Status.statusCode status_2 GHC.Classes.== 400) (Network.HTTP.Client.Types.responseStatus response) ->
                                   StagesIdentificationListResponse400
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            ValidationError
                                                      )
                               | (\status_3 -> Network.HTTP.Types.Status.statusCode status_3 GHC.Classes.== 403) (Network.HTTP.Client.Types.responseStatus response) ->
                                   StagesIdentificationListResponse403
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            GenericError
                                                      )
                               | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                         )
                response_0
          )
          response_0
    )
    ( AuthentikAPI.Common.doCallWithConfigurationM
        (Data.Text.toUpper GHC.Base.$ Data.Text.Internal.pack "GET")
        "/stages/identification/"
        [ AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "captcha_stage") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> stagesIdentificationListParametersQueryCaptchaStage parameters) (Data.Text.Internal.pack "form") GHC.Types.False,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "case_insensitive_matching") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> stagesIdentificationListParametersQueryCaseInsensitiveMatching parameters) (Data.Text.Internal.pack "form") GHC.Types.False,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "enrollment_flow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> stagesIdentificationListParametersQueryEnrollmentFlow parameters) (Data.Text.Internal.pack "form") GHC.Types.False,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "name") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> stagesIdentificationListParametersQueryName parameters) (Data.Text.Internal.pack "form") GHC.Types.False,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "ordering") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> stagesIdentificationListParametersQueryOrdering parameters) (Data.Text.Internal.pack "form") GHC.Types.False,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "page") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> stagesIdentificationListParametersQueryPage parameters) (Data.Text.Internal.pack "form") GHC.Types.False,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "page_size") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> stagesIdentificationListParametersQueryPageSize parameters) (Data.Text.Internal.pack "form") GHC.Types.False,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "password_stage") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> stagesIdentificationListParametersQueryPasswordStage parameters) (Data.Text.Internal.pack "form") GHC.Types.False,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "passwordless_flow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> stagesIdentificationListParametersQueryPasswordlessFlow parameters) (Data.Text.Internal.pack "form") GHC.Types.False,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "recovery_flow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> stagesIdentificationListParametersQueryRecoveryFlow parameters) (Data.Text.Internal.pack "form") GHC.Types.False,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "search") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> stagesIdentificationListParametersQuerySearch parameters) (Data.Text.Internal.pack "form") GHC.Types.False,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "show_matched_user") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> stagesIdentificationListParametersQueryShowMatchedUser parameters) (Data.Text.Internal.pack "form") GHC.Types.False,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "show_source_labels") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> stagesIdentificationListParametersQueryShowSourceLabels parameters) (Data.Text.Internal.pack "form") GHC.Types.False
        ]
    )

-- | Defines the object schema located at @paths.\/stages\/identification\/.GET.parameters@ in the specification.
data StagesIdentificationListParameters = StagesIdentificationListParameters
  { -- | queryCaptcha_stage: Represents the parameter named \'captcha_stage\'
    stagesIdentificationListParametersQueryCaptchaStage :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | queryCase_insensitive_matching: Represents the parameter named \'case_insensitive_matching\'
    stagesIdentificationListParametersQueryCaseInsensitiveMatching :: (GHC.Maybe.Maybe GHC.Types.Bool),
    -- | queryEnrollment_flow: Represents the parameter named \'enrollment_flow\'
    stagesIdentificationListParametersQueryEnrollmentFlow :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | queryName: Represents the parameter named \'name\'
    stagesIdentificationListParametersQueryName :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | queryOrdering: Represents the parameter named \'ordering\'
    --
    -- Which field to use when ordering the results.
    stagesIdentificationListParametersQueryOrdering :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | queryPage: Represents the parameter named \'page\'
    --
    -- A page number within the paginated result set.
    stagesIdentificationListParametersQueryPage :: (GHC.Maybe.Maybe GHC.Types.Int),
    -- | queryPage_size: Represents the parameter named \'page_size\'
    --
    -- Number of results to return per page.
    stagesIdentificationListParametersQueryPageSize :: (GHC.Maybe.Maybe GHC.Types.Int),
    -- | queryPassword_stage: Represents the parameter named \'password_stage\'
    stagesIdentificationListParametersQueryPasswordStage :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | queryPasswordless_flow: Represents the parameter named \'passwordless_flow\'
    stagesIdentificationListParametersQueryPasswordlessFlow :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | queryRecovery_flow: Represents the parameter named \'recovery_flow\'
    stagesIdentificationListParametersQueryRecoveryFlow :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | querySearch: Represents the parameter named \'search\'
    --
    -- A search term.
    stagesIdentificationListParametersQuerySearch :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | queryShow_matched_user: Represents the parameter named \'show_matched_user\'
    stagesIdentificationListParametersQueryShowMatchedUser :: (GHC.Maybe.Maybe GHC.Types.Bool),
    -- | queryShow_source_labels: Represents the parameter named \'show_source_labels\'
    stagesIdentificationListParametersQueryShowSourceLabels :: (GHC.Maybe.Maybe GHC.Types.Bool)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON StagesIdentificationListParameters where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryCaptcha_stage" Data.Aeson.Types.ToJSON..=)) (stagesIdentificationListParametersQueryCaptchaStage obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryCase_insensitive_matching" Data.Aeson.Types.ToJSON..=)) (stagesIdentificationListParametersQueryCaseInsensitiveMatching obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryEnrollment_flow" Data.Aeson.Types.ToJSON..=)) (stagesIdentificationListParametersQueryEnrollmentFlow obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryName" Data.Aeson.Types.ToJSON..=)) (stagesIdentificationListParametersQueryName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryOrdering" Data.Aeson.Types.ToJSON..=)) (stagesIdentificationListParametersQueryOrdering obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryPage" Data.Aeson.Types.ToJSON..=)) (stagesIdentificationListParametersQueryPage obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryPage_size" Data.Aeson.Types.ToJSON..=)) (stagesIdentificationListParametersQueryPageSize obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryPassword_stage" Data.Aeson.Types.ToJSON..=)) (stagesIdentificationListParametersQueryPasswordStage obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryPasswordless_flow" Data.Aeson.Types.ToJSON..=)) (stagesIdentificationListParametersQueryPasswordlessFlow obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryRecovery_flow" Data.Aeson.Types.ToJSON..=)) (stagesIdentificationListParametersQueryRecoveryFlow obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("querySearch" Data.Aeson.Types.ToJSON..=)) (stagesIdentificationListParametersQuerySearch obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryShow_matched_user" Data.Aeson.Types.ToJSON..=)) (stagesIdentificationListParametersQueryShowMatchedUser obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryShow_source_labels" Data.Aeson.Types.ToJSON..=)) (stagesIdentificationListParametersQueryShowSourceLabels obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryCaptcha_stage" Data.Aeson.Types.ToJSON..=)) (stagesIdentificationListParametersQueryCaptchaStage obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryCase_insensitive_matching" Data.Aeson.Types.ToJSON..=)) (stagesIdentificationListParametersQueryCaseInsensitiveMatching obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryEnrollment_flow" Data.Aeson.Types.ToJSON..=)) (stagesIdentificationListParametersQueryEnrollmentFlow obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryName" Data.Aeson.Types.ToJSON..=)) (stagesIdentificationListParametersQueryName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryOrdering" Data.Aeson.Types.ToJSON..=)) (stagesIdentificationListParametersQueryOrdering obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryPage" Data.Aeson.Types.ToJSON..=)) (stagesIdentificationListParametersQueryPage obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryPage_size" Data.Aeson.Types.ToJSON..=)) (stagesIdentificationListParametersQueryPageSize obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryPassword_stage" Data.Aeson.Types.ToJSON..=)) (stagesIdentificationListParametersQueryPasswordStage obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryPasswordless_flow" Data.Aeson.Types.ToJSON..=)) (stagesIdentificationListParametersQueryPasswordlessFlow obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryRecovery_flow" Data.Aeson.Types.ToJSON..=)) (stagesIdentificationListParametersQueryRecoveryFlow obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("querySearch" Data.Aeson.Types.ToJSON..=)) (stagesIdentificationListParametersQuerySearch obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryShow_matched_user" Data.Aeson.Types.ToJSON..=)) (stagesIdentificationListParametersQueryShowMatchedUser obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryShow_source_labels" Data.Aeson.Types.ToJSON..=)) (stagesIdentificationListParametersQueryShowSourceLabels obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON StagesIdentificationListParameters where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "StagesIdentificationListParameters" (\obj -> ((((((((((((GHC.Base.pure StagesIdentificationListParameters GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryCaptcha_stage")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryCase_insensitive_matching")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryEnrollment_flow")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryName")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryOrdering")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryPage")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryPage_size")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryPassword_stage")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryPasswordless_flow")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryRecovery_flow")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "querySearch")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryShow_matched_user")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryShow_source_labels"))

-- | Create a new 'StagesIdentificationListParameters' with all required fields.
mkStagesIdentificationListParameters :: StagesIdentificationListParameters
mkStagesIdentificationListParameters =
  StagesIdentificationListParameters
    { stagesIdentificationListParametersQueryCaptchaStage = GHC.Maybe.Nothing,
      stagesIdentificationListParametersQueryCaseInsensitiveMatching = GHC.Maybe.Nothing,
      stagesIdentificationListParametersQueryEnrollmentFlow = GHC.Maybe.Nothing,
      stagesIdentificationListParametersQueryName = GHC.Maybe.Nothing,
      stagesIdentificationListParametersQueryOrdering = GHC.Maybe.Nothing,
      stagesIdentificationListParametersQueryPage = GHC.Maybe.Nothing,
      stagesIdentificationListParametersQueryPageSize = GHC.Maybe.Nothing,
      stagesIdentificationListParametersQueryPasswordStage = GHC.Maybe.Nothing,
      stagesIdentificationListParametersQueryPasswordlessFlow = GHC.Maybe.Nothing,
      stagesIdentificationListParametersQueryRecoveryFlow = GHC.Maybe.Nothing,
      stagesIdentificationListParametersQuerySearch = GHC.Maybe.Nothing,
      stagesIdentificationListParametersQueryShowMatchedUser = GHC.Maybe.Nothing,
      stagesIdentificationListParametersQueryShowSourceLabels = GHC.Maybe.Nothing
    }

-- | Represents a response of the operation 'stagesIdentificationList'.
--
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'StagesIdentificationListResponseError' is used.
data StagesIdentificationListResponse
  = -- | Means either no matching case available or a parse error
    StagesIdentificationListResponseError GHC.Base.String
  | StagesIdentificationListResponse200 PaginatedIdentificationStageList
  | StagesIdentificationListResponse400 ValidationError
  | StagesIdentificationListResponse403 GenericError
  deriving (GHC.Show.Show, GHC.Classes.Eq)
