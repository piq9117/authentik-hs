{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the different functions to run the operation providersOauth2List
module AuthentikAPI.Operations.ProvidersOauth2List where

import qualified AuthentikAPI.Common
import AuthentikAPI.Types
import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.ByteString as Data.ByteString.Internal.Type
import qualified Data.Either
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | > GET /providers/oauth2/
--
-- OAuth2Provider Viewset
providersOauth2List ::
  forall m.
  (AuthentikAPI.Common.MonadHTTP m) =>
  -- | Contains all available parameters of this operation (query and path parameters)
  ProvidersOauth2ListParameters ->
  -- | Monadic computation which returns the result of the operation
  AuthentikAPI.Common.ClientT m (Network.HTTP.Client.Types.Response ProvidersOauth2ListResponse)
providersOauth2List parameters =
  GHC.Base.fmap
    ( \response_0 ->
        GHC.Base.fmap
          ( Data.Either.either ProvidersOauth2ListResponseError GHC.Base.id
              GHC.Base.. ( \response body ->
                             if
                               | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                   ProvidersOauth2ListResponse200
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            PaginatedOAuth2ProviderList
                                                      )
                               | (\status_2 -> Network.HTTP.Types.Status.statusCode status_2 GHC.Classes.== 400) (Network.HTTP.Client.Types.responseStatus response) ->
                                   ProvidersOauth2ListResponse400
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            ValidationError
                                                      )
                               | (\status_3 -> Network.HTTP.Types.Status.statusCode status_3 GHC.Classes.== 403) (Network.HTTP.Client.Types.responseStatus response) ->
                                   ProvidersOauth2ListResponse403
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            GenericError
                                                      )
                               | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                         )
                response_0
          )
          response_0
    )
    ( AuthentikAPI.Common.doCallWithConfigurationM
        (Data.Text.toUpper GHC.Base.$ Data.Text.Internal.pack "GET")
        "/providers/oauth2/"
        [ AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "access_code_validity") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> providersOauth2ListParametersQueryAccessCodeValidity parameters) (Data.Text.Internal.pack "form") GHC.Types.False,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "access_token_validity") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> providersOauth2ListParametersQueryAccessTokenValidity parameters) (Data.Text.Internal.pack "form") GHC.Types.False,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "application") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> providersOauth2ListParametersQueryApplication parameters) (Data.Text.Internal.pack "form") GHC.Types.False,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "authorization_flow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> providersOauth2ListParametersQueryAuthorizationFlow parameters) (Data.Text.Internal.pack "form") GHC.Types.False,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "client_id") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> providersOauth2ListParametersQueryClientId parameters) (Data.Text.Internal.pack "form") GHC.Types.False,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "client_type") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> providersOauth2ListParametersQueryClientType parameters) (Data.Text.Internal.pack "form") GHC.Types.False,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "include_claims_in_id_token") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> providersOauth2ListParametersQueryIncludeClaimsInIdToken parameters) (Data.Text.Internal.pack "form") GHC.Types.False,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "issuer_mode") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> providersOauth2ListParametersQueryIssuerMode parameters) (Data.Text.Internal.pack "form") GHC.Types.False,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "name") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> providersOauth2ListParametersQueryName parameters) (Data.Text.Internal.pack "form") GHC.Types.False,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "ordering") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> providersOauth2ListParametersQueryOrdering parameters) (Data.Text.Internal.pack "form") GHC.Types.False,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "page") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> providersOauth2ListParametersQueryPage parameters) (Data.Text.Internal.pack "form") GHC.Types.False,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "page_size") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> providersOauth2ListParametersQueryPageSize parameters) (Data.Text.Internal.pack "form") GHC.Types.False,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "property_mappings") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> providersOauth2ListParametersQueryPropertyMappings parameters) (Data.Text.Internal.pack "form") GHC.Types.True,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "refresh_token_validity") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> providersOauth2ListParametersQueryRefreshTokenValidity parameters) (Data.Text.Internal.pack "form") GHC.Types.False,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "search") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> providersOauth2ListParametersQuerySearch parameters) (Data.Text.Internal.pack "form") GHC.Types.False,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "signing_key") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> providersOauth2ListParametersQuerySigningKey parameters) (Data.Text.Internal.pack "form") GHC.Types.False,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "sub_mode") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> providersOauth2ListParametersQuerySubMode parameters) (Data.Text.Internal.pack "form") GHC.Types.False
        ]
    )

-- | Defines the object schema located at @paths.\/providers\/oauth2\/.GET.parameters@ in the specification.
data ProvidersOauth2ListParameters = ProvidersOauth2ListParameters
  { -- | queryAccess_code_validity: Represents the parameter named \'access_code_validity\'
    providersOauth2ListParametersQueryAccessCodeValidity :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | queryAccess_token_validity: Represents the parameter named \'access_token_validity\'
    providersOauth2ListParametersQueryAccessTokenValidity :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | queryApplication: Represents the parameter named \'application\'
    providersOauth2ListParametersQueryApplication :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | queryAuthorization_flow: Represents the parameter named \'authorization_flow\'
    providersOauth2ListParametersQueryAuthorizationFlow :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | queryClient_id: Represents the parameter named \'client_id\'
    providersOauth2ListParametersQueryClientId :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | queryClient_type: Represents the parameter named \'client_type\'
    --
    -- Confidential clients are capable of maintaining the confidentiality of their credentials. Public clients are incapable
    providersOauth2ListParametersQueryClientType :: (GHC.Maybe.Maybe ProvidersOauth2ListParametersQueryClientType'),
    -- | queryInclude_claims_in_id_token: Represents the parameter named \'include_claims_in_id_token\'
    providersOauth2ListParametersQueryIncludeClaimsInIdToken :: (GHC.Maybe.Maybe GHC.Types.Bool),
    -- | queryIssuer_mode: Represents the parameter named \'issuer_mode\'
    --
    -- Configure how the issuer field of the ID Token should be filled.
    providersOauth2ListParametersQueryIssuerMode :: (GHC.Maybe.Maybe ProvidersOauth2ListParametersQueryIssuerMode'),
    -- | queryName: Represents the parameter named \'name\'
    providersOauth2ListParametersQueryName :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | queryOrdering: Represents the parameter named \'ordering\'
    --
    -- Which field to use when ordering the results.
    providersOauth2ListParametersQueryOrdering :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | queryPage: Represents the parameter named \'page\'
    --
    -- A page number within the paginated result set.
    providersOauth2ListParametersQueryPage :: (GHC.Maybe.Maybe GHC.Types.Int),
    -- | queryPage_size: Represents the parameter named \'page_size\'
    --
    -- Number of results to return per page.
    providersOauth2ListParametersQueryPageSize :: (GHC.Maybe.Maybe GHC.Types.Int),
    -- | queryProperty_mappings: Represents the parameter named \'property_mappings\'
    providersOauth2ListParametersQueryPropertyMappings :: (GHC.Maybe.Maybe [Data.Text.Internal.Text]),
    -- | queryRefresh_token_validity: Represents the parameter named \'refresh_token_validity\'
    providersOauth2ListParametersQueryRefreshTokenValidity :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | querySearch: Represents the parameter named \'search\'
    --
    -- A search term.
    providersOauth2ListParametersQuerySearch :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | querySigning_key: Represents the parameter named \'signing_key\'
    providersOauth2ListParametersQuerySigningKey :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | querySub_mode: Represents the parameter named \'sub_mode\'
    --
    -- Configure what data should be used as unique User Identifier. For most cases, the default should be fine.
    providersOauth2ListParametersQuerySubMode :: (GHC.Maybe.Maybe ProvidersOauth2ListParametersQuerySubMode')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON ProvidersOauth2ListParameters where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryAccess_code_validity" Data.Aeson.Types.ToJSON..=)) (providersOauth2ListParametersQueryAccessCodeValidity obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryAccess_token_validity" Data.Aeson.Types.ToJSON..=)) (providersOauth2ListParametersQueryAccessTokenValidity obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryApplication" Data.Aeson.Types.ToJSON..=)) (providersOauth2ListParametersQueryApplication obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryAuthorization_flow" Data.Aeson.Types.ToJSON..=)) (providersOauth2ListParametersQueryAuthorizationFlow obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryClient_id" Data.Aeson.Types.ToJSON..=)) (providersOauth2ListParametersQueryClientId obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryClient_type" Data.Aeson.Types.ToJSON..=)) (providersOauth2ListParametersQueryClientType obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryInclude_claims_in_id_token" Data.Aeson.Types.ToJSON..=)) (providersOauth2ListParametersQueryIncludeClaimsInIdToken obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryIssuer_mode" Data.Aeson.Types.ToJSON..=)) (providersOauth2ListParametersQueryIssuerMode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryName" Data.Aeson.Types.ToJSON..=)) (providersOauth2ListParametersQueryName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryOrdering" Data.Aeson.Types.ToJSON..=)) (providersOauth2ListParametersQueryOrdering obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryPage" Data.Aeson.Types.ToJSON..=)) (providersOauth2ListParametersQueryPage obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryPage_size" Data.Aeson.Types.ToJSON..=)) (providersOauth2ListParametersQueryPageSize obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryProperty_mappings" Data.Aeson.Types.ToJSON..=)) (providersOauth2ListParametersQueryPropertyMappings obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryRefresh_token_validity" Data.Aeson.Types.ToJSON..=)) (providersOauth2ListParametersQueryRefreshTokenValidity obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("querySearch" Data.Aeson.Types.ToJSON..=)) (providersOauth2ListParametersQuerySearch obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("querySigning_key" Data.Aeson.Types.ToJSON..=)) (providersOauth2ListParametersQuerySigningKey obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("querySub_mode" Data.Aeson.Types.ToJSON..=)) (providersOauth2ListParametersQuerySubMode obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryAccess_code_validity" Data.Aeson.Types.ToJSON..=)) (providersOauth2ListParametersQueryAccessCodeValidity obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryAccess_token_validity" Data.Aeson.Types.ToJSON..=)) (providersOauth2ListParametersQueryAccessTokenValidity obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryApplication" Data.Aeson.Types.ToJSON..=)) (providersOauth2ListParametersQueryApplication obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryAuthorization_flow" Data.Aeson.Types.ToJSON..=)) (providersOauth2ListParametersQueryAuthorizationFlow obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryClient_id" Data.Aeson.Types.ToJSON..=)) (providersOauth2ListParametersQueryClientId obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryClient_type" Data.Aeson.Types.ToJSON..=)) (providersOauth2ListParametersQueryClientType obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryInclude_claims_in_id_token" Data.Aeson.Types.ToJSON..=)) (providersOauth2ListParametersQueryIncludeClaimsInIdToken obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryIssuer_mode" Data.Aeson.Types.ToJSON..=)) (providersOauth2ListParametersQueryIssuerMode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryName" Data.Aeson.Types.ToJSON..=)) (providersOauth2ListParametersQueryName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryOrdering" Data.Aeson.Types.ToJSON..=)) (providersOauth2ListParametersQueryOrdering obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryPage" Data.Aeson.Types.ToJSON..=)) (providersOauth2ListParametersQueryPage obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryPage_size" Data.Aeson.Types.ToJSON..=)) (providersOauth2ListParametersQueryPageSize obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryProperty_mappings" Data.Aeson.Types.ToJSON..=)) (providersOauth2ListParametersQueryPropertyMappings obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryRefresh_token_validity" Data.Aeson.Types.ToJSON..=)) (providersOauth2ListParametersQueryRefreshTokenValidity obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("querySearch" Data.Aeson.Types.ToJSON..=)) (providersOauth2ListParametersQuerySearch obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("querySigning_key" Data.Aeson.Types.ToJSON..=)) (providersOauth2ListParametersQuerySigningKey obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("querySub_mode" Data.Aeson.Types.ToJSON..=)) (providersOauth2ListParametersQuerySubMode obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON ProvidersOauth2ListParameters where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "ProvidersOauth2ListParameters" (\obj -> ((((((((((((((((GHC.Base.pure ProvidersOauth2ListParameters GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryAccess_code_validity")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryAccess_token_validity")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryApplication")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryAuthorization_flow")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryClient_id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryClient_type")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryInclude_claims_in_id_token")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryIssuer_mode")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryName")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryOrdering")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryPage")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryPage_size")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryProperty_mappings")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryRefresh_token_validity")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "querySearch")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "querySigning_key")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "querySub_mode"))

-- | Create a new 'ProvidersOauth2ListParameters' with all required fields.
mkProvidersOauth2ListParameters :: ProvidersOauth2ListParameters
mkProvidersOauth2ListParameters =
  ProvidersOauth2ListParameters
    { providersOauth2ListParametersQueryAccessCodeValidity = GHC.Maybe.Nothing,
      providersOauth2ListParametersQueryAccessTokenValidity = GHC.Maybe.Nothing,
      providersOauth2ListParametersQueryApplication = GHC.Maybe.Nothing,
      providersOauth2ListParametersQueryAuthorizationFlow = GHC.Maybe.Nothing,
      providersOauth2ListParametersQueryClientId = GHC.Maybe.Nothing,
      providersOauth2ListParametersQueryClientType = GHC.Maybe.Nothing,
      providersOauth2ListParametersQueryIncludeClaimsInIdToken = GHC.Maybe.Nothing,
      providersOauth2ListParametersQueryIssuerMode = GHC.Maybe.Nothing,
      providersOauth2ListParametersQueryName = GHC.Maybe.Nothing,
      providersOauth2ListParametersQueryOrdering = GHC.Maybe.Nothing,
      providersOauth2ListParametersQueryPage = GHC.Maybe.Nothing,
      providersOauth2ListParametersQueryPageSize = GHC.Maybe.Nothing,
      providersOauth2ListParametersQueryPropertyMappings = GHC.Maybe.Nothing,
      providersOauth2ListParametersQueryRefreshTokenValidity = GHC.Maybe.Nothing,
      providersOauth2ListParametersQuerySearch = GHC.Maybe.Nothing,
      providersOauth2ListParametersQuerySigningKey = GHC.Maybe.Nothing,
      providersOauth2ListParametersQuerySubMode = GHC.Maybe.Nothing
    }

-- | Defines the enum schema located at @paths.\/providers\/oauth2\/.GET.parameters.properties.queryClient_type@ in the specification.
--
-- Represents the parameter named \'client_type\'
--
-- Confidential clients are capable of maintaining the confidentiality of their credentials. Public clients are incapable
data ProvidersOauth2ListParametersQueryClientType'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    ProvidersOauth2ListParametersQueryClientType'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    ProvidersOauth2ListParametersQueryClientType'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"confidential"@
    ProvidersOauth2ListParametersQueryClientType'EnumConfidential
  | -- | Represents the JSON value @"public"@
    ProvidersOauth2ListParametersQueryClientType'EnumPublic
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON ProvidersOauth2ListParametersQueryClientType' where
  toJSON (ProvidersOauth2ListParametersQueryClientType'Other val) = val
  toJSON (ProvidersOauth2ListParametersQueryClientType'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (ProvidersOauth2ListParametersQueryClientType'EnumConfidential) = "confidential"
  toJSON (ProvidersOauth2ListParametersQueryClientType'EnumPublic) = "public"

instance Data.Aeson.Types.FromJSON.FromJSON ProvidersOauth2ListParametersQueryClientType' where
  parseJSON val =
    GHC.Base.pure
      ( if
          | val GHC.Classes.== "confidential" -> ProvidersOauth2ListParametersQueryClientType'EnumConfidential
          | val GHC.Classes.== "public" -> ProvidersOauth2ListParametersQueryClientType'EnumPublic
          | GHC.Base.otherwise -> ProvidersOauth2ListParametersQueryClientType'Other val
      )

-- | Defines the enum schema located at @paths.\/providers\/oauth2\/.GET.parameters.properties.queryIssuer_mode@ in the specification.
--
-- Represents the parameter named \'issuer_mode\'
--
-- Configure how the issuer field of the ID Token should be filled.
data ProvidersOauth2ListParametersQueryIssuerMode'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    ProvidersOauth2ListParametersQueryIssuerMode'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    ProvidersOauth2ListParametersQueryIssuerMode'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"global"@
    ProvidersOauth2ListParametersQueryIssuerMode'EnumGlobal
  | -- | Represents the JSON value @"per_provider"@
    ProvidersOauth2ListParametersQueryIssuerMode'EnumPerProvider
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON ProvidersOauth2ListParametersQueryIssuerMode' where
  toJSON (ProvidersOauth2ListParametersQueryIssuerMode'Other val) = val
  toJSON (ProvidersOauth2ListParametersQueryIssuerMode'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (ProvidersOauth2ListParametersQueryIssuerMode'EnumGlobal) = "global"
  toJSON (ProvidersOauth2ListParametersQueryIssuerMode'EnumPerProvider) = "per_provider"

instance Data.Aeson.Types.FromJSON.FromJSON ProvidersOauth2ListParametersQueryIssuerMode' where
  parseJSON val =
    GHC.Base.pure
      ( if
          | val GHC.Classes.== "global" -> ProvidersOauth2ListParametersQueryIssuerMode'EnumGlobal
          | val GHC.Classes.== "per_provider" -> ProvidersOauth2ListParametersQueryIssuerMode'EnumPerProvider
          | GHC.Base.otherwise -> ProvidersOauth2ListParametersQueryIssuerMode'Other val
      )

-- | Defines the enum schema located at @paths.\/providers\/oauth2\/.GET.parameters.properties.querySub_mode@ in the specification.
--
-- Represents the parameter named \'sub_mode\'
--
-- Configure what data should be used as unique User Identifier. For most cases, the default should be fine.
data ProvidersOauth2ListParametersQuerySubMode'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    ProvidersOauth2ListParametersQuerySubMode'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    ProvidersOauth2ListParametersQuerySubMode'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"hashed_user_id"@
    ProvidersOauth2ListParametersQuerySubMode'EnumHashedUserId
  | -- | Represents the JSON value @"user_email"@
    ProvidersOauth2ListParametersQuerySubMode'EnumUserEmail
  | -- | Represents the JSON value @"user_id"@
    ProvidersOauth2ListParametersQuerySubMode'EnumUserId
  | -- | Represents the JSON value @"user_upn"@
    ProvidersOauth2ListParametersQuerySubMode'EnumUserUpn
  | -- | Represents the JSON value @"user_username"@
    ProvidersOauth2ListParametersQuerySubMode'EnumUserUsername
  | -- | Represents the JSON value @"user_uuid"@
    ProvidersOauth2ListParametersQuerySubMode'EnumUserUuid
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON ProvidersOauth2ListParametersQuerySubMode' where
  toJSON (ProvidersOauth2ListParametersQuerySubMode'Other val) = val
  toJSON (ProvidersOauth2ListParametersQuerySubMode'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (ProvidersOauth2ListParametersQuerySubMode'EnumHashedUserId) = "hashed_user_id"
  toJSON (ProvidersOauth2ListParametersQuerySubMode'EnumUserEmail) = "user_email"
  toJSON (ProvidersOauth2ListParametersQuerySubMode'EnumUserId) = "user_id"
  toJSON (ProvidersOauth2ListParametersQuerySubMode'EnumUserUpn) = "user_upn"
  toJSON (ProvidersOauth2ListParametersQuerySubMode'EnumUserUsername) = "user_username"
  toJSON (ProvidersOauth2ListParametersQuerySubMode'EnumUserUuid) = "user_uuid"

instance Data.Aeson.Types.FromJSON.FromJSON ProvidersOauth2ListParametersQuerySubMode' where
  parseJSON val =
    GHC.Base.pure
      ( if
          | val GHC.Classes.== "hashed_user_id" -> ProvidersOauth2ListParametersQuerySubMode'EnumHashedUserId
          | val GHC.Classes.== "user_email" -> ProvidersOauth2ListParametersQuerySubMode'EnumUserEmail
          | val GHC.Classes.== "user_id" -> ProvidersOauth2ListParametersQuerySubMode'EnumUserId
          | val GHC.Classes.== "user_upn" -> ProvidersOauth2ListParametersQuerySubMode'EnumUserUpn
          | val GHC.Classes.== "user_username" -> ProvidersOauth2ListParametersQuerySubMode'EnumUserUsername
          | val GHC.Classes.== "user_uuid" -> ProvidersOauth2ListParametersQuerySubMode'EnumUserUuid
          | GHC.Base.otherwise -> ProvidersOauth2ListParametersQuerySubMode'Other val
      )

-- | Represents a response of the operation 'providersOauth2List'.
--
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'ProvidersOauth2ListResponseError' is used.
data ProvidersOauth2ListResponse
  = -- | Means either no matching case available or a parse error
    ProvidersOauth2ListResponseError GHC.Base.String
  | ProvidersOauth2ListResponse200 PaginatedOAuth2ProviderList
  | ProvidersOauth2ListResponse400 ValidationError
  | ProvidersOauth2ListResponse403 GenericError
  deriving (GHC.Show.Show, GHC.Classes.Eq)
