{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the different functions to run the operation propertymappingsAllTestCreate
module AuthentikAPI.Operations.PropertymappingsAllTestCreate where

import qualified AuthentikAPI.Common
import AuthentikAPI.Types
import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.ByteString as Data.ByteString.Internal.Type
import qualified Data.Either
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | > POST /propertymappings/all/{pm_uuid}/test/
--
-- Test Property Mapping
propertymappingsAllTestCreate ::
  forall m.
  (AuthentikAPI.Common.MonadHTTP m) =>
  -- | Contains all available parameters of this operation (query and path parameters)
  PropertymappingsAllTestCreateParameters ->
  -- | The request body to send
  GHC.Maybe.Maybe PropertyMappingTestRequest ->
  -- | Monadic computation which returns the result of the operation
  AuthentikAPI.Common.ClientT m (Network.HTTP.Client.Types.Response PropertymappingsAllTestCreateResponse)
propertymappingsAllTestCreate
  parameters
  body =
    GHC.Base.fmap
      ( \response_0 ->
          GHC.Base.fmap
            ( Data.Either.either PropertymappingsAllTestCreateResponseError GHC.Base.id
                GHC.Base.. ( \response body ->
                               if
                                 | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                     PropertymappingsAllTestCreateResponse200
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              PropertyMappingTestResult
                                                        )
                                 | (\status_2 -> Network.HTTP.Types.Status.statusCode status_2 GHC.Classes.== 400) (Network.HTTP.Client.Types.responseStatus response) -> Data.Either.Right PropertymappingsAllTestCreateResponse400
                                 | (\status_3 -> Network.HTTP.Types.Status.statusCode status_3 GHC.Classes.== 403) (Network.HTTP.Client.Types.responseStatus response) ->
                                     PropertymappingsAllTestCreateResponse403
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              GenericError
                                                        )
                                 | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                           )
                  response_0
            )
            response_0
      )
      (AuthentikAPI.Common.doBodyCallWithConfigurationM (Data.Text.toUpper GHC.Base.$ Data.Text.Internal.pack "POST") ("/propertymappings/all/" GHC.Base.<> (AuthentikAPI.Common.byteToText (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (AuthentikAPI.Common.textToByte GHC.Base.$ AuthentikAPI.Common.stringifyModel (propertymappingsAllTestCreateParametersPathPmUuid parameters))) GHC.Base.<> "/test/")) [AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "format_result") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> propertymappingsAllTestCreateParametersQueryFormatResult parameters) (Data.Text.Internal.pack "form") GHC.Types.False] body AuthentikAPI.Common.RequestBodyEncodingJSON)

-- | Defines the object schema located at @paths.\/propertymappings\/all\/{pm_uuid}\/test\/.POST.parameters@ in the specification.
data PropertymappingsAllTestCreateParameters = PropertymappingsAllTestCreateParameters
  { -- | pathPm_uuid: Represents the parameter named \'pm_uuid\'
    --
    -- A UUID string identifying this Property Mapping.
    propertymappingsAllTestCreateParametersPathPmUuid :: Data.Text.Internal.Text,
    -- | queryFormat_result: Represents the parameter named \'format_result\'
    propertymappingsAllTestCreateParametersQueryFormatResult :: (GHC.Maybe.Maybe GHC.Types.Bool)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PropertymappingsAllTestCreateParameters where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["pathPm_uuid" Data.Aeson.Types.ToJSON..= propertymappingsAllTestCreateParametersPathPmUuid obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryFormat_result" Data.Aeson.Types.ToJSON..=)) (propertymappingsAllTestCreateParametersQueryFormatResult obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["pathPm_uuid" Data.Aeson.Types.ToJSON..= propertymappingsAllTestCreateParametersPathPmUuid obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryFormat_result" Data.Aeson.Types.ToJSON..=)) (propertymappingsAllTestCreateParametersQueryFormatResult obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PropertymappingsAllTestCreateParameters where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PropertymappingsAllTestCreateParameters" (\obj -> (GHC.Base.pure PropertymappingsAllTestCreateParameters GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "pathPm_uuid")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryFormat_result"))

-- | Create a new 'PropertymappingsAllTestCreateParameters' with all required fields.
mkPropertymappingsAllTestCreateParameters ::
  -- | 'propertymappingsAllTestCreateParametersPathPmUuid'
  Data.Text.Internal.Text ->
  PropertymappingsAllTestCreateParameters
mkPropertymappingsAllTestCreateParameters propertymappingsAllTestCreateParametersPathPmUuid =
  PropertymappingsAllTestCreateParameters
    { propertymappingsAllTestCreateParametersPathPmUuid = propertymappingsAllTestCreateParametersPathPmUuid,
      propertymappingsAllTestCreateParametersQueryFormatResult = GHC.Maybe.Nothing
    }

-- | Represents a response of the operation 'propertymappingsAllTestCreate'.
--
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'PropertymappingsAllTestCreateResponseError' is used.
data PropertymappingsAllTestCreateResponse
  = -- | Means either no matching case available or a parse error
    PropertymappingsAllTestCreateResponseError GHC.Base.String
  | PropertymappingsAllTestCreateResponse200 PropertyMappingTestResult
  | -- | Invalid parameters
    PropertymappingsAllTestCreateResponse400
  | PropertymappingsAllTestCreateResponse403 GenericError
  deriving (GHC.Show.Show, GHC.Classes.Eq)
