{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the different functions to run the operation oauth2AuthorizationCodesList
module AuthentikAPI.Operations.Oauth2AuthorizationCodesList where

import qualified AuthentikAPI.Common
import AuthentikAPI.Types
import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.ByteString as Data.ByteString.Internal.Type
import qualified Data.Either
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | > GET /oauth2/authorization_codes/
--
-- AuthorizationCode Viewset
oauth2AuthorizationCodesList ::
  forall m.
  (AuthentikAPI.Common.MonadHTTP m) =>
  -- | Contains all available parameters of this operation (query and path parameters)
  Oauth2AuthorizationCodesListParameters ->
  -- | Monadic computation which returns the result of the operation
  AuthentikAPI.Common.ClientT m (Network.HTTP.Client.Types.Response Oauth2AuthorizationCodesListResponse)
oauth2AuthorizationCodesList parameters =
  GHC.Base.fmap
    ( \response_0 ->
        GHC.Base.fmap
          ( Data.Either.either Oauth2AuthorizationCodesListResponseError GHC.Base.id
              GHC.Base.. ( \response body ->
                             if
                               | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                   Oauth2AuthorizationCodesListResponse200
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            PaginatedExpiringBaseGrantModelList
                                                      )
                               | (\status_2 -> Network.HTTP.Types.Status.statusCode status_2 GHC.Classes.== 400) (Network.HTTP.Client.Types.responseStatus response) ->
                                   Oauth2AuthorizationCodesListResponse400
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            ValidationError
                                                      )
                               | (\status_3 -> Network.HTTP.Types.Status.statusCode status_3 GHC.Classes.== 403) (Network.HTTP.Client.Types.responseStatus response) ->
                                   Oauth2AuthorizationCodesListResponse403
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            GenericError
                                                      )
                               | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                         )
                response_0
          )
          response_0
    )
    ( AuthentikAPI.Common.doCallWithConfigurationM
        (Data.Text.toUpper GHC.Base.$ Data.Text.Internal.pack "GET")
        "/oauth2/authorization_codes/"
        [ AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "ordering") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> oauth2AuthorizationCodesListParametersQueryOrdering parameters) (Data.Text.Internal.pack "form") GHC.Types.False,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "page") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> oauth2AuthorizationCodesListParametersQueryPage parameters) (Data.Text.Internal.pack "form") GHC.Types.False,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "page_size") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> oauth2AuthorizationCodesListParametersQueryPageSize parameters) (Data.Text.Internal.pack "form") GHC.Types.False,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "provider") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> oauth2AuthorizationCodesListParametersQueryProvider parameters) (Data.Text.Internal.pack "form") GHC.Types.False,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "search") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> oauth2AuthorizationCodesListParametersQuerySearch parameters) (Data.Text.Internal.pack "form") GHC.Types.False,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "user") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> oauth2AuthorizationCodesListParametersQueryUser parameters) (Data.Text.Internal.pack "form") GHC.Types.False
        ]
    )

-- | Defines the object schema located at @paths.\/oauth2\/authorization_codes\/.GET.parameters@ in the specification.
data Oauth2AuthorizationCodesListParameters = Oauth2AuthorizationCodesListParameters
  { -- | queryOrdering: Represents the parameter named \'ordering\'
    --
    -- Which field to use when ordering the results.
    oauth2AuthorizationCodesListParametersQueryOrdering :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | queryPage: Represents the parameter named \'page\'
    --
    -- A page number within the paginated result set.
    oauth2AuthorizationCodesListParametersQueryPage :: (GHC.Maybe.Maybe GHC.Types.Int),
    -- | queryPage_size: Represents the parameter named \'page_size\'
    --
    -- Number of results to return per page.
    oauth2AuthorizationCodesListParametersQueryPageSize :: (GHC.Maybe.Maybe GHC.Types.Int),
    -- | queryProvider: Represents the parameter named \'provider\'
    oauth2AuthorizationCodesListParametersQueryProvider :: (GHC.Maybe.Maybe GHC.Types.Int),
    -- | querySearch: Represents the parameter named \'search\'
    --
    -- A search term.
    oauth2AuthorizationCodesListParametersQuerySearch :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | queryUser: Represents the parameter named \'user\'
    oauth2AuthorizationCodesListParametersQueryUser :: (GHC.Maybe.Maybe GHC.Types.Int)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON Oauth2AuthorizationCodesListParameters where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryOrdering" Data.Aeson.Types.ToJSON..=)) (oauth2AuthorizationCodesListParametersQueryOrdering obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryPage" Data.Aeson.Types.ToJSON..=)) (oauth2AuthorizationCodesListParametersQueryPage obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryPage_size" Data.Aeson.Types.ToJSON..=)) (oauth2AuthorizationCodesListParametersQueryPageSize obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryProvider" Data.Aeson.Types.ToJSON..=)) (oauth2AuthorizationCodesListParametersQueryProvider obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("querySearch" Data.Aeson.Types.ToJSON..=)) (oauth2AuthorizationCodesListParametersQuerySearch obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryUser" Data.Aeson.Types.ToJSON..=)) (oauth2AuthorizationCodesListParametersQueryUser obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryOrdering" Data.Aeson.Types.ToJSON..=)) (oauth2AuthorizationCodesListParametersQueryOrdering obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryPage" Data.Aeson.Types.ToJSON..=)) (oauth2AuthorizationCodesListParametersQueryPage obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryPage_size" Data.Aeson.Types.ToJSON..=)) (oauth2AuthorizationCodesListParametersQueryPageSize obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryProvider" Data.Aeson.Types.ToJSON..=)) (oauth2AuthorizationCodesListParametersQueryProvider obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("querySearch" Data.Aeson.Types.ToJSON..=)) (oauth2AuthorizationCodesListParametersQuerySearch obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryUser" Data.Aeson.Types.ToJSON..=)) (oauth2AuthorizationCodesListParametersQueryUser obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON Oauth2AuthorizationCodesListParameters where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "Oauth2AuthorizationCodesListParameters" (\obj -> (((((GHC.Base.pure Oauth2AuthorizationCodesListParameters GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryOrdering")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryPage")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryPage_size")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryProvider")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "querySearch")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryUser"))

-- | Create a new 'Oauth2AuthorizationCodesListParameters' with all required fields.
mkOauth2AuthorizationCodesListParameters :: Oauth2AuthorizationCodesListParameters
mkOauth2AuthorizationCodesListParameters =
  Oauth2AuthorizationCodesListParameters
    { oauth2AuthorizationCodesListParametersQueryOrdering = GHC.Maybe.Nothing,
      oauth2AuthorizationCodesListParametersQueryPage = GHC.Maybe.Nothing,
      oauth2AuthorizationCodesListParametersQueryPageSize = GHC.Maybe.Nothing,
      oauth2AuthorizationCodesListParametersQueryProvider = GHC.Maybe.Nothing,
      oauth2AuthorizationCodesListParametersQuerySearch = GHC.Maybe.Nothing,
      oauth2AuthorizationCodesListParametersQueryUser = GHC.Maybe.Nothing
    }

-- | Represents a response of the operation 'oauth2AuthorizationCodesList'.
--
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'Oauth2AuthorizationCodesListResponseError' is used.
data Oauth2AuthorizationCodesListResponse
  = -- | Means either no matching case available or a parse error
    Oauth2AuthorizationCodesListResponseError GHC.Base.String
  | Oauth2AuthorizationCodesListResponse200 PaginatedExpiringBaseGrantModelList
  | Oauth2AuthorizationCodesListResponse400 ValidationError
  | Oauth2AuthorizationCodesListResponse403 GenericError
  deriving (GHC.Show.Show, GHC.Classes.Eq)
