{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the different functions to run the operation flowsInstancesList
module AuthentikAPI.Operations.FlowsInstancesList where

import qualified AuthentikAPI.Common
import AuthentikAPI.Types
import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.ByteString as Data.ByteString.Internal.Type
import qualified Data.Either
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | > GET /flows/instances/
--
-- Flow Viewset
flowsInstancesList ::
  forall m.
  (AuthentikAPI.Common.MonadHTTP m) =>
  -- | Contains all available parameters of this operation (query and path parameters)
  FlowsInstancesListParameters ->
  -- | Monadic computation which returns the result of the operation
  AuthentikAPI.Common.ClientT m (Network.HTTP.Client.Types.Response FlowsInstancesListResponse)
flowsInstancesList parameters =
  GHC.Base.fmap
    ( \response_0 ->
        GHC.Base.fmap
          ( Data.Either.either FlowsInstancesListResponseError GHC.Base.id
              GHC.Base.. ( \response body ->
                             if
                               | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                   FlowsInstancesListResponse200
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            PaginatedFlowList
                                                      )
                               | (\status_2 -> Network.HTTP.Types.Status.statusCode status_2 GHC.Classes.== 400) (Network.HTTP.Client.Types.responseStatus response) ->
                                   FlowsInstancesListResponse400
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            ValidationError
                                                      )
                               | (\status_3 -> Network.HTTP.Types.Status.statusCode status_3 GHC.Classes.== 403) (Network.HTTP.Client.Types.responseStatus response) ->
                                   FlowsInstancesListResponse403
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            GenericError
                                                      )
                               | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                         )
                response_0
          )
          response_0
    )
    ( AuthentikAPI.Common.doCallWithConfigurationM
        (Data.Text.toUpper GHC.Base.$ Data.Text.Internal.pack "GET")
        "/flows/instances/"
        [ AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "denied_action") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> flowsInstancesListParametersQueryDeniedAction parameters) (Data.Text.Internal.pack "form") GHC.Types.False,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "designation") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> flowsInstancesListParametersQueryDesignation parameters) (Data.Text.Internal.pack "form") GHC.Types.False,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "flow_uuid") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> flowsInstancesListParametersQueryFlowUuid parameters) (Data.Text.Internal.pack "form") GHC.Types.False,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "name") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> flowsInstancesListParametersQueryName parameters) (Data.Text.Internal.pack "form") GHC.Types.False,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "ordering") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> flowsInstancesListParametersQueryOrdering parameters) (Data.Text.Internal.pack "form") GHC.Types.False,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "page") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> flowsInstancesListParametersQueryPage parameters) (Data.Text.Internal.pack "form") GHC.Types.False,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "page_size") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> flowsInstancesListParametersQueryPageSize parameters) (Data.Text.Internal.pack "form") GHC.Types.False,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "search") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> flowsInstancesListParametersQuerySearch parameters) (Data.Text.Internal.pack "form") GHC.Types.False,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "slug") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> flowsInstancesListParametersQuerySlug parameters) (Data.Text.Internal.pack "form") GHC.Types.False
        ]
    )

-- | Defines the object schema located at @paths.\/flows\/instances\/.GET.parameters@ in the specification.
data FlowsInstancesListParameters = FlowsInstancesListParameters
  { -- | queryDenied_action: Represents the parameter named \'denied_action\'
    --
    -- Configure what should happen when a flow denies access to a user.
    flowsInstancesListParametersQueryDeniedAction :: (GHC.Maybe.Maybe FlowsInstancesListParametersQueryDeniedAction'),
    -- | queryDesignation: Represents the parameter named \'designation\'
    --
    -- Decides what this Flow is used for. For example, the Authentication flow is redirect to when an un-authenticated user visits authentik.
    flowsInstancesListParametersQueryDesignation :: (GHC.Maybe.Maybe FlowsInstancesListParametersQueryDesignation'),
    -- | queryFlow_uuid: Represents the parameter named \'flow_uuid\'
    flowsInstancesListParametersQueryFlowUuid :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | queryName: Represents the parameter named \'name\'
    flowsInstancesListParametersQueryName :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | queryOrdering: Represents the parameter named \'ordering\'
    --
    -- Which field to use when ordering the results.
    flowsInstancesListParametersQueryOrdering :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | queryPage: Represents the parameter named \'page\'
    --
    -- A page number within the paginated result set.
    flowsInstancesListParametersQueryPage :: (GHC.Maybe.Maybe GHC.Types.Int),
    -- | queryPage_size: Represents the parameter named \'page_size\'
    --
    -- Number of results to return per page.
    flowsInstancesListParametersQueryPageSize :: (GHC.Maybe.Maybe GHC.Types.Int),
    -- | querySearch: Represents the parameter named \'search\'
    --
    -- A search term.
    flowsInstancesListParametersQuerySearch :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | querySlug: Represents the parameter named \'slug\'
    flowsInstancesListParametersQuerySlug :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON FlowsInstancesListParameters where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryDenied_action" Data.Aeson.Types.ToJSON..=)) (flowsInstancesListParametersQueryDeniedAction obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryDesignation" Data.Aeson.Types.ToJSON..=)) (flowsInstancesListParametersQueryDesignation obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryFlow_uuid" Data.Aeson.Types.ToJSON..=)) (flowsInstancesListParametersQueryFlowUuid obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryName" Data.Aeson.Types.ToJSON..=)) (flowsInstancesListParametersQueryName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryOrdering" Data.Aeson.Types.ToJSON..=)) (flowsInstancesListParametersQueryOrdering obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryPage" Data.Aeson.Types.ToJSON..=)) (flowsInstancesListParametersQueryPage obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryPage_size" Data.Aeson.Types.ToJSON..=)) (flowsInstancesListParametersQueryPageSize obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("querySearch" Data.Aeson.Types.ToJSON..=)) (flowsInstancesListParametersQuerySearch obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("querySlug" Data.Aeson.Types.ToJSON..=)) (flowsInstancesListParametersQuerySlug obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryDenied_action" Data.Aeson.Types.ToJSON..=)) (flowsInstancesListParametersQueryDeniedAction obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryDesignation" Data.Aeson.Types.ToJSON..=)) (flowsInstancesListParametersQueryDesignation obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryFlow_uuid" Data.Aeson.Types.ToJSON..=)) (flowsInstancesListParametersQueryFlowUuid obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryName" Data.Aeson.Types.ToJSON..=)) (flowsInstancesListParametersQueryName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryOrdering" Data.Aeson.Types.ToJSON..=)) (flowsInstancesListParametersQueryOrdering obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryPage" Data.Aeson.Types.ToJSON..=)) (flowsInstancesListParametersQueryPage obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryPage_size" Data.Aeson.Types.ToJSON..=)) (flowsInstancesListParametersQueryPageSize obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("querySearch" Data.Aeson.Types.ToJSON..=)) (flowsInstancesListParametersQuerySearch obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("querySlug" Data.Aeson.Types.ToJSON..=)) (flowsInstancesListParametersQuerySlug obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON FlowsInstancesListParameters where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "FlowsInstancesListParameters" (\obj -> ((((((((GHC.Base.pure FlowsInstancesListParameters GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryDenied_action")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryDesignation")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryFlow_uuid")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryName")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryOrdering")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryPage")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryPage_size")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "querySearch")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "querySlug"))

-- | Create a new 'FlowsInstancesListParameters' with all required fields.
mkFlowsInstancesListParameters :: FlowsInstancesListParameters
mkFlowsInstancesListParameters =
  FlowsInstancesListParameters
    { flowsInstancesListParametersQueryDeniedAction = GHC.Maybe.Nothing,
      flowsInstancesListParametersQueryDesignation = GHC.Maybe.Nothing,
      flowsInstancesListParametersQueryFlowUuid = GHC.Maybe.Nothing,
      flowsInstancesListParametersQueryName = GHC.Maybe.Nothing,
      flowsInstancesListParametersQueryOrdering = GHC.Maybe.Nothing,
      flowsInstancesListParametersQueryPage = GHC.Maybe.Nothing,
      flowsInstancesListParametersQueryPageSize = GHC.Maybe.Nothing,
      flowsInstancesListParametersQuerySearch = GHC.Maybe.Nothing,
      flowsInstancesListParametersQuerySlug = GHC.Maybe.Nothing
    }

-- | Defines the enum schema located at @paths.\/flows\/instances\/.GET.parameters.properties.queryDenied_action@ in the specification.
--
-- Represents the parameter named \'denied_action\'
--
-- Configure what should happen when a flow denies access to a user.
data FlowsInstancesListParametersQueryDeniedAction'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    FlowsInstancesListParametersQueryDeniedAction'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    FlowsInstancesListParametersQueryDeniedAction'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"continue"@
    FlowsInstancesListParametersQueryDeniedAction'EnumContinue
  | -- | Represents the JSON value @"message"@
    FlowsInstancesListParametersQueryDeniedAction'EnumMessage
  | -- | Represents the JSON value @"message_continue"@
    FlowsInstancesListParametersQueryDeniedAction'EnumMessageContinue
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON FlowsInstancesListParametersQueryDeniedAction' where
  toJSON (FlowsInstancesListParametersQueryDeniedAction'Other val) = val
  toJSON (FlowsInstancesListParametersQueryDeniedAction'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (FlowsInstancesListParametersQueryDeniedAction'EnumContinue) = "continue"
  toJSON (FlowsInstancesListParametersQueryDeniedAction'EnumMessage) = "message"
  toJSON (FlowsInstancesListParametersQueryDeniedAction'EnumMessageContinue) = "message_continue"

instance Data.Aeson.Types.FromJSON.FromJSON FlowsInstancesListParametersQueryDeniedAction' where
  parseJSON val =
    GHC.Base.pure
      ( if
          | val GHC.Classes.== "continue" -> FlowsInstancesListParametersQueryDeniedAction'EnumContinue
          | val GHC.Classes.== "message" -> FlowsInstancesListParametersQueryDeniedAction'EnumMessage
          | val GHC.Classes.== "message_continue" -> FlowsInstancesListParametersQueryDeniedAction'EnumMessageContinue
          | GHC.Base.otherwise -> FlowsInstancesListParametersQueryDeniedAction'Other val
      )

-- | Defines the enum schema located at @paths.\/flows\/instances\/.GET.parameters.properties.queryDesignation@ in the specification.
--
-- Represents the parameter named \'designation\'
--
-- Decides what this Flow is used for. For example, the Authentication flow is redirect to when an un-authenticated user visits authentik.
data FlowsInstancesListParametersQueryDesignation'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    FlowsInstancesListParametersQueryDesignation'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    FlowsInstancesListParametersQueryDesignation'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"authentication"@
    FlowsInstancesListParametersQueryDesignation'EnumAuthentication
  | -- | Represents the JSON value @"authorization"@
    FlowsInstancesListParametersQueryDesignation'EnumAuthorization
  | -- | Represents the JSON value @"enrollment"@
    FlowsInstancesListParametersQueryDesignation'EnumEnrollment
  | -- | Represents the JSON value @"invalidation"@
    FlowsInstancesListParametersQueryDesignation'EnumInvalidation
  | -- | Represents the JSON value @"recovery"@
    FlowsInstancesListParametersQueryDesignation'EnumRecovery
  | -- | Represents the JSON value @"stage_configuration"@
    FlowsInstancesListParametersQueryDesignation'EnumStageConfiguration
  | -- | Represents the JSON value @"unenrollment"@
    FlowsInstancesListParametersQueryDesignation'EnumUnenrollment
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON FlowsInstancesListParametersQueryDesignation' where
  toJSON (FlowsInstancesListParametersQueryDesignation'Other val) = val
  toJSON (FlowsInstancesListParametersQueryDesignation'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (FlowsInstancesListParametersQueryDesignation'EnumAuthentication) = "authentication"
  toJSON (FlowsInstancesListParametersQueryDesignation'EnumAuthorization) = "authorization"
  toJSON (FlowsInstancesListParametersQueryDesignation'EnumEnrollment) = "enrollment"
  toJSON (FlowsInstancesListParametersQueryDesignation'EnumInvalidation) = "invalidation"
  toJSON (FlowsInstancesListParametersQueryDesignation'EnumRecovery) = "recovery"
  toJSON (FlowsInstancesListParametersQueryDesignation'EnumStageConfiguration) = "stage_configuration"
  toJSON (FlowsInstancesListParametersQueryDesignation'EnumUnenrollment) = "unenrollment"

instance Data.Aeson.Types.FromJSON.FromJSON FlowsInstancesListParametersQueryDesignation' where
  parseJSON val =
    GHC.Base.pure
      ( if
          | val GHC.Classes.== "authentication" -> FlowsInstancesListParametersQueryDesignation'EnumAuthentication
          | val GHC.Classes.== "authorization" -> FlowsInstancesListParametersQueryDesignation'EnumAuthorization
          | val GHC.Classes.== "enrollment" -> FlowsInstancesListParametersQueryDesignation'EnumEnrollment
          | val GHC.Classes.== "invalidation" -> FlowsInstancesListParametersQueryDesignation'EnumInvalidation
          | val GHC.Classes.== "recovery" -> FlowsInstancesListParametersQueryDesignation'EnumRecovery
          | val GHC.Classes.== "stage_configuration" -> FlowsInstancesListParametersQueryDesignation'EnumStageConfiguration
          | val GHC.Classes.== "unenrollment" -> FlowsInstancesListParametersQueryDesignation'EnumUnenrollment
          | GHC.Base.otherwise -> FlowsInstancesListParametersQueryDesignation'Other val
      )

-- | Represents a response of the operation 'flowsInstancesList'.
--
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'FlowsInstancesListResponseError' is used.
data FlowsInstancesListResponse
  = -- | Means either no matching case available or a parse error
    FlowsInstancesListResponseError GHC.Base.String
  | FlowsInstancesListResponse200 PaginatedFlowList
  | FlowsInstancesListResponse400 ValidationError
  | FlowsInstancesListResponse403 GenericError
  deriving (GHC.Show.Show, GHC.Classes.Eq)
