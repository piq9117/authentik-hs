{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the different functions to run the operation policiesBindingsList
module AuthentikAPI.Operations.PoliciesBindingsList where

import qualified AuthentikAPI.Common
import AuthentikAPI.Types
import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.ByteString as Data.ByteString.Internal.Type
import qualified Data.Either
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | > GET /policies/bindings/
--
-- PolicyBinding Viewset
policiesBindingsList ::
  forall m.
  (AuthentikAPI.Common.MonadHTTP m) =>
  -- | Contains all available parameters of this operation (query and path parameters)
  PoliciesBindingsListParameters ->
  -- | Monadic computation which returns the result of the operation
  AuthentikAPI.Common.ClientT m (Network.HTTP.Client.Types.Response PoliciesBindingsListResponse)
policiesBindingsList parameters =
  GHC.Base.fmap
    ( \response_0 ->
        GHC.Base.fmap
          ( Data.Either.either PoliciesBindingsListResponseError GHC.Base.id
              GHC.Base.. ( \response body ->
                             if
                               | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                   PoliciesBindingsListResponse200
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            PaginatedPolicyBindingList
                                                      )
                               | (\status_2 -> Network.HTTP.Types.Status.statusCode status_2 GHC.Classes.== 400) (Network.HTTP.Client.Types.responseStatus response) ->
                                   PoliciesBindingsListResponse400
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            ValidationError
                                                      )
                               | (\status_3 -> Network.HTTP.Types.Status.statusCode status_3 GHC.Classes.== 403) (Network.HTTP.Client.Types.responseStatus response) ->
                                   PoliciesBindingsListResponse403
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            GenericError
                                                      )
                               | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                         )
                response_0
          )
          response_0
    )
    ( AuthentikAPI.Common.doCallWithConfigurationM
        (Data.Text.toUpper GHC.Base.$ Data.Text.Internal.pack "GET")
        "/policies/bindings/"
        [ AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "enabled") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> policiesBindingsListParametersQueryEnabled parameters) (Data.Text.Internal.pack "form") GHC.Types.False,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "order") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> policiesBindingsListParametersQueryOrder parameters) (Data.Text.Internal.pack "form") GHC.Types.False,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "ordering") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> policiesBindingsListParametersQueryOrdering parameters) (Data.Text.Internal.pack "form") GHC.Types.False,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "page") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> policiesBindingsListParametersQueryPage parameters) (Data.Text.Internal.pack "form") GHC.Types.False,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "page_size") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> policiesBindingsListParametersQueryPageSize parameters) (Data.Text.Internal.pack "form") GHC.Types.False,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "policy") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> policiesBindingsListParametersQueryPolicy parameters) (Data.Text.Internal.pack "form") GHC.Types.False,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "policy__isnull") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> policiesBindingsListParametersQueryPolicy_Isnull parameters) (Data.Text.Internal.pack "form") GHC.Types.False,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "search") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> policiesBindingsListParametersQuerySearch parameters) (Data.Text.Internal.pack "form") GHC.Types.False,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "target") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> policiesBindingsListParametersQueryTarget parameters) (Data.Text.Internal.pack "form") GHC.Types.False,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "target_in") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> policiesBindingsListParametersQueryTargetIn parameters) (Data.Text.Internal.pack "form") GHC.Types.True,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "timeout") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> policiesBindingsListParametersQueryTimeout parameters) (Data.Text.Internal.pack "form") GHC.Types.False
        ]
    )

-- | Defines the object schema located at @paths.\/policies\/bindings\/.GET.parameters@ in the specification.
data PoliciesBindingsListParameters = PoliciesBindingsListParameters
  { -- | queryEnabled: Represents the parameter named \'enabled\'
    policiesBindingsListParametersQueryEnabled :: (GHC.Maybe.Maybe GHC.Types.Bool),
    -- | queryOrder: Represents the parameter named \'order\'
    policiesBindingsListParametersQueryOrder :: (GHC.Maybe.Maybe GHC.Types.Int),
    -- | queryOrdering: Represents the parameter named \'ordering\'
    --
    -- Which field to use when ordering the results.
    policiesBindingsListParametersQueryOrdering :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | queryPage: Represents the parameter named \'page\'
    --
    -- A page number within the paginated result set.
    policiesBindingsListParametersQueryPage :: (GHC.Maybe.Maybe GHC.Types.Int),
    -- | queryPage_size: Represents the parameter named \'page_size\'
    --
    -- Number of results to return per page.
    policiesBindingsListParametersQueryPageSize :: (GHC.Maybe.Maybe GHC.Types.Int),
    -- | queryPolicy: Represents the parameter named \'policy\'
    policiesBindingsListParametersQueryPolicy :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | queryPolicy__isnull: Represents the parameter named \'policy__isnull\'
    policiesBindingsListParametersQueryPolicy_Isnull :: (GHC.Maybe.Maybe GHC.Types.Bool),
    -- | querySearch: Represents the parameter named \'search\'
    --
    -- A search term.
    policiesBindingsListParametersQuerySearch :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | queryTarget: Represents the parameter named \'target\'
    policiesBindingsListParametersQueryTarget :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | queryTarget_in: Represents the parameter named \'target_in\'
    policiesBindingsListParametersQueryTargetIn :: (GHC.Maybe.Maybe [Data.Text.Internal.Text]),
    -- | queryTimeout: Represents the parameter named \'timeout\'
    policiesBindingsListParametersQueryTimeout :: (GHC.Maybe.Maybe GHC.Types.Int)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PoliciesBindingsListParameters where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryEnabled" Data.Aeson.Types.ToJSON..=)) (policiesBindingsListParametersQueryEnabled obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryOrder" Data.Aeson.Types.ToJSON..=)) (policiesBindingsListParametersQueryOrder obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryOrdering" Data.Aeson.Types.ToJSON..=)) (policiesBindingsListParametersQueryOrdering obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryPage" Data.Aeson.Types.ToJSON..=)) (policiesBindingsListParametersQueryPage obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryPage_size" Data.Aeson.Types.ToJSON..=)) (policiesBindingsListParametersQueryPageSize obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryPolicy" Data.Aeson.Types.ToJSON..=)) (policiesBindingsListParametersQueryPolicy obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryPolicy__isnull" Data.Aeson.Types.ToJSON..=)) (policiesBindingsListParametersQueryPolicy_Isnull obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("querySearch" Data.Aeson.Types.ToJSON..=)) (policiesBindingsListParametersQuerySearch obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryTarget" Data.Aeson.Types.ToJSON..=)) (policiesBindingsListParametersQueryTarget obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryTarget_in" Data.Aeson.Types.ToJSON..=)) (policiesBindingsListParametersQueryTargetIn obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryTimeout" Data.Aeson.Types.ToJSON..=)) (policiesBindingsListParametersQueryTimeout obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryEnabled" Data.Aeson.Types.ToJSON..=)) (policiesBindingsListParametersQueryEnabled obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryOrder" Data.Aeson.Types.ToJSON..=)) (policiesBindingsListParametersQueryOrder obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryOrdering" Data.Aeson.Types.ToJSON..=)) (policiesBindingsListParametersQueryOrdering obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryPage" Data.Aeson.Types.ToJSON..=)) (policiesBindingsListParametersQueryPage obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryPage_size" Data.Aeson.Types.ToJSON..=)) (policiesBindingsListParametersQueryPageSize obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryPolicy" Data.Aeson.Types.ToJSON..=)) (policiesBindingsListParametersQueryPolicy obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryPolicy__isnull" Data.Aeson.Types.ToJSON..=)) (policiesBindingsListParametersQueryPolicy_Isnull obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("querySearch" Data.Aeson.Types.ToJSON..=)) (policiesBindingsListParametersQuerySearch obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryTarget" Data.Aeson.Types.ToJSON..=)) (policiesBindingsListParametersQueryTarget obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryTarget_in" Data.Aeson.Types.ToJSON..=)) (policiesBindingsListParametersQueryTargetIn obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryTimeout" Data.Aeson.Types.ToJSON..=)) (policiesBindingsListParametersQueryTimeout obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PoliciesBindingsListParameters where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PoliciesBindingsListParameters" (\obj -> ((((((((((GHC.Base.pure PoliciesBindingsListParameters GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryEnabled")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryOrder")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryOrdering")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryPage")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryPage_size")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryPolicy")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryPolicy__isnull")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "querySearch")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryTarget")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryTarget_in")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryTimeout"))

-- | Create a new 'PoliciesBindingsListParameters' with all required fields.
mkPoliciesBindingsListParameters :: PoliciesBindingsListParameters
mkPoliciesBindingsListParameters =
  PoliciesBindingsListParameters
    { policiesBindingsListParametersQueryEnabled = GHC.Maybe.Nothing,
      policiesBindingsListParametersQueryOrder = GHC.Maybe.Nothing,
      policiesBindingsListParametersQueryOrdering = GHC.Maybe.Nothing,
      policiesBindingsListParametersQueryPage = GHC.Maybe.Nothing,
      policiesBindingsListParametersQueryPageSize = GHC.Maybe.Nothing,
      policiesBindingsListParametersQueryPolicy = GHC.Maybe.Nothing,
      policiesBindingsListParametersQueryPolicy_Isnull = GHC.Maybe.Nothing,
      policiesBindingsListParametersQuerySearch = GHC.Maybe.Nothing,
      policiesBindingsListParametersQueryTarget = GHC.Maybe.Nothing,
      policiesBindingsListParametersQueryTargetIn = GHC.Maybe.Nothing,
      policiesBindingsListParametersQueryTimeout = GHC.Maybe.Nothing
    }

-- | Represents a response of the operation 'policiesBindingsList'.
--
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'PoliciesBindingsListResponseError' is used.
data PoliciesBindingsListResponse
  = -- | Means either no matching case available or a parse error
    PoliciesBindingsListResponseError GHC.Base.String
  | PoliciesBindingsListResponse200 PaginatedPolicyBindingList
  | PoliciesBindingsListResponse400 ValidationError
  | PoliciesBindingsListResponse403 GenericError
  deriving (GHC.Show.Show, GHC.Classes.Eq)
