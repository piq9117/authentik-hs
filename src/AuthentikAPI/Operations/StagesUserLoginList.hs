{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the different functions to run the operation stagesUserLoginList
module AuthentikAPI.Operations.StagesUserLoginList where

import qualified AuthentikAPI.Common
import AuthentikAPI.Types
import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.ByteString as Data.ByteString.Internal.Type
import qualified Data.Either
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | > GET /stages/user_login/
--
-- UserLoginStage Viewset
stagesUserLoginList ::
  forall m.
  (AuthentikAPI.Common.MonadHTTP m) =>
  -- | Contains all available parameters of this operation (query and path parameters)
  StagesUserLoginListParameters ->
  -- | Monadic computation which returns the result of the operation
  AuthentikAPI.Common.ClientT m (Network.HTTP.Client.Types.Response StagesUserLoginListResponse)
stagesUserLoginList parameters =
  GHC.Base.fmap
    ( \response_0 ->
        GHC.Base.fmap
          ( Data.Either.either StagesUserLoginListResponseError GHC.Base.id
              GHC.Base.. ( \response body ->
                             if
                               | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                   StagesUserLoginListResponse200
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            PaginatedUserLoginStageList
                                                      )
                               | (\status_2 -> Network.HTTP.Types.Status.statusCode status_2 GHC.Classes.== 400) (Network.HTTP.Client.Types.responseStatus response) ->
                                   StagesUserLoginListResponse400
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            ValidationError
                                                      )
                               | (\status_3 -> Network.HTTP.Types.Status.statusCode status_3 GHC.Classes.== 403) (Network.HTTP.Client.Types.responseStatus response) ->
                                   StagesUserLoginListResponse403
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            GenericError
                                                      )
                               | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                         )
                response_0
          )
          response_0
    )
    ( AuthentikAPI.Common.doCallWithConfigurationM
        (Data.Text.toUpper GHC.Base.$ Data.Text.Internal.pack "GET")
        "/stages/user_login/"
        [ AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "geoip_binding") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> stagesUserLoginListParametersQueryGeoipBinding parameters) (Data.Text.Internal.pack "form") GHC.Types.False,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "name") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> stagesUserLoginListParametersQueryName parameters) (Data.Text.Internal.pack "form") GHC.Types.False,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "network_binding") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> stagesUserLoginListParametersQueryNetworkBinding parameters) (Data.Text.Internal.pack "form") GHC.Types.False,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "ordering") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> stagesUserLoginListParametersQueryOrdering parameters) (Data.Text.Internal.pack "form") GHC.Types.False,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "page") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> stagesUserLoginListParametersQueryPage parameters) (Data.Text.Internal.pack "form") GHC.Types.False,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "page_size") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> stagesUserLoginListParametersQueryPageSize parameters) (Data.Text.Internal.pack "form") GHC.Types.False,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "remember_me_offset") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> stagesUserLoginListParametersQueryRememberMeOffset parameters) (Data.Text.Internal.pack "form") GHC.Types.False,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "search") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> stagesUserLoginListParametersQuerySearch parameters) (Data.Text.Internal.pack "form") GHC.Types.False,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "session_duration") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> stagesUserLoginListParametersQuerySessionDuration parameters) (Data.Text.Internal.pack "form") GHC.Types.False,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "stage_uuid") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> stagesUserLoginListParametersQueryStageUuid parameters) (Data.Text.Internal.pack "form") GHC.Types.False,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "terminate_other_sessions") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> stagesUserLoginListParametersQueryTerminateOtherSessions parameters) (Data.Text.Internal.pack "form") GHC.Types.False
        ]
    )

-- | Defines the object schema located at @paths.\/stages\/user_login\/.GET.parameters@ in the specification.
data StagesUserLoginListParameters = StagesUserLoginListParameters
  { -- | queryGeoip_binding: Represents the parameter named \'geoip_binding\'
    --
    -- Bind sessions created by this stage to the configured GeoIP location
    stagesUserLoginListParametersQueryGeoipBinding :: (GHC.Maybe.Maybe StagesUserLoginListParametersQueryGeoipBinding'),
    -- | queryName: Represents the parameter named \'name\'
    stagesUserLoginListParametersQueryName :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | queryNetwork_binding: Represents the parameter named \'network_binding\'
    --
    -- Bind sessions created by this stage to the configured network
    stagesUserLoginListParametersQueryNetworkBinding :: (GHC.Maybe.Maybe StagesUserLoginListParametersQueryNetworkBinding'),
    -- | queryOrdering: Represents the parameter named \'ordering\'
    --
    -- Which field to use when ordering the results.
    stagesUserLoginListParametersQueryOrdering :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | queryPage: Represents the parameter named \'page\'
    --
    -- A page number within the paginated result set.
    stagesUserLoginListParametersQueryPage :: (GHC.Maybe.Maybe GHC.Types.Int),
    -- | queryPage_size: Represents the parameter named \'page_size\'
    --
    -- Number of results to return per page.
    stagesUserLoginListParametersQueryPageSize :: (GHC.Maybe.Maybe GHC.Types.Int),
    -- | queryRemember_me_offset: Represents the parameter named \'remember_me_offset\'
    stagesUserLoginListParametersQueryRememberMeOffset :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | querySearch: Represents the parameter named \'search\'
    --
    -- A search term.
    stagesUserLoginListParametersQuerySearch :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | querySession_duration: Represents the parameter named \'session_duration\'
    stagesUserLoginListParametersQuerySessionDuration :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | queryStage_uuid: Represents the parameter named \'stage_uuid\'
    stagesUserLoginListParametersQueryStageUuid :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | queryTerminate_other_sessions: Represents the parameter named \'terminate_other_sessions\'
    stagesUserLoginListParametersQueryTerminateOtherSessions :: (GHC.Maybe.Maybe GHC.Types.Bool)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON StagesUserLoginListParameters where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryGeoip_binding" Data.Aeson.Types.ToJSON..=)) (stagesUserLoginListParametersQueryGeoipBinding obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryName" Data.Aeson.Types.ToJSON..=)) (stagesUserLoginListParametersQueryName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryNetwork_binding" Data.Aeson.Types.ToJSON..=)) (stagesUserLoginListParametersQueryNetworkBinding obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryOrdering" Data.Aeson.Types.ToJSON..=)) (stagesUserLoginListParametersQueryOrdering obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryPage" Data.Aeson.Types.ToJSON..=)) (stagesUserLoginListParametersQueryPage obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryPage_size" Data.Aeson.Types.ToJSON..=)) (stagesUserLoginListParametersQueryPageSize obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryRemember_me_offset" Data.Aeson.Types.ToJSON..=)) (stagesUserLoginListParametersQueryRememberMeOffset obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("querySearch" Data.Aeson.Types.ToJSON..=)) (stagesUserLoginListParametersQuerySearch obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("querySession_duration" Data.Aeson.Types.ToJSON..=)) (stagesUserLoginListParametersQuerySessionDuration obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryStage_uuid" Data.Aeson.Types.ToJSON..=)) (stagesUserLoginListParametersQueryStageUuid obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryTerminate_other_sessions" Data.Aeson.Types.ToJSON..=)) (stagesUserLoginListParametersQueryTerminateOtherSessions obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryGeoip_binding" Data.Aeson.Types.ToJSON..=)) (stagesUserLoginListParametersQueryGeoipBinding obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryName" Data.Aeson.Types.ToJSON..=)) (stagesUserLoginListParametersQueryName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryNetwork_binding" Data.Aeson.Types.ToJSON..=)) (stagesUserLoginListParametersQueryNetworkBinding obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryOrdering" Data.Aeson.Types.ToJSON..=)) (stagesUserLoginListParametersQueryOrdering obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryPage" Data.Aeson.Types.ToJSON..=)) (stagesUserLoginListParametersQueryPage obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryPage_size" Data.Aeson.Types.ToJSON..=)) (stagesUserLoginListParametersQueryPageSize obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryRemember_me_offset" Data.Aeson.Types.ToJSON..=)) (stagesUserLoginListParametersQueryRememberMeOffset obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("querySearch" Data.Aeson.Types.ToJSON..=)) (stagesUserLoginListParametersQuerySearch obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("querySession_duration" Data.Aeson.Types.ToJSON..=)) (stagesUserLoginListParametersQuerySessionDuration obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryStage_uuid" Data.Aeson.Types.ToJSON..=)) (stagesUserLoginListParametersQueryStageUuid obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryTerminate_other_sessions" Data.Aeson.Types.ToJSON..=)) (stagesUserLoginListParametersQueryTerminateOtherSessions obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON StagesUserLoginListParameters where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "StagesUserLoginListParameters" (\obj -> ((((((((((GHC.Base.pure StagesUserLoginListParameters GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryGeoip_binding")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryName")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryNetwork_binding")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryOrdering")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryPage")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryPage_size")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryRemember_me_offset")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "querySearch")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "querySession_duration")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryStage_uuid")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryTerminate_other_sessions"))

-- | Create a new 'StagesUserLoginListParameters' with all required fields.
mkStagesUserLoginListParameters :: StagesUserLoginListParameters
mkStagesUserLoginListParameters =
  StagesUserLoginListParameters
    { stagesUserLoginListParametersQueryGeoipBinding = GHC.Maybe.Nothing,
      stagesUserLoginListParametersQueryName = GHC.Maybe.Nothing,
      stagesUserLoginListParametersQueryNetworkBinding = GHC.Maybe.Nothing,
      stagesUserLoginListParametersQueryOrdering = GHC.Maybe.Nothing,
      stagesUserLoginListParametersQueryPage = GHC.Maybe.Nothing,
      stagesUserLoginListParametersQueryPageSize = GHC.Maybe.Nothing,
      stagesUserLoginListParametersQueryRememberMeOffset = GHC.Maybe.Nothing,
      stagesUserLoginListParametersQuerySearch = GHC.Maybe.Nothing,
      stagesUserLoginListParametersQuerySessionDuration = GHC.Maybe.Nothing,
      stagesUserLoginListParametersQueryStageUuid = GHC.Maybe.Nothing,
      stagesUserLoginListParametersQueryTerminateOtherSessions = GHC.Maybe.Nothing
    }

-- | Defines the enum schema located at @paths.\/stages\/user_login\/.GET.parameters.properties.queryGeoip_binding@ in the specification.
--
-- Represents the parameter named \'geoip_binding\'
--
-- Bind sessions created by this stage to the configured GeoIP location
data StagesUserLoginListParametersQueryGeoipBinding'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    StagesUserLoginListParametersQueryGeoipBinding'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    StagesUserLoginListParametersQueryGeoipBinding'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"bind_continent"@
    StagesUserLoginListParametersQueryGeoipBinding'EnumBindContinent
  | -- | Represents the JSON value @"bind_continent_country"@
    StagesUserLoginListParametersQueryGeoipBinding'EnumBindContinentCountry
  | -- | Represents the JSON value @"bind_continent_country_city"@
    StagesUserLoginListParametersQueryGeoipBinding'EnumBindContinentCountryCity
  | -- | Represents the JSON value @"no_binding"@
    StagesUserLoginListParametersQueryGeoipBinding'EnumNoBinding
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON StagesUserLoginListParametersQueryGeoipBinding' where
  toJSON (StagesUserLoginListParametersQueryGeoipBinding'Other val) = val
  toJSON (StagesUserLoginListParametersQueryGeoipBinding'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (StagesUserLoginListParametersQueryGeoipBinding'EnumBindContinent) = "bind_continent"
  toJSON (StagesUserLoginListParametersQueryGeoipBinding'EnumBindContinentCountry) = "bind_continent_country"
  toJSON (StagesUserLoginListParametersQueryGeoipBinding'EnumBindContinentCountryCity) = "bind_continent_country_city"
  toJSON (StagesUserLoginListParametersQueryGeoipBinding'EnumNoBinding) = "no_binding"

instance Data.Aeson.Types.FromJSON.FromJSON StagesUserLoginListParametersQueryGeoipBinding' where
  parseJSON val =
    GHC.Base.pure
      ( if
          | val GHC.Classes.== "bind_continent" -> StagesUserLoginListParametersQueryGeoipBinding'EnumBindContinent
          | val GHC.Classes.== "bind_continent_country" -> StagesUserLoginListParametersQueryGeoipBinding'EnumBindContinentCountry
          | val GHC.Classes.== "bind_continent_country_city" -> StagesUserLoginListParametersQueryGeoipBinding'EnumBindContinentCountryCity
          | val GHC.Classes.== "no_binding" -> StagesUserLoginListParametersQueryGeoipBinding'EnumNoBinding
          | GHC.Base.otherwise -> StagesUserLoginListParametersQueryGeoipBinding'Other val
      )

-- | Defines the enum schema located at @paths.\/stages\/user_login\/.GET.parameters.properties.queryNetwork_binding@ in the specification.
--
-- Represents the parameter named \'network_binding\'
--
-- Bind sessions created by this stage to the configured network
data StagesUserLoginListParametersQueryNetworkBinding'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    StagesUserLoginListParametersQueryNetworkBinding'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    StagesUserLoginListParametersQueryNetworkBinding'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"bind_asn"@
    StagesUserLoginListParametersQueryNetworkBinding'EnumBindAsn
  | -- | Represents the JSON value @"bind_asn_network"@
    StagesUserLoginListParametersQueryNetworkBinding'EnumBindAsnNetwork
  | -- | Represents the JSON value @"bind_asn_network_ip"@
    StagesUserLoginListParametersQueryNetworkBinding'EnumBindAsnNetworkIp
  | -- | Represents the JSON value @"no_binding"@
    StagesUserLoginListParametersQueryNetworkBinding'EnumNoBinding
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON StagesUserLoginListParametersQueryNetworkBinding' where
  toJSON (StagesUserLoginListParametersQueryNetworkBinding'Other val) = val
  toJSON (StagesUserLoginListParametersQueryNetworkBinding'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (StagesUserLoginListParametersQueryNetworkBinding'EnumBindAsn) = "bind_asn"
  toJSON (StagesUserLoginListParametersQueryNetworkBinding'EnumBindAsnNetwork) = "bind_asn_network"
  toJSON (StagesUserLoginListParametersQueryNetworkBinding'EnumBindAsnNetworkIp) = "bind_asn_network_ip"
  toJSON (StagesUserLoginListParametersQueryNetworkBinding'EnumNoBinding) = "no_binding"

instance Data.Aeson.Types.FromJSON.FromJSON StagesUserLoginListParametersQueryNetworkBinding' where
  parseJSON val =
    GHC.Base.pure
      ( if
          | val GHC.Classes.== "bind_asn" -> StagesUserLoginListParametersQueryNetworkBinding'EnumBindAsn
          | val GHC.Classes.== "bind_asn_network" -> StagesUserLoginListParametersQueryNetworkBinding'EnumBindAsnNetwork
          | val GHC.Classes.== "bind_asn_network_ip" -> StagesUserLoginListParametersQueryNetworkBinding'EnumBindAsnNetworkIp
          | val GHC.Classes.== "no_binding" -> StagesUserLoginListParametersQueryNetworkBinding'EnumNoBinding
          | GHC.Base.otherwise -> StagesUserLoginListParametersQueryNetworkBinding'Other val
      )

-- | Represents a response of the operation 'stagesUserLoginList'.
--
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'StagesUserLoginListResponseError' is used.
data StagesUserLoginListResponse
  = -- | Means either no matching case available or a parse error
    StagesUserLoginListResponseError GHC.Base.String
  | StagesUserLoginListResponse200 PaginatedUserLoginStageList
  | StagesUserLoginListResponse400 ValidationError
  | StagesUserLoginListResponse403 GenericError
  deriving (GHC.Show.Show, GHC.Classes.Eq)
