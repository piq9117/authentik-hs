{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the different functions to run the operation policiesPasswordExpiryList
module AuthentikAPI.Operations.PoliciesPasswordExpiryList where

import qualified AuthentikAPI.Common
import AuthentikAPI.Types
import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.ByteString as Data.ByteString.Internal.Type
import qualified Data.Either
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | > GET /policies/password_expiry/
--
-- Password Expiry Viewset
policiesPasswordExpiryList ::
  forall m.
  (AuthentikAPI.Common.MonadHTTP m) =>
  -- | Contains all available parameters of this operation (query and path parameters)
  PoliciesPasswordExpiryListParameters ->
  -- | Monadic computation which returns the result of the operation
  AuthentikAPI.Common.ClientT m (Network.HTTP.Client.Types.Response PoliciesPasswordExpiryListResponse)
policiesPasswordExpiryList parameters =
  GHC.Base.fmap
    ( \response_0 ->
        GHC.Base.fmap
          ( Data.Either.either PoliciesPasswordExpiryListResponseError GHC.Base.id
              GHC.Base.. ( \response body ->
                             if
                               | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                   PoliciesPasswordExpiryListResponse200
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            PaginatedPasswordExpiryPolicyList
                                                      )
                               | (\status_2 -> Network.HTTP.Types.Status.statusCode status_2 GHC.Classes.== 400) (Network.HTTP.Client.Types.responseStatus response) ->
                                   PoliciesPasswordExpiryListResponse400
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            ValidationError
                                                      )
                               | (\status_3 -> Network.HTTP.Types.Status.statusCode status_3 GHC.Classes.== 403) (Network.HTTP.Client.Types.responseStatus response) ->
                                   PoliciesPasswordExpiryListResponse403
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            GenericError
                                                      )
                               | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                         )
                response_0
          )
          response_0
    )
    ( AuthentikAPI.Common.doCallWithConfigurationM
        (Data.Text.toUpper GHC.Base.$ Data.Text.Internal.pack "GET")
        "/policies/password_expiry/"
        [ AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "created") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> policiesPasswordExpiryListParametersQueryCreated parameters) (Data.Text.Internal.pack "form") GHC.Types.False,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "days") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> policiesPasswordExpiryListParametersQueryDays parameters) (Data.Text.Internal.pack "form") GHC.Types.False,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "deny_only") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> policiesPasswordExpiryListParametersQueryDenyOnly parameters) (Data.Text.Internal.pack "form") GHC.Types.False,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "execution_logging") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> policiesPasswordExpiryListParametersQueryExecutionLogging parameters) (Data.Text.Internal.pack "form") GHC.Types.False,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "last_updated") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> policiesPasswordExpiryListParametersQueryLastUpdated parameters) (Data.Text.Internal.pack "form") GHC.Types.False,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "name") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> policiesPasswordExpiryListParametersQueryName parameters) (Data.Text.Internal.pack "form") GHC.Types.False,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "ordering") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> policiesPasswordExpiryListParametersQueryOrdering parameters) (Data.Text.Internal.pack "form") GHC.Types.False,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "page") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> policiesPasswordExpiryListParametersQueryPage parameters) (Data.Text.Internal.pack "form") GHC.Types.False,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "page_size") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> policiesPasswordExpiryListParametersQueryPageSize parameters) (Data.Text.Internal.pack "form") GHC.Types.False,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "policy_uuid") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> policiesPasswordExpiryListParametersQueryPolicyUuid parameters) (Data.Text.Internal.pack "form") GHC.Types.False,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "search") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> policiesPasswordExpiryListParametersQuerySearch parameters) (Data.Text.Internal.pack "form") GHC.Types.False
        ]
    )

-- | Defines the object schema located at @paths.\/policies\/password_expiry\/.GET.parameters@ in the specification.
data PoliciesPasswordExpiryListParameters = PoliciesPasswordExpiryListParameters
  { -- | queryCreated: Represents the parameter named \'created\'
    policiesPasswordExpiryListParametersQueryCreated :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | queryDays: Represents the parameter named \'days\'
    policiesPasswordExpiryListParametersQueryDays :: (GHC.Maybe.Maybe GHC.Types.Int),
    -- | queryDeny_only: Represents the parameter named \'deny_only\'
    policiesPasswordExpiryListParametersQueryDenyOnly :: (GHC.Maybe.Maybe GHC.Types.Bool),
    -- | queryExecution_logging: Represents the parameter named \'execution_logging\'
    policiesPasswordExpiryListParametersQueryExecutionLogging :: (GHC.Maybe.Maybe GHC.Types.Bool),
    -- | queryLast_updated: Represents the parameter named \'last_updated\'
    policiesPasswordExpiryListParametersQueryLastUpdated :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | queryName: Represents the parameter named \'name\'
    policiesPasswordExpiryListParametersQueryName :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | queryOrdering: Represents the parameter named \'ordering\'
    --
    -- Which field to use when ordering the results.
    policiesPasswordExpiryListParametersQueryOrdering :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | queryPage: Represents the parameter named \'page\'
    --
    -- A page number within the paginated result set.
    policiesPasswordExpiryListParametersQueryPage :: (GHC.Maybe.Maybe GHC.Types.Int),
    -- | queryPage_size: Represents the parameter named \'page_size\'
    --
    -- Number of results to return per page.
    policiesPasswordExpiryListParametersQueryPageSize :: (GHC.Maybe.Maybe GHC.Types.Int),
    -- | queryPolicy_uuid: Represents the parameter named \'policy_uuid\'
    policiesPasswordExpiryListParametersQueryPolicyUuid :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | querySearch: Represents the parameter named \'search\'
    --
    -- A search term.
    policiesPasswordExpiryListParametersQuerySearch :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PoliciesPasswordExpiryListParameters where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryCreated" Data.Aeson.Types.ToJSON..=)) (policiesPasswordExpiryListParametersQueryCreated obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryDays" Data.Aeson.Types.ToJSON..=)) (policiesPasswordExpiryListParametersQueryDays obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryDeny_only" Data.Aeson.Types.ToJSON..=)) (policiesPasswordExpiryListParametersQueryDenyOnly obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryExecution_logging" Data.Aeson.Types.ToJSON..=)) (policiesPasswordExpiryListParametersQueryExecutionLogging obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryLast_updated" Data.Aeson.Types.ToJSON..=)) (policiesPasswordExpiryListParametersQueryLastUpdated obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryName" Data.Aeson.Types.ToJSON..=)) (policiesPasswordExpiryListParametersQueryName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryOrdering" Data.Aeson.Types.ToJSON..=)) (policiesPasswordExpiryListParametersQueryOrdering obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryPage" Data.Aeson.Types.ToJSON..=)) (policiesPasswordExpiryListParametersQueryPage obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryPage_size" Data.Aeson.Types.ToJSON..=)) (policiesPasswordExpiryListParametersQueryPageSize obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryPolicy_uuid" Data.Aeson.Types.ToJSON..=)) (policiesPasswordExpiryListParametersQueryPolicyUuid obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("querySearch" Data.Aeson.Types.ToJSON..=)) (policiesPasswordExpiryListParametersQuerySearch obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryCreated" Data.Aeson.Types.ToJSON..=)) (policiesPasswordExpiryListParametersQueryCreated obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryDays" Data.Aeson.Types.ToJSON..=)) (policiesPasswordExpiryListParametersQueryDays obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryDeny_only" Data.Aeson.Types.ToJSON..=)) (policiesPasswordExpiryListParametersQueryDenyOnly obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryExecution_logging" Data.Aeson.Types.ToJSON..=)) (policiesPasswordExpiryListParametersQueryExecutionLogging obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryLast_updated" Data.Aeson.Types.ToJSON..=)) (policiesPasswordExpiryListParametersQueryLastUpdated obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryName" Data.Aeson.Types.ToJSON..=)) (policiesPasswordExpiryListParametersQueryName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryOrdering" Data.Aeson.Types.ToJSON..=)) (policiesPasswordExpiryListParametersQueryOrdering obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryPage" Data.Aeson.Types.ToJSON..=)) (policiesPasswordExpiryListParametersQueryPage obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryPage_size" Data.Aeson.Types.ToJSON..=)) (policiesPasswordExpiryListParametersQueryPageSize obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryPolicy_uuid" Data.Aeson.Types.ToJSON..=)) (policiesPasswordExpiryListParametersQueryPolicyUuid obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("querySearch" Data.Aeson.Types.ToJSON..=)) (policiesPasswordExpiryListParametersQuerySearch obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PoliciesPasswordExpiryListParameters where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PoliciesPasswordExpiryListParameters" (\obj -> ((((((((((GHC.Base.pure PoliciesPasswordExpiryListParameters GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryCreated")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryDays")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryDeny_only")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryExecution_logging")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryLast_updated")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryName")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryOrdering")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryPage")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryPage_size")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryPolicy_uuid")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "querySearch"))

-- | Create a new 'PoliciesPasswordExpiryListParameters' with all required fields.
mkPoliciesPasswordExpiryListParameters :: PoliciesPasswordExpiryListParameters
mkPoliciesPasswordExpiryListParameters =
  PoliciesPasswordExpiryListParameters
    { policiesPasswordExpiryListParametersQueryCreated = GHC.Maybe.Nothing,
      policiesPasswordExpiryListParametersQueryDays = GHC.Maybe.Nothing,
      policiesPasswordExpiryListParametersQueryDenyOnly = GHC.Maybe.Nothing,
      policiesPasswordExpiryListParametersQueryExecutionLogging = GHC.Maybe.Nothing,
      policiesPasswordExpiryListParametersQueryLastUpdated = GHC.Maybe.Nothing,
      policiesPasswordExpiryListParametersQueryName = GHC.Maybe.Nothing,
      policiesPasswordExpiryListParametersQueryOrdering = GHC.Maybe.Nothing,
      policiesPasswordExpiryListParametersQueryPage = GHC.Maybe.Nothing,
      policiesPasswordExpiryListParametersQueryPageSize = GHC.Maybe.Nothing,
      policiesPasswordExpiryListParametersQueryPolicyUuid = GHC.Maybe.Nothing,
      policiesPasswordExpiryListParametersQuerySearch = GHC.Maybe.Nothing
    }

-- | Represents a response of the operation 'policiesPasswordExpiryList'.
--
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'PoliciesPasswordExpiryListResponseError' is used.
data PoliciesPasswordExpiryListResponse
  = -- | Means either no matching case available or a parse error
    PoliciesPasswordExpiryListResponseError GHC.Base.String
  | PoliciesPasswordExpiryListResponse200 PaginatedPasswordExpiryPolicyList
  | PoliciesPasswordExpiryListResponse400 ValidationError
  | PoliciesPasswordExpiryListResponse403 GenericError
  deriving (GHC.Show.Show, GHC.Classes.Eq)
