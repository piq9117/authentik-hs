{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the different functions to run the operation coreApplicationsList
module AuthentikAPI.Operations.CoreApplicationsList where

import qualified AuthentikAPI.Common
import AuthentikAPI.Types
import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.ByteString as Data.ByteString.Internal.Type
import qualified Data.Either
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | > GET /core/applications/
--
-- Custom list method that checks Policy based access instead of guardian
coreApplicationsList ::
  forall m.
  (AuthentikAPI.Common.MonadHTTP m) =>
  -- | Contains all available parameters of this operation (query and path parameters)
  CoreApplicationsListParameters ->
  -- | Monadic computation which returns the result of the operation
  AuthentikAPI.Common.ClientT m (Network.HTTP.Client.Types.Response CoreApplicationsListResponse)
coreApplicationsList parameters =
  GHC.Base.fmap
    ( \response_0 ->
        GHC.Base.fmap
          ( Data.Either.either CoreApplicationsListResponseError GHC.Base.id
              GHC.Base.. ( \response body ->
                             if
                               | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                   CoreApplicationsListResponse200
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            PaginatedApplicationList
                                                      )
                               | (\status_2 -> Network.HTTP.Types.Status.statusCode status_2 GHC.Classes.== 400) (Network.HTTP.Client.Types.responseStatus response) ->
                                   CoreApplicationsListResponse400
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            ValidationError
                                                      )
                               | (\status_3 -> Network.HTTP.Types.Status.statusCode status_3 GHC.Classes.== 403) (Network.HTTP.Client.Types.responseStatus response) ->
                                   CoreApplicationsListResponse403
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            GenericError
                                                      )
                               | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                         )
                response_0
          )
          response_0
    )
    ( AuthentikAPI.Common.doCallWithConfigurationM
        (Data.Text.toUpper GHC.Base.$ Data.Text.Internal.pack "GET")
        "/core/applications/"
        [ AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "for_user") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> coreApplicationsListParametersQueryForUser parameters) (Data.Text.Internal.pack "form") GHC.Types.False,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "group") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> coreApplicationsListParametersQueryGroup parameters) (Data.Text.Internal.pack "form") GHC.Types.False,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "meta_description") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> coreApplicationsListParametersQueryMetaDescription parameters) (Data.Text.Internal.pack "form") GHC.Types.False,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "meta_launch_url") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> coreApplicationsListParametersQueryMetaLaunchUrl parameters) (Data.Text.Internal.pack "form") GHC.Types.False,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "meta_publisher") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> coreApplicationsListParametersQueryMetaPublisher parameters) (Data.Text.Internal.pack "form") GHC.Types.False,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "name") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> coreApplicationsListParametersQueryName parameters) (Data.Text.Internal.pack "form") GHC.Types.False,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "only_with_launch_url") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> coreApplicationsListParametersQueryOnlyWithLaunchUrl parameters) (Data.Text.Internal.pack "form") GHC.Types.False,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "ordering") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> coreApplicationsListParametersQueryOrdering parameters) (Data.Text.Internal.pack "form") GHC.Types.False,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "page") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> coreApplicationsListParametersQueryPage parameters) (Data.Text.Internal.pack "form") GHC.Types.False,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "page_size") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> coreApplicationsListParametersQueryPageSize parameters) (Data.Text.Internal.pack "form") GHC.Types.False,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "search") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> coreApplicationsListParametersQuerySearch parameters) (Data.Text.Internal.pack "form") GHC.Types.False,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "slug") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> coreApplicationsListParametersQuerySlug parameters) (Data.Text.Internal.pack "form") GHC.Types.False,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "superuser_full_list") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> coreApplicationsListParametersQuerySuperuserFullList parameters) (Data.Text.Internal.pack "form") GHC.Types.False
        ]
    )

-- | Defines the object schema located at @paths.\/core\/applications\/.GET.parameters@ in the specification.
data CoreApplicationsListParameters = CoreApplicationsListParameters
  { -- | queryFor_user: Represents the parameter named \'for_user\'
    coreApplicationsListParametersQueryForUser :: (GHC.Maybe.Maybe GHC.Types.Int),
    -- | queryGroup: Represents the parameter named \'group\'
    coreApplicationsListParametersQueryGroup :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | queryMeta_description: Represents the parameter named \'meta_description\'
    coreApplicationsListParametersQueryMetaDescription :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | queryMeta_launch_url: Represents the parameter named \'meta_launch_url\'
    coreApplicationsListParametersQueryMetaLaunchUrl :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | queryMeta_publisher: Represents the parameter named \'meta_publisher\'
    coreApplicationsListParametersQueryMetaPublisher :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | queryName: Represents the parameter named \'name\'
    coreApplicationsListParametersQueryName :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | queryOnly_with_launch_url: Represents the parameter named \'only_with_launch_url\'
    coreApplicationsListParametersQueryOnlyWithLaunchUrl :: (GHC.Maybe.Maybe GHC.Types.Bool),
    -- | queryOrdering: Represents the parameter named \'ordering\'
    --
    -- Which field to use when ordering the results.
    coreApplicationsListParametersQueryOrdering :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | queryPage: Represents the parameter named \'page\'
    --
    -- A page number within the paginated result set.
    coreApplicationsListParametersQueryPage :: (GHC.Maybe.Maybe GHC.Types.Int),
    -- | queryPage_size: Represents the parameter named \'page_size\'
    --
    -- Number of results to return per page.
    coreApplicationsListParametersQueryPageSize :: (GHC.Maybe.Maybe GHC.Types.Int),
    -- | querySearch: Represents the parameter named \'search\'
    --
    -- A search term.
    coreApplicationsListParametersQuerySearch :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | querySlug: Represents the parameter named \'slug\'
    coreApplicationsListParametersQuerySlug :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | querySuperuser_full_list: Represents the parameter named \'superuser_full_list\'
    coreApplicationsListParametersQuerySuperuserFullList :: (GHC.Maybe.Maybe GHC.Types.Bool)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON CoreApplicationsListParameters where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryFor_user" Data.Aeson.Types.ToJSON..=)) (coreApplicationsListParametersQueryForUser obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryGroup" Data.Aeson.Types.ToJSON..=)) (coreApplicationsListParametersQueryGroup obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryMeta_description" Data.Aeson.Types.ToJSON..=)) (coreApplicationsListParametersQueryMetaDescription obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryMeta_launch_url" Data.Aeson.Types.ToJSON..=)) (coreApplicationsListParametersQueryMetaLaunchUrl obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryMeta_publisher" Data.Aeson.Types.ToJSON..=)) (coreApplicationsListParametersQueryMetaPublisher obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryName" Data.Aeson.Types.ToJSON..=)) (coreApplicationsListParametersQueryName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryOnly_with_launch_url" Data.Aeson.Types.ToJSON..=)) (coreApplicationsListParametersQueryOnlyWithLaunchUrl obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryOrdering" Data.Aeson.Types.ToJSON..=)) (coreApplicationsListParametersQueryOrdering obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryPage" Data.Aeson.Types.ToJSON..=)) (coreApplicationsListParametersQueryPage obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryPage_size" Data.Aeson.Types.ToJSON..=)) (coreApplicationsListParametersQueryPageSize obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("querySearch" Data.Aeson.Types.ToJSON..=)) (coreApplicationsListParametersQuerySearch obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("querySlug" Data.Aeson.Types.ToJSON..=)) (coreApplicationsListParametersQuerySlug obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("querySuperuser_full_list" Data.Aeson.Types.ToJSON..=)) (coreApplicationsListParametersQuerySuperuserFullList obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryFor_user" Data.Aeson.Types.ToJSON..=)) (coreApplicationsListParametersQueryForUser obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryGroup" Data.Aeson.Types.ToJSON..=)) (coreApplicationsListParametersQueryGroup obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryMeta_description" Data.Aeson.Types.ToJSON..=)) (coreApplicationsListParametersQueryMetaDescription obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryMeta_launch_url" Data.Aeson.Types.ToJSON..=)) (coreApplicationsListParametersQueryMetaLaunchUrl obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryMeta_publisher" Data.Aeson.Types.ToJSON..=)) (coreApplicationsListParametersQueryMetaPublisher obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryName" Data.Aeson.Types.ToJSON..=)) (coreApplicationsListParametersQueryName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryOnly_with_launch_url" Data.Aeson.Types.ToJSON..=)) (coreApplicationsListParametersQueryOnlyWithLaunchUrl obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryOrdering" Data.Aeson.Types.ToJSON..=)) (coreApplicationsListParametersQueryOrdering obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryPage" Data.Aeson.Types.ToJSON..=)) (coreApplicationsListParametersQueryPage obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryPage_size" Data.Aeson.Types.ToJSON..=)) (coreApplicationsListParametersQueryPageSize obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("querySearch" Data.Aeson.Types.ToJSON..=)) (coreApplicationsListParametersQuerySearch obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("querySlug" Data.Aeson.Types.ToJSON..=)) (coreApplicationsListParametersQuerySlug obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("querySuperuser_full_list" Data.Aeson.Types.ToJSON..=)) (coreApplicationsListParametersQuerySuperuserFullList obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON CoreApplicationsListParameters where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "CoreApplicationsListParameters" (\obj -> ((((((((((((GHC.Base.pure CoreApplicationsListParameters GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryFor_user")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryGroup")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryMeta_description")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryMeta_launch_url")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryMeta_publisher")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryName")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryOnly_with_launch_url")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryOrdering")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryPage")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryPage_size")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "querySearch")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "querySlug")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "querySuperuser_full_list"))

-- | Create a new 'CoreApplicationsListParameters' with all required fields.
mkCoreApplicationsListParameters :: CoreApplicationsListParameters
mkCoreApplicationsListParameters =
  CoreApplicationsListParameters
    { coreApplicationsListParametersQueryForUser = GHC.Maybe.Nothing,
      coreApplicationsListParametersQueryGroup = GHC.Maybe.Nothing,
      coreApplicationsListParametersQueryMetaDescription = GHC.Maybe.Nothing,
      coreApplicationsListParametersQueryMetaLaunchUrl = GHC.Maybe.Nothing,
      coreApplicationsListParametersQueryMetaPublisher = GHC.Maybe.Nothing,
      coreApplicationsListParametersQueryName = GHC.Maybe.Nothing,
      coreApplicationsListParametersQueryOnlyWithLaunchUrl = GHC.Maybe.Nothing,
      coreApplicationsListParametersQueryOrdering = GHC.Maybe.Nothing,
      coreApplicationsListParametersQueryPage = GHC.Maybe.Nothing,
      coreApplicationsListParametersQueryPageSize = GHC.Maybe.Nothing,
      coreApplicationsListParametersQuerySearch = GHC.Maybe.Nothing,
      coreApplicationsListParametersQuerySlug = GHC.Maybe.Nothing,
      coreApplicationsListParametersQuerySuperuserFullList = GHC.Maybe.Nothing
    }

-- | Represents a response of the operation 'coreApplicationsList'.
--
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'CoreApplicationsListResponseError' is used.
data CoreApplicationsListResponse
  = -- | Means either no matching case available or a parse error
    CoreApplicationsListResponseError GHC.Base.String
  | CoreApplicationsListResponse200 PaginatedApplicationList
  | CoreApplicationsListResponse400 ValidationError
  | CoreApplicationsListResponse403 GenericError
  deriving (GHC.Show.Show, GHC.Classes.Eq)
