{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the different functions to run the operation ssfStreamsList
module AuthentikAPI.Operations.SsfStreamsList where

import qualified AuthentikAPI.Common
import AuthentikAPI.Types
import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.ByteString as Data.ByteString.Internal.Type
import qualified Data.Either
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | > GET /ssf/streams/
--
-- SSFStream Viewset
ssfStreamsList ::
  forall m.
  (AuthentikAPI.Common.MonadHTTP m) =>
  -- | Contains all available parameters of this operation (query and path parameters)
  SsfStreamsListParameters ->
  -- | Monadic computation which returns the result of the operation
  AuthentikAPI.Common.ClientT m (Network.HTTP.Client.Types.Response SsfStreamsListResponse)
ssfStreamsList parameters =
  GHC.Base.fmap
    ( \response_0 ->
        GHC.Base.fmap
          ( Data.Either.either SsfStreamsListResponseError GHC.Base.id
              GHC.Base.. ( \response body ->
                             if
                               | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                   SsfStreamsListResponse200
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            PaginatedSSFStreamList
                                                      )
                               | (\status_2 -> Network.HTTP.Types.Status.statusCode status_2 GHC.Classes.== 400) (Network.HTTP.Client.Types.responseStatus response) ->
                                   SsfStreamsListResponse400
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            ValidationError
                                                      )
                               | (\status_3 -> Network.HTTP.Types.Status.statusCode status_3 GHC.Classes.== 403) (Network.HTTP.Client.Types.responseStatus response) ->
                                   SsfStreamsListResponse403
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            GenericError
                                                      )
                               | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                         )
                response_0
          )
          response_0
    )
    ( AuthentikAPI.Common.doCallWithConfigurationM
        (Data.Text.toUpper GHC.Base.$ Data.Text.Internal.pack "GET")
        "/ssf/streams/"
        [ AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "delivery_method") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> ssfStreamsListParametersQueryDeliveryMethod parameters) (Data.Text.Internal.pack "form") GHC.Types.False,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "endpoint_url") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> ssfStreamsListParametersQueryEndpointUrl parameters) (Data.Text.Internal.pack "form") GHC.Types.False,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "ordering") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> ssfStreamsListParametersQueryOrdering parameters) (Data.Text.Internal.pack "form") GHC.Types.False,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "page") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> ssfStreamsListParametersQueryPage parameters) (Data.Text.Internal.pack "form") GHC.Types.False,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "page_size") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> ssfStreamsListParametersQueryPageSize parameters) (Data.Text.Internal.pack "form") GHC.Types.False,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "provider") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> ssfStreamsListParametersQueryProvider parameters) (Data.Text.Internal.pack "form") GHC.Types.False,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "search") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> ssfStreamsListParametersQuerySearch parameters) (Data.Text.Internal.pack "form") GHC.Types.False
        ]
    )

-- | Defines the object schema located at @paths.\/ssf\/streams\/.GET.parameters@ in the specification.
data SsfStreamsListParameters = SsfStreamsListParameters
  { -- | queryDelivery_method: Represents the parameter named \'delivery_method\'
    ssfStreamsListParametersQueryDeliveryMethod :: (GHC.Maybe.Maybe SsfStreamsListParametersQueryDeliveryMethod'),
    -- | queryEndpoint_url: Represents the parameter named \'endpoint_url\'
    ssfStreamsListParametersQueryEndpointUrl :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | queryOrdering: Represents the parameter named \'ordering\'
    --
    -- Which field to use when ordering the results.
    ssfStreamsListParametersQueryOrdering :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | queryPage: Represents the parameter named \'page\'
    --
    -- A page number within the paginated result set.
    ssfStreamsListParametersQueryPage :: (GHC.Maybe.Maybe GHC.Types.Int),
    -- | queryPage_size: Represents the parameter named \'page_size\'
    --
    -- Number of results to return per page.
    ssfStreamsListParametersQueryPageSize :: (GHC.Maybe.Maybe GHC.Types.Int),
    -- | queryProvider: Represents the parameter named \'provider\'
    ssfStreamsListParametersQueryProvider :: (GHC.Maybe.Maybe GHC.Types.Int),
    -- | querySearch: Represents the parameter named \'search\'
    --
    -- A search term.
    ssfStreamsListParametersQuerySearch :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON SsfStreamsListParameters where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryDelivery_method" Data.Aeson.Types.ToJSON..=)) (ssfStreamsListParametersQueryDeliveryMethod obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryEndpoint_url" Data.Aeson.Types.ToJSON..=)) (ssfStreamsListParametersQueryEndpointUrl obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryOrdering" Data.Aeson.Types.ToJSON..=)) (ssfStreamsListParametersQueryOrdering obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryPage" Data.Aeson.Types.ToJSON..=)) (ssfStreamsListParametersQueryPage obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryPage_size" Data.Aeson.Types.ToJSON..=)) (ssfStreamsListParametersQueryPageSize obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryProvider" Data.Aeson.Types.ToJSON..=)) (ssfStreamsListParametersQueryProvider obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("querySearch" Data.Aeson.Types.ToJSON..=)) (ssfStreamsListParametersQuerySearch obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryDelivery_method" Data.Aeson.Types.ToJSON..=)) (ssfStreamsListParametersQueryDeliveryMethod obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryEndpoint_url" Data.Aeson.Types.ToJSON..=)) (ssfStreamsListParametersQueryEndpointUrl obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryOrdering" Data.Aeson.Types.ToJSON..=)) (ssfStreamsListParametersQueryOrdering obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryPage" Data.Aeson.Types.ToJSON..=)) (ssfStreamsListParametersQueryPage obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryPage_size" Data.Aeson.Types.ToJSON..=)) (ssfStreamsListParametersQueryPageSize obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryProvider" Data.Aeson.Types.ToJSON..=)) (ssfStreamsListParametersQueryProvider obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("querySearch" Data.Aeson.Types.ToJSON..=)) (ssfStreamsListParametersQuerySearch obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON SsfStreamsListParameters where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "SsfStreamsListParameters" (\obj -> ((((((GHC.Base.pure SsfStreamsListParameters GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryDelivery_method")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryEndpoint_url")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryOrdering")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryPage")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryPage_size")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryProvider")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "querySearch"))

-- | Create a new 'SsfStreamsListParameters' with all required fields.
mkSsfStreamsListParameters :: SsfStreamsListParameters
mkSsfStreamsListParameters =
  SsfStreamsListParameters
    { ssfStreamsListParametersQueryDeliveryMethod = GHC.Maybe.Nothing,
      ssfStreamsListParametersQueryEndpointUrl = GHC.Maybe.Nothing,
      ssfStreamsListParametersQueryOrdering = GHC.Maybe.Nothing,
      ssfStreamsListParametersQueryPage = GHC.Maybe.Nothing,
      ssfStreamsListParametersQueryPageSize = GHC.Maybe.Nothing,
      ssfStreamsListParametersQueryProvider = GHC.Maybe.Nothing,
      ssfStreamsListParametersQuerySearch = GHC.Maybe.Nothing
    }

-- | Defines the enum schema located at @paths.\/ssf\/streams\/.GET.parameters.properties.queryDelivery_method@ in the specification.
--
-- Represents the parameter named \'delivery_method\'
data SsfStreamsListParametersQueryDeliveryMethod'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    SsfStreamsListParametersQueryDeliveryMethod'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    SsfStreamsListParametersQueryDeliveryMethod'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"https://schemas.openid.net/secevent/risc/delivery-method/poll"@
    SsfStreamsListParametersQueryDeliveryMethod'EnumHttps__Schemas'openid'netSeceventRiscDeliveryMethodPoll
  | -- | Represents the JSON value @"https://schemas.openid.net/secevent/risc/delivery-method/push"@
    SsfStreamsListParametersQueryDeliveryMethod'EnumHttps__Schemas'openid'netSeceventRiscDeliveryMethodPush
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON SsfStreamsListParametersQueryDeliveryMethod' where
  toJSON (SsfStreamsListParametersQueryDeliveryMethod'Other val) = val
  toJSON (SsfStreamsListParametersQueryDeliveryMethod'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (SsfStreamsListParametersQueryDeliveryMethod'EnumHttps__Schemas'openid'netSeceventRiscDeliveryMethodPoll) = "https://schemas.openid.net/secevent/risc/delivery-method/poll"
  toJSON (SsfStreamsListParametersQueryDeliveryMethod'EnumHttps__Schemas'openid'netSeceventRiscDeliveryMethodPush) = "https://schemas.openid.net/secevent/risc/delivery-method/push"

instance Data.Aeson.Types.FromJSON.FromJSON SsfStreamsListParametersQueryDeliveryMethod' where
  parseJSON val =
    GHC.Base.pure
      ( if
          | val GHC.Classes.== "https://schemas.openid.net/secevent/risc/delivery-method/poll" -> SsfStreamsListParametersQueryDeliveryMethod'EnumHttps__Schemas'openid'netSeceventRiscDeliveryMethodPoll
          | val GHC.Classes.== "https://schemas.openid.net/secevent/risc/delivery-method/push" -> SsfStreamsListParametersQueryDeliveryMethod'EnumHttps__Schemas'openid'netSeceventRiscDeliveryMethodPush
          | GHC.Base.otherwise -> SsfStreamsListParametersQueryDeliveryMethod'Other val
      )

-- | Represents a response of the operation 'ssfStreamsList'.
--
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'SsfStreamsListResponseError' is used.
data SsfStreamsListResponse
  = -- | Means either no matching case available or a parse error
    SsfStreamsListResponseError GHC.Base.String
  | SsfStreamsListResponse200 PaginatedSSFStreamList
  | SsfStreamsListResponse400 ValidationError
  | SsfStreamsListResponse403 GenericError
  deriving (GHC.Show.Show, GHC.Classes.Eq)
