{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the different functions to run the operation policiesReputationList
module AuthentikAPI.Operations.PoliciesReputationList where

import qualified AuthentikAPI.Common
import AuthentikAPI.Types
import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.ByteString as Data.ByteString.Internal.Type
import qualified Data.Either
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | > GET /policies/reputation/
--
-- Reputation Policy Viewset
policiesReputationList ::
  forall m.
  (AuthentikAPI.Common.MonadHTTP m) =>
  -- | Contains all available parameters of this operation (query and path parameters)
  PoliciesReputationListParameters ->
  -- | Monadic computation which returns the result of the operation
  AuthentikAPI.Common.ClientT m (Network.HTTP.Client.Types.Response PoliciesReputationListResponse)
policiesReputationList parameters =
  GHC.Base.fmap
    ( \response_0 ->
        GHC.Base.fmap
          ( Data.Either.either PoliciesReputationListResponseError GHC.Base.id
              GHC.Base.. ( \response body ->
                             if
                               | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                   PoliciesReputationListResponse200
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            PaginatedReputationPolicyList
                                                      )
                               | (\status_2 -> Network.HTTP.Types.Status.statusCode status_2 GHC.Classes.== 400) (Network.HTTP.Client.Types.responseStatus response) ->
                                   PoliciesReputationListResponse400
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            ValidationError
                                                      )
                               | (\status_3 -> Network.HTTP.Types.Status.statusCode status_3 GHC.Classes.== 403) (Network.HTTP.Client.Types.responseStatus response) ->
                                   PoliciesReputationListResponse403
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            GenericError
                                                      )
                               | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                         )
                response_0
          )
          response_0
    )
    ( AuthentikAPI.Common.doCallWithConfigurationM
        (Data.Text.toUpper GHC.Base.$ Data.Text.Internal.pack "GET")
        "/policies/reputation/"
        [ AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "check_ip") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> policiesReputationListParametersQueryCheckIp parameters) (Data.Text.Internal.pack "form") GHC.Types.False,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "check_username") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> policiesReputationListParametersQueryCheckUsername parameters) (Data.Text.Internal.pack "form") GHC.Types.False,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "created") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> policiesReputationListParametersQueryCreated parameters) (Data.Text.Internal.pack "form") GHC.Types.False,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "execution_logging") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> policiesReputationListParametersQueryExecutionLogging parameters) (Data.Text.Internal.pack "form") GHC.Types.False,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "last_updated") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> policiesReputationListParametersQueryLastUpdated parameters) (Data.Text.Internal.pack "form") GHC.Types.False,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "name") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> policiesReputationListParametersQueryName parameters) (Data.Text.Internal.pack "form") GHC.Types.False,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "ordering") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> policiesReputationListParametersQueryOrdering parameters) (Data.Text.Internal.pack "form") GHC.Types.False,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "page") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> policiesReputationListParametersQueryPage parameters) (Data.Text.Internal.pack "form") GHC.Types.False,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "page_size") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> policiesReputationListParametersQueryPageSize parameters) (Data.Text.Internal.pack "form") GHC.Types.False,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "policy_uuid") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> policiesReputationListParametersQueryPolicyUuid parameters) (Data.Text.Internal.pack "form") GHC.Types.False,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "search") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> policiesReputationListParametersQuerySearch parameters) (Data.Text.Internal.pack "form") GHC.Types.False,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "threshold") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> policiesReputationListParametersQueryThreshold parameters) (Data.Text.Internal.pack "form") GHC.Types.False
        ]
    )

-- | Defines the object schema located at @paths.\/policies\/reputation\/.GET.parameters@ in the specification.
data PoliciesReputationListParameters = PoliciesReputationListParameters
  { -- | queryCheck_ip: Represents the parameter named \'check_ip\'
    policiesReputationListParametersQueryCheckIp :: (GHC.Maybe.Maybe GHC.Types.Bool),
    -- | queryCheck_username: Represents the parameter named \'check_username\'
    policiesReputationListParametersQueryCheckUsername :: (GHC.Maybe.Maybe GHC.Types.Bool),
    -- | queryCreated: Represents the parameter named \'created\'
    policiesReputationListParametersQueryCreated :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | queryExecution_logging: Represents the parameter named \'execution_logging\'
    policiesReputationListParametersQueryExecutionLogging :: (GHC.Maybe.Maybe GHC.Types.Bool),
    -- | queryLast_updated: Represents the parameter named \'last_updated\'
    policiesReputationListParametersQueryLastUpdated :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | queryName: Represents the parameter named \'name\'
    policiesReputationListParametersQueryName :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | queryOrdering: Represents the parameter named \'ordering\'
    --
    -- Which field to use when ordering the results.
    policiesReputationListParametersQueryOrdering :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | queryPage: Represents the parameter named \'page\'
    --
    -- A page number within the paginated result set.
    policiesReputationListParametersQueryPage :: (GHC.Maybe.Maybe GHC.Types.Int),
    -- | queryPage_size: Represents the parameter named \'page_size\'
    --
    -- Number of results to return per page.
    policiesReputationListParametersQueryPageSize :: (GHC.Maybe.Maybe GHC.Types.Int),
    -- | queryPolicy_uuid: Represents the parameter named \'policy_uuid\'
    policiesReputationListParametersQueryPolicyUuid :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | querySearch: Represents the parameter named \'search\'
    --
    -- A search term.
    policiesReputationListParametersQuerySearch :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | queryThreshold: Represents the parameter named \'threshold\'
    policiesReputationListParametersQueryThreshold :: (GHC.Maybe.Maybe GHC.Types.Int)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PoliciesReputationListParameters where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryCheck_ip" Data.Aeson.Types.ToJSON..=)) (policiesReputationListParametersQueryCheckIp obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryCheck_username" Data.Aeson.Types.ToJSON..=)) (policiesReputationListParametersQueryCheckUsername obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryCreated" Data.Aeson.Types.ToJSON..=)) (policiesReputationListParametersQueryCreated obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryExecution_logging" Data.Aeson.Types.ToJSON..=)) (policiesReputationListParametersQueryExecutionLogging obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryLast_updated" Data.Aeson.Types.ToJSON..=)) (policiesReputationListParametersQueryLastUpdated obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryName" Data.Aeson.Types.ToJSON..=)) (policiesReputationListParametersQueryName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryOrdering" Data.Aeson.Types.ToJSON..=)) (policiesReputationListParametersQueryOrdering obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryPage" Data.Aeson.Types.ToJSON..=)) (policiesReputationListParametersQueryPage obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryPage_size" Data.Aeson.Types.ToJSON..=)) (policiesReputationListParametersQueryPageSize obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryPolicy_uuid" Data.Aeson.Types.ToJSON..=)) (policiesReputationListParametersQueryPolicyUuid obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("querySearch" Data.Aeson.Types.ToJSON..=)) (policiesReputationListParametersQuerySearch obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryThreshold" Data.Aeson.Types.ToJSON..=)) (policiesReputationListParametersQueryThreshold obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryCheck_ip" Data.Aeson.Types.ToJSON..=)) (policiesReputationListParametersQueryCheckIp obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryCheck_username" Data.Aeson.Types.ToJSON..=)) (policiesReputationListParametersQueryCheckUsername obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryCreated" Data.Aeson.Types.ToJSON..=)) (policiesReputationListParametersQueryCreated obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryExecution_logging" Data.Aeson.Types.ToJSON..=)) (policiesReputationListParametersQueryExecutionLogging obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryLast_updated" Data.Aeson.Types.ToJSON..=)) (policiesReputationListParametersQueryLastUpdated obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryName" Data.Aeson.Types.ToJSON..=)) (policiesReputationListParametersQueryName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryOrdering" Data.Aeson.Types.ToJSON..=)) (policiesReputationListParametersQueryOrdering obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryPage" Data.Aeson.Types.ToJSON..=)) (policiesReputationListParametersQueryPage obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryPage_size" Data.Aeson.Types.ToJSON..=)) (policiesReputationListParametersQueryPageSize obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryPolicy_uuid" Data.Aeson.Types.ToJSON..=)) (policiesReputationListParametersQueryPolicyUuid obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("querySearch" Data.Aeson.Types.ToJSON..=)) (policiesReputationListParametersQuerySearch obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryThreshold" Data.Aeson.Types.ToJSON..=)) (policiesReputationListParametersQueryThreshold obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PoliciesReputationListParameters where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PoliciesReputationListParameters" (\obj -> (((((((((((GHC.Base.pure PoliciesReputationListParameters GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryCheck_ip")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryCheck_username")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryCreated")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryExecution_logging")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryLast_updated")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryName")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryOrdering")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryPage")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryPage_size")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryPolicy_uuid")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "querySearch")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryThreshold"))

-- | Create a new 'PoliciesReputationListParameters' with all required fields.
mkPoliciesReputationListParameters :: PoliciesReputationListParameters
mkPoliciesReputationListParameters =
  PoliciesReputationListParameters
    { policiesReputationListParametersQueryCheckIp = GHC.Maybe.Nothing,
      policiesReputationListParametersQueryCheckUsername = GHC.Maybe.Nothing,
      policiesReputationListParametersQueryCreated = GHC.Maybe.Nothing,
      policiesReputationListParametersQueryExecutionLogging = GHC.Maybe.Nothing,
      policiesReputationListParametersQueryLastUpdated = GHC.Maybe.Nothing,
      policiesReputationListParametersQueryName = GHC.Maybe.Nothing,
      policiesReputationListParametersQueryOrdering = GHC.Maybe.Nothing,
      policiesReputationListParametersQueryPage = GHC.Maybe.Nothing,
      policiesReputationListParametersQueryPageSize = GHC.Maybe.Nothing,
      policiesReputationListParametersQueryPolicyUuid = GHC.Maybe.Nothing,
      policiesReputationListParametersQuerySearch = GHC.Maybe.Nothing,
      policiesReputationListParametersQueryThreshold = GHC.Maybe.Nothing
    }

-- | Represents a response of the operation 'policiesReputationList'.
--
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'PoliciesReputationListResponseError' is used.
data PoliciesReputationListResponse
  = -- | Means either no matching case available or a parse error
    PoliciesReputationListResponseError GHC.Base.String
  | PoliciesReputationListResponse200 PaginatedReputationPolicyList
  | PoliciesReputationListResponse400 ValidationError
  | PoliciesReputationListResponse403 GenericError
  deriving (GHC.Show.Show, GHC.Classes.Eq)
