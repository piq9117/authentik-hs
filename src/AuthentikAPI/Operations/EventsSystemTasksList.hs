{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the different functions to run the operation eventsSystemTasksList
module AuthentikAPI.Operations.EventsSystemTasksList where

import qualified AuthentikAPI.Common
import AuthentikAPI.Types
import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.ByteString as Data.ByteString.Internal.Type
import qualified Data.Either
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | > GET /events/system_tasks/
--
-- Read-only view set that returns all background tasks
eventsSystemTasksList ::
  forall m.
  (AuthentikAPI.Common.MonadHTTP m) =>
  -- | Contains all available parameters of this operation (query and path parameters)
  EventsSystemTasksListParameters ->
  -- | Monadic computation which returns the result of the operation
  AuthentikAPI.Common.ClientT m (Network.HTTP.Client.Types.Response EventsSystemTasksListResponse)
eventsSystemTasksList parameters =
  GHC.Base.fmap
    ( \response_0 ->
        GHC.Base.fmap
          ( Data.Either.either EventsSystemTasksListResponseError GHC.Base.id
              GHC.Base.. ( \response body ->
                             if
                               | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                   EventsSystemTasksListResponse200
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            PaginatedSystemTaskList
                                                      )
                               | (\status_2 -> Network.HTTP.Types.Status.statusCode status_2 GHC.Classes.== 400) (Network.HTTP.Client.Types.responseStatus response) ->
                                   EventsSystemTasksListResponse400
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            ValidationError
                                                      )
                               | (\status_3 -> Network.HTTP.Types.Status.statusCode status_3 GHC.Classes.== 403) (Network.HTTP.Client.Types.responseStatus response) ->
                                   EventsSystemTasksListResponse403
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            GenericError
                                                      )
                               | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                         )
                response_0
          )
          response_0
    )
    ( AuthentikAPI.Common.doCallWithConfigurationM
        (Data.Text.toUpper GHC.Base.$ Data.Text.Internal.pack "GET")
        "/events/system_tasks/"
        [ AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "name") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> eventsSystemTasksListParametersQueryName parameters) (Data.Text.Internal.pack "form") GHC.Types.False,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "ordering") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> eventsSystemTasksListParametersQueryOrdering parameters) (Data.Text.Internal.pack "form") GHC.Types.False,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "page") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> eventsSystemTasksListParametersQueryPage parameters) (Data.Text.Internal.pack "form") GHC.Types.False,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "page_size") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> eventsSystemTasksListParametersQueryPageSize parameters) (Data.Text.Internal.pack "form") GHC.Types.False,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "search") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> eventsSystemTasksListParametersQuerySearch parameters) (Data.Text.Internal.pack "form") GHC.Types.False,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "status") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> eventsSystemTasksListParametersQueryStatus parameters) (Data.Text.Internal.pack "form") GHC.Types.False,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "uid") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> eventsSystemTasksListParametersQueryUid parameters) (Data.Text.Internal.pack "form") GHC.Types.False
        ]
    )

-- | Defines the object schema located at @paths.\/events\/system_tasks\/.GET.parameters@ in the specification.
data EventsSystemTasksListParameters = EventsSystemTasksListParameters
  { -- | queryName: Represents the parameter named \'name\'
    eventsSystemTasksListParametersQueryName :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | queryOrdering: Represents the parameter named \'ordering\'
    --
    -- Which field to use when ordering the results.
    eventsSystemTasksListParametersQueryOrdering :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | queryPage: Represents the parameter named \'page\'
    --
    -- A page number within the paginated result set.
    eventsSystemTasksListParametersQueryPage :: (GHC.Maybe.Maybe GHC.Types.Int),
    -- | queryPage_size: Represents the parameter named \'page_size\'
    --
    -- Number of results to return per page.
    eventsSystemTasksListParametersQueryPageSize :: (GHC.Maybe.Maybe GHC.Types.Int),
    -- | querySearch: Represents the parameter named \'search\'
    --
    -- A search term.
    eventsSystemTasksListParametersQuerySearch :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | queryStatus: Represents the parameter named \'status\'
    eventsSystemTasksListParametersQueryStatus :: (GHC.Maybe.Maybe EventsSystemTasksListParametersQueryStatus'),
    -- | queryUid: Represents the parameter named \'uid\'
    eventsSystemTasksListParametersQueryUid :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON EventsSystemTasksListParameters where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryName" Data.Aeson.Types.ToJSON..=)) (eventsSystemTasksListParametersQueryName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryOrdering" Data.Aeson.Types.ToJSON..=)) (eventsSystemTasksListParametersQueryOrdering obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryPage" Data.Aeson.Types.ToJSON..=)) (eventsSystemTasksListParametersQueryPage obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryPage_size" Data.Aeson.Types.ToJSON..=)) (eventsSystemTasksListParametersQueryPageSize obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("querySearch" Data.Aeson.Types.ToJSON..=)) (eventsSystemTasksListParametersQuerySearch obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryStatus" Data.Aeson.Types.ToJSON..=)) (eventsSystemTasksListParametersQueryStatus obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryUid" Data.Aeson.Types.ToJSON..=)) (eventsSystemTasksListParametersQueryUid obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryName" Data.Aeson.Types.ToJSON..=)) (eventsSystemTasksListParametersQueryName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryOrdering" Data.Aeson.Types.ToJSON..=)) (eventsSystemTasksListParametersQueryOrdering obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryPage" Data.Aeson.Types.ToJSON..=)) (eventsSystemTasksListParametersQueryPage obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryPage_size" Data.Aeson.Types.ToJSON..=)) (eventsSystemTasksListParametersQueryPageSize obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("querySearch" Data.Aeson.Types.ToJSON..=)) (eventsSystemTasksListParametersQuerySearch obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryStatus" Data.Aeson.Types.ToJSON..=)) (eventsSystemTasksListParametersQueryStatus obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryUid" Data.Aeson.Types.ToJSON..=)) (eventsSystemTasksListParametersQueryUid obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON EventsSystemTasksListParameters where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "EventsSystemTasksListParameters" (\obj -> ((((((GHC.Base.pure EventsSystemTasksListParameters GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryName")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryOrdering")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryPage")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryPage_size")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "querySearch")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryStatus")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryUid"))

-- | Create a new 'EventsSystemTasksListParameters' with all required fields.
mkEventsSystemTasksListParameters :: EventsSystemTasksListParameters
mkEventsSystemTasksListParameters =
  EventsSystemTasksListParameters
    { eventsSystemTasksListParametersQueryName = GHC.Maybe.Nothing,
      eventsSystemTasksListParametersQueryOrdering = GHC.Maybe.Nothing,
      eventsSystemTasksListParametersQueryPage = GHC.Maybe.Nothing,
      eventsSystemTasksListParametersQueryPageSize = GHC.Maybe.Nothing,
      eventsSystemTasksListParametersQuerySearch = GHC.Maybe.Nothing,
      eventsSystemTasksListParametersQueryStatus = GHC.Maybe.Nothing,
      eventsSystemTasksListParametersQueryUid = GHC.Maybe.Nothing
    }

-- | Defines the enum schema located at @paths.\/events\/system_tasks\/.GET.parameters.properties.queryStatus@ in the specification.
--
-- Represents the parameter named \'status\'
data EventsSystemTasksListParametersQueryStatus'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    EventsSystemTasksListParametersQueryStatus'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    EventsSystemTasksListParametersQueryStatus'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"error"@
    EventsSystemTasksListParametersQueryStatus'EnumError
  | -- | Represents the JSON value @"successful"@
    EventsSystemTasksListParametersQueryStatus'EnumSuccessful
  | -- | Represents the JSON value @"unknown"@
    EventsSystemTasksListParametersQueryStatus'EnumUnknown
  | -- | Represents the JSON value @"warning"@
    EventsSystemTasksListParametersQueryStatus'EnumWarning
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON EventsSystemTasksListParametersQueryStatus' where
  toJSON (EventsSystemTasksListParametersQueryStatus'Other val) = val
  toJSON (EventsSystemTasksListParametersQueryStatus'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (EventsSystemTasksListParametersQueryStatus'EnumError) = "error"
  toJSON (EventsSystemTasksListParametersQueryStatus'EnumSuccessful) = "successful"
  toJSON (EventsSystemTasksListParametersQueryStatus'EnumUnknown) = "unknown"
  toJSON (EventsSystemTasksListParametersQueryStatus'EnumWarning) = "warning"

instance Data.Aeson.Types.FromJSON.FromJSON EventsSystemTasksListParametersQueryStatus' where
  parseJSON val =
    GHC.Base.pure
      ( if
          | val GHC.Classes.== "error" -> EventsSystemTasksListParametersQueryStatus'EnumError
          | val GHC.Classes.== "successful" -> EventsSystemTasksListParametersQueryStatus'EnumSuccessful
          | val GHC.Classes.== "unknown" -> EventsSystemTasksListParametersQueryStatus'EnumUnknown
          | val GHC.Classes.== "warning" -> EventsSystemTasksListParametersQueryStatus'EnumWarning
          | GHC.Base.otherwise -> EventsSystemTasksListParametersQueryStatus'Other val
      )

-- | Represents a response of the operation 'eventsSystemTasksList'.
--
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'EventsSystemTasksListResponseError' is used.
data EventsSystemTasksListResponse
  = -- | Means either no matching case available or a parse error
    EventsSystemTasksListResponseError GHC.Base.String
  | EventsSystemTasksListResponse200 PaginatedSystemTaskList
  | EventsSystemTasksListResponse400 ValidationError
  | EventsSystemTasksListResponse403 GenericError
  deriving (GHC.Show.Show, GHC.Classes.Eq)
