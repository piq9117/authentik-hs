{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the different functions to run the operation schemaRetrieve
module AuthentikAPI.Operations.SchemaRetrieve where

import qualified AuthentikAPI.Common
import AuthentikAPI.Types
import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.ByteString as Data.ByteString.Internal.Type
import qualified Data.Either
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | > GET /schema/
--
-- OpenApi3 schema for this API. Format can be selected via content negotiation.
--
-- - YAML: application\/vnd.oai.openapi
-- - JSON: application\/vnd.oai.openapi+json
schemaRetrieve ::
  forall m.
  (AuthentikAPI.Common.MonadHTTP m) =>
  -- | Contains all available parameters of this operation (query and path parameters)
  SchemaRetrieveParameters ->
  -- | Monadic computation which returns the result of the operation
  AuthentikAPI.Common.ClientT m (Network.HTTP.Client.Types.Response SchemaRetrieveResponse)
schemaRetrieve parameters =
  GHC.Base.fmap
    ( \response_0 ->
        GHC.Base.fmap
          ( Data.Either.either SchemaRetrieveResponseError GHC.Base.id
              GHC.Base.. ( \response body ->
                             if
                               | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                   SchemaRetrieveResponse200
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            Data.Aeson.Types.Internal.Object
                                                      )
                               | (\status_2 -> Network.HTTP.Types.Status.statusCode status_2 GHC.Classes.== 400) (Network.HTTP.Client.Types.responseStatus response) ->
                                   SchemaRetrieveResponse400
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            ValidationError
                                                      )
                               | (\status_3 -> Network.HTTP.Types.Status.statusCode status_3 GHC.Classes.== 403) (Network.HTTP.Client.Types.responseStatus response) ->
                                   SchemaRetrieveResponse403
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            GenericError
                                                      )
                               | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                         )
                response_0
          )
          response_0
    )
    ( AuthentikAPI.Common.doCallWithConfigurationM
        (Data.Text.toUpper GHC.Base.$ Data.Text.Internal.pack "GET")
        "/schema/"
        [ AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "format") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> schemaRetrieveParametersQueryFormat parameters) (Data.Text.Internal.pack "form") GHC.Types.False,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "lang") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> schemaRetrieveParametersQueryLang parameters) (Data.Text.Internal.pack "form") GHC.Types.False
        ]
    )

-- | Defines the object schema located at @paths.\/schema\/.GET.parameters@ in the specification.
data SchemaRetrieveParameters = SchemaRetrieveParameters
  { -- | queryFormat: Represents the parameter named \'format\'
    schemaRetrieveParametersQueryFormat :: (GHC.Maybe.Maybe SchemaRetrieveParametersQueryFormat'),
    -- | queryLang: Represents the parameter named \'lang\'
    schemaRetrieveParametersQueryLang :: (GHC.Maybe.Maybe SchemaRetrieveParametersQueryLang')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON SchemaRetrieveParameters where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryFormat" Data.Aeson.Types.ToJSON..=)) (schemaRetrieveParametersQueryFormat obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryLang" Data.Aeson.Types.ToJSON..=)) (schemaRetrieveParametersQueryLang obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryFormat" Data.Aeson.Types.ToJSON..=)) (schemaRetrieveParametersQueryFormat obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryLang" Data.Aeson.Types.ToJSON..=)) (schemaRetrieveParametersQueryLang obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON SchemaRetrieveParameters where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "SchemaRetrieveParameters" (\obj -> (GHC.Base.pure SchemaRetrieveParameters GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryFormat")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryLang"))

-- | Create a new 'SchemaRetrieveParameters' with all required fields.
mkSchemaRetrieveParameters :: SchemaRetrieveParameters
mkSchemaRetrieveParameters =
  SchemaRetrieveParameters
    { schemaRetrieveParametersQueryFormat = GHC.Maybe.Nothing,
      schemaRetrieveParametersQueryLang = GHC.Maybe.Nothing
    }

-- | Defines the enum schema located at @paths.\/schema\/.GET.parameters.properties.queryFormat@ in the specification.
--
-- Represents the parameter named \'format\'
data SchemaRetrieveParametersQueryFormat'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    SchemaRetrieveParametersQueryFormat'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    SchemaRetrieveParametersQueryFormat'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"json"@
    SchemaRetrieveParametersQueryFormat'EnumJson
  | -- | Represents the JSON value @"yaml"@
    SchemaRetrieveParametersQueryFormat'EnumYaml
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON SchemaRetrieveParametersQueryFormat' where
  toJSON (SchemaRetrieveParametersQueryFormat'Other val) = val
  toJSON (SchemaRetrieveParametersQueryFormat'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (SchemaRetrieveParametersQueryFormat'EnumJson) = "json"
  toJSON (SchemaRetrieveParametersQueryFormat'EnumYaml) = "yaml"

instance Data.Aeson.Types.FromJSON.FromJSON SchemaRetrieveParametersQueryFormat' where
  parseJSON val =
    GHC.Base.pure
      ( if
          | val GHC.Classes.== "json" -> SchemaRetrieveParametersQueryFormat'EnumJson
          | val GHC.Classes.== "yaml" -> SchemaRetrieveParametersQueryFormat'EnumYaml
          | GHC.Base.otherwise -> SchemaRetrieveParametersQueryFormat'Other val
      )

-- | Defines the enum schema located at @paths.\/schema\/.GET.parameters.properties.queryLang@ in the specification.
--
-- Represents the parameter named \'lang\'
data SchemaRetrieveParametersQueryLang'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    SchemaRetrieveParametersQueryLang'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    SchemaRetrieveParametersQueryLang'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"af"@
    SchemaRetrieveParametersQueryLang'EnumAf
  | -- | Represents the JSON value @"ar"@
    SchemaRetrieveParametersQueryLang'EnumAr
  | -- | Represents the JSON value @"ar-dz"@
    SchemaRetrieveParametersQueryLang'EnumArDz
  | -- | Represents the JSON value @"ast"@
    SchemaRetrieveParametersQueryLang'EnumAst
  | -- | Represents the JSON value @"az"@
    SchemaRetrieveParametersQueryLang'EnumAz
  | -- | Represents the JSON value @"be"@
    SchemaRetrieveParametersQueryLang'EnumBe
  | -- | Represents the JSON value @"bg"@
    SchemaRetrieveParametersQueryLang'EnumBg
  | -- | Represents the JSON value @"bn"@
    SchemaRetrieveParametersQueryLang'EnumBn
  | -- | Represents the JSON value @"br"@
    SchemaRetrieveParametersQueryLang'EnumBr
  | -- | Represents the JSON value @"bs"@
    SchemaRetrieveParametersQueryLang'EnumBs
  | -- | Represents the JSON value @"ca"@
    SchemaRetrieveParametersQueryLang'EnumCa
  | -- | Represents the JSON value @"ckb"@
    SchemaRetrieveParametersQueryLang'EnumCkb
  | -- | Represents the JSON value @"cs"@
    SchemaRetrieveParametersQueryLang'EnumCs
  | -- | Represents the JSON value @"cy"@
    SchemaRetrieveParametersQueryLang'EnumCy
  | -- | Represents the JSON value @"da"@
    SchemaRetrieveParametersQueryLang'EnumDa
  | -- | Represents the JSON value @"de"@
    SchemaRetrieveParametersQueryLang'EnumDe
  | -- | Represents the JSON value @"dsb"@
    SchemaRetrieveParametersQueryLang'EnumDsb
  | -- | Represents the JSON value @"el"@
    SchemaRetrieveParametersQueryLang'EnumEl
  | -- | Represents the JSON value @"en"@
    SchemaRetrieveParametersQueryLang'EnumEn
  | -- | Represents the JSON value @"en-au"@
    SchemaRetrieveParametersQueryLang'EnumEnAu
  | -- | Represents the JSON value @"en-gb"@
    SchemaRetrieveParametersQueryLang'EnumEnGb
  | -- | Represents the JSON value @"eo"@
    SchemaRetrieveParametersQueryLang'EnumEo
  | -- | Represents the JSON value @"es"@
    SchemaRetrieveParametersQueryLang'EnumEs
  | -- | Represents the JSON value @"es-ar"@
    SchemaRetrieveParametersQueryLang'EnumEsAr
  | -- | Represents the JSON value @"es-co"@
    SchemaRetrieveParametersQueryLang'EnumEsCo
  | -- | Represents the JSON value @"es-mx"@
    SchemaRetrieveParametersQueryLang'EnumEsMx
  | -- | Represents the JSON value @"es-ni"@
    SchemaRetrieveParametersQueryLang'EnumEsNi
  | -- | Represents the JSON value @"es-ve"@
    SchemaRetrieveParametersQueryLang'EnumEsVe
  | -- | Represents the JSON value @"et"@
    SchemaRetrieveParametersQueryLang'EnumEt
  | -- | Represents the JSON value @"eu"@
    SchemaRetrieveParametersQueryLang'EnumEu
  | -- | Represents the JSON value @"fa"@
    SchemaRetrieveParametersQueryLang'EnumFa
  | -- | Represents the JSON value @"fi"@
    SchemaRetrieveParametersQueryLang'EnumFi
  | -- | Represents the JSON value @"fr"@
    SchemaRetrieveParametersQueryLang'EnumFr
  | -- | Represents the JSON value @"fy"@
    SchemaRetrieveParametersQueryLang'EnumFy
  | -- | Represents the JSON value @"ga"@
    SchemaRetrieveParametersQueryLang'EnumGa
  | -- | Represents the JSON value @"gd"@
    SchemaRetrieveParametersQueryLang'EnumGd
  | -- | Represents the JSON value @"gl"@
    SchemaRetrieveParametersQueryLang'EnumGl
  | -- | Represents the JSON value @"he"@
    SchemaRetrieveParametersQueryLang'EnumHe
  | -- | Represents the JSON value @"hi"@
    SchemaRetrieveParametersQueryLang'EnumHi
  | -- | Represents the JSON value @"hr"@
    SchemaRetrieveParametersQueryLang'EnumHr
  | -- | Represents the JSON value @"hsb"@
    SchemaRetrieveParametersQueryLang'EnumHsb
  | -- | Represents the JSON value @"hu"@
    SchemaRetrieveParametersQueryLang'EnumHu
  | -- | Represents the JSON value @"hy"@
    SchemaRetrieveParametersQueryLang'EnumHy
  | -- | Represents the JSON value @"ia"@
    SchemaRetrieveParametersQueryLang'EnumIa
  | -- | Represents the JSON value @"id"@
    SchemaRetrieveParametersQueryLang'EnumId
  | -- | Represents the JSON value @"ig"@
    SchemaRetrieveParametersQueryLang'EnumIg
  | -- | Represents the JSON value @"io"@
    SchemaRetrieveParametersQueryLang'EnumIo
  | -- | Represents the JSON value @"is"@
    SchemaRetrieveParametersQueryLang'EnumIs
  | -- | Represents the JSON value @"it"@
    SchemaRetrieveParametersQueryLang'EnumIt
  | -- | Represents the JSON value @"ja"@
    SchemaRetrieveParametersQueryLang'EnumJa
  | -- | Represents the JSON value @"ka"@
    SchemaRetrieveParametersQueryLang'EnumKa
  | -- | Represents the JSON value @"kab"@
    SchemaRetrieveParametersQueryLang'EnumKab
  | -- | Represents the JSON value @"kk"@
    SchemaRetrieveParametersQueryLang'EnumKk
  | -- | Represents the JSON value @"km"@
    SchemaRetrieveParametersQueryLang'EnumKm
  | -- | Represents the JSON value @"kn"@
    SchemaRetrieveParametersQueryLang'EnumKn
  | -- | Represents the JSON value @"ko"@
    SchemaRetrieveParametersQueryLang'EnumKo
  | -- | Represents the JSON value @"ky"@
    SchemaRetrieveParametersQueryLang'EnumKy
  | -- | Represents the JSON value @"lb"@
    SchemaRetrieveParametersQueryLang'EnumLb
  | -- | Represents the JSON value @"lt"@
    SchemaRetrieveParametersQueryLang'EnumLt
  | -- | Represents the JSON value @"lv"@
    SchemaRetrieveParametersQueryLang'EnumLv
  | -- | Represents the JSON value @"mk"@
    SchemaRetrieveParametersQueryLang'EnumMk
  | -- | Represents the JSON value @"ml"@
    SchemaRetrieveParametersQueryLang'EnumMl
  | -- | Represents the JSON value @"mn"@
    SchemaRetrieveParametersQueryLang'EnumMn
  | -- | Represents the JSON value @"mr"@
    SchemaRetrieveParametersQueryLang'EnumMr
  | -- | Represents the JSON value @"ms"@
    SchemaRetrieveParametersQueryLang'EnumMs
  | -- | Represents the JSON value @"my"@
    SchemaRetrieveParametersQueryLang'EnumMy
  | -- | Represents the JSON value @"nb"@
    SchemaRetrieveParametersQueryLang'EnumNb
  | -- | Represents the JSON value @"ne"@
    SchemaRetrieveParametersQueryLang'EnumNe
  | -- | Represents the JSON value @"nl"@
    SchemaRetrieveParametersQueryLang'EnumNl
  | -- | Represents the JSON value @"nn"@
    SchemaRetrieveParametersQueryLang'EnumNn
  | -- | Represents the JSON value @"os"@
    SchemaRetrieveParametersQueryLang'EnumOs
  | -- | Represents the JSON value @"pa"@
    SchemaRetrieveParametersQueryLang'EnumPa
  | -- | Represents the JSON value @"pl"@
    SchemaRetrieveParametersQueryLang'EnumPl
  | -- | Represents the JSON value @"pt"@
    SchemaRetrieveParametersQueryLang'EnumPt
  | -- | Represents the JSON value @"pt-br"@
    SchemaRetrieveParametersQueryLang'EnumPtBr
  | -- | Represents the JSON value @"ro"@
    SchemaRetrieveParametersQueryLang'EnumRo
  | -- | Represents the JSON value @"ru"@
    SchemaRetrieveParametersQueryLang'EnumRu
  | -- | Represents the JSON value @"sk"@
    SchemaRetrieveParametersQueryLang'EnumSk
  | -- | Represents the JSON value @"sl"@
    SchemaRetrieveParametersQueryLang'EnumSl
  | -- | Represents the JSON value @"sq"@
    SchemaRetrieveParametersQueryLang'EnumSq
  | -- | Represents the JSON value @"sr"@
    SchemaRetrieveParametersQueryLang'EnumSr
  | -- | Represents the JSON value @"sr-latn"@
    SchemaRetrieveParametersQueryLang'EnumSrLatn
  | -- | Represents the JSON value @"sv"@
    SchemaRetrieveParametersQueryLang'EnumSv
  | -- | Represents the JSON value @"sw"@
    SchemaRetrieveParametersQueryLang'EnumSw
  | -- | Represents the JSON value @"ta"@
    SchemaRetrieveParametersQueryLang'EnumTa
  | -- | Represents the JSON value @"te"@
    SchemaRetrieveParametersQueryLang'EnumTe
  | -- | Represents the JSON value @"tg"@
    SchemaRetrieveParametersQueryLang'EnumTg
  | -- | Represents the JSON value @"th"@
    SchemaRetrieveParametersQueryLang'EnumTh
  | -- | Represents the JSON value @"tk"@
    SchemaRetrieveParametersQueryLang'EnumTk
  | -- | Represents the JSON value @"tr"@
    SchemaRetrieveParametersQueryLang'EnumTr
  | -- | Represents the JSON value @"tt"@
    SchemaRetrieveParametersQueryLang'EnumTt
  | -- | Represents the JSON value @"udm"@
    SchemaRetrieveParametersQueryLang'EnumUdm
  | -- | Represents the JSON value @"ug"@
    SchemaRetrieveParametersQueryLang'EnumUg
  | -- | Represents the JSON value @"uk"@
    SchemaRetrieveParametersQueryLang'EnumUk
  | -- | Represents the JSON value @"ur"@
    SchemaRetrieveParametersQueryLang'EnumUr
  | -- | Represents the JSON value @"uz"@
    SchemaRetrieveParametersQueryLang'EnumUz
  | -- | Represents the JSON value @"vi"@
    SchemaRetrieveParametersQueryLang'EnumVi
  | -- | Represents the JSON value @"zh-hans"@
    SchemaRetrieveParametersQueryLang'EnumZhHans
  | -- | Represents the JSON value @"zh-hant"@
    SchemaRetrieveParametersQueryLang'EnumZhHant
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON SchemaRetrieveParametersQueryLang' where
  toJSON (SchemaRetrieveParametersQueryLang'Other val) = val
  toJSON (SchemaRetrieveParametersQueryLang'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (SchemaRetrieveParametersQueryLang'EnumAf) = "af"
  toJSON (SchemaRetrieveParametersQueryLang'EnumAr) = "ar"
  toJSON (SchemaRetrieveParametersQueryLang'EnumArDz) = "ar-dz"
  toJSON (SchemaRetrieveParametersQueryLang'EnumAst) = "ast"
  toJSON (SchemaRetrieveParametersQueryLang'EnumAz) = "az"
  toJSON (SchemaRetrieveParametersQueryLang'EnumBe) = "be"
  toJSON (SchemaRetrieveParametersQueryLang'EnumBg) = "bg"
  toJSON (SchemaRetrieveParametersQueryLang'EnumBn) = "bn"
  toJSON (SchemaRetrieveParametersQueryLang'EnumBr) = "br"
  toJSON (SchemaRetrieveParametersQueryLang'EnumBs) = "bs"
  toJSON (SchemaRetrieveParametersQueryLang'EnumCa) = "ca"
  toJSON (SchemaRetrieveParametersQueryLang'EnumCkb) = "ckb"
  toJSON (SchemaRetrieveParametersQueryLang'EnumCs) = "cs"
  toJSON (SchemaRetrieveParametersQueryLang'EnumCy) = "cy"
  toJSON (SchemaRetrieveParametersQueryLang'EnumDa) = "da"
  toJSON (SchemaRetrieveParametersQueryLang'EnumDe) = "de"
  toJSON (SchemaRetrieveParametersQueryLang'EnumDsb) = "dsb"
  toJSON (SchemaRetrieveParametersQueryLang'EnumEl) = "el"
  toJSON (SchemaRetrieveParametersQueryLang'EnumEn) = "en"
  toJSON (SchemaRetrieveParametersQueryLang'EnumEnAu) = "en-au"
  toJSON (SchemaRetrieveParametersQueryLang'EnumEnGb) = "en-gb"
  toJSON (SchemaRetrieveParametersQueryLang'EnumEo) = "eo"
  toJSON (SchemaRetrieveParametersQueryLang'EnumEs) = "es"
  toJSON (SchemaRetrieveParametersQueryLang'EnumEsAr) = "es-ar"
  toJSON (SchemaRetrieveParametersQueryLang'EnumEsCo) = "es-co"
  toJSON (SchemaRetrieveParametersQueryLang'EnumEsMx) = "es-mx"
  toJSON (SchemaRetrieveParametersQueryLang'EnumEsNi) = "es-ni"
  toJSON (SchemaRetrieveParametersQueryLang'EnumEsVe) = "es-ve"
  toJSON (SchemaRetrieveParametersQueryLang'EnumEt) = "et"
  toJSON (SchemaRetrieveParametersQueryLang'EnumEu) = "eu"
  toJSON (SchemaRetrieveParametersQueryLang'EnumFa) = "fa"
  toJSON (SchemaRetrieveParametersQueryLang'EnumFi) = "fi"
  toJSON (SchemaRetrieveParametersQueryLang'EnumFr) = "fr"
  toJSON (SchemaRetrieveParametersQueryLang'EnumFy) = "fy"
  toJSON (SchemaRetrieveParametersQueryLang'EnumGa) = "ga"
  toJSON (SchemaRetrieveParametersQueryLang'EnumGd) = "gd"
  toJSON (SchemaRetrieveParametersQueryLang'EnumGl) = "gl"
  toJSON (SchemaRetrieveParametersQueryLang'EnumHe) = "he"
  toJSON (SchemaRetrieveParametersQueryLang'EnumHi) = "hi"
  toJSON (SchemaRetrieveParametersQueryLang'EnumHr) = "hr"
  toJSON (SchemaRetrieveParametersQueryLang'EnumHsb) = "hsb"
  toJSON (SchemaRetrieveParametersQueryLang'EnumHu) = "hu"
  toJSON (SchemaRetrieveParametersQueryLang'EnumHy) = "hy"
  toJSON (SchemaRetrieveParametersQueryLang'EnumIa) = "ia"
  toJSON (SchemaRetrieveParametersQueryLang'EnumId) = "id"
  toJSON (SchemaRetrieveParametersQueryLang'EnumIg) = "ig"
  toJSON (SchemaRetrieveParametersQueryLang'EnumIo) = "io"
  toJSON (SchemaRetrieveParametersQueryLang'EnumIs) = "is"
  toJSON (SchemaRetrieveParametersQueryLang'EnumIt) = "it"
  toJSON (SchemaRetrieveParametersQueryLang'EnumJa) = "ja"
  toJSON (SchemaRetrieveParametersQueryLang'EnumKa) = "ka"
  toJSON (SchemaRetrieveParametersQueryLang'EnumKab) = "kab"
  toJSON (SchemaRetrieveParametersQueryLang'EnumKk) = "kk"
  toJSON (SchemaRetrieveParametersQueryLang'EnumKm) = "km"
  toJSON (SchemaRetrieveParametersQueryLang'EnumKn) = "kn"
  toJSON (SchemaRetrieveParametersQueryLang'EnumKo) = "ko"
  toJSON (SchemaRetrieveParametersQueryLang'EnumKy) = "ky"
  toJSON (SchemaRetrieveParametersQueryLang'EnumLb) = "lb"
  toJSON (SchemaRetrieveParametersQueryLang'EnumLt) = "lt"
  toJSON (SchemaRetrieveParametersQueryLang'EnumLv) = "lv"
  toJSON (SchemaRetrieveParametersQueryLang'EnumMk) = "mk"
  toJSON (SchemaRetrieveParametersQueryLang'EnumMl) = "ml"
  toJSON (SchemaRetrieveParametersQueryLang'EnumMn) = "mn"
  toJSON (SchemaRetrieveParametersQueryLang'EnumMr) = "mr"
  toJSON (SchemaRetrieveParametersQueryLang'EnumMs) = "ms"
  toJSON (SchemaRetrieveParametersQueryLang'EnumMy) = "my"
  toJSON (SchemaRetrieveParametersQueryLang'EnumNb) = "nb"
  toJSON (SchemaRetrieveParametersQueryLang'EnumNe) = "ne"
  toJSON (SchemaRetrieveParametersQueryLang'EnumNl) = "nl"
  toJSON (SchemaRetrieveParametersQueryLang'EnumNn) = "nn"
  toJSON (SchemaRetrieveParametersQueryLang'EnumOs) = "os"
  toJSON (SchemaRetrieveParametersQueryLang'EnumPa) = "pa"
  toJSON (SchemaRetrieveParametersQueryLang'EnumPl) = "pl"
  toJSON (SchemaRetrieveParametersQueryLang'EnumPt) = "pt"
  toJSON (SchemaRetrieveParametersQueryLang'EnumPtBr) = "pt-br"
  toJSON (SchemaRetrieveParametersQueryLang'EnumRo) = "ro"
  toJSON (SchemaRetrieveParametersQueryLang'EnumRu) = "ru"
  toJSON (SchemaRetrieveParametersQueryLang'EnumSk) = "sk"
  toJSON (SchemaRetrieveParametersQueryLang'EnumSl) = "sl"
  toJSON (SchemaRetrieveParametersQueryLang'EnumSq) = "sq"
  toJSON (SchemaRetrieveParametersQueryLang'EnumSr) = "sr"
  toJSON (SchemaRetrieveParametersQueryLang'EnumSrLatn) = "sr-latn"
  toJSON (SchemaRetrieveParametersQueryLang'EnumSv) = "sv"
  toJSON (SchemaRetrieveParametersQueryLang'EnumSw) = "sw"
  toJSON (SchemaRetrieveParametersQueryLang'EnumTa) = "ta"
  toJSON (SchemaRetrieveParametersQueryLang'EnumTe) = "te"
  toJSON (SchemaRetrieveParametersQueryLang'EnumTg) = "tg"
  toJSON (SchemaRetrieveParametersQueryLang'EnumTh) = "th"
  toJSON (SchemaRetrieveParametersQueryLang'EnumTk) = "tk"
  toJSON (SchemaRetrieveParametersQueryLang'EnumTr) = "tr"
  toJSON (SchemaRetrieveParametersQueryLang'EnumTt) = "tt"
  toJSON (SchemaRetrieveParametersQueryLang'EnumUdm) = "udm"
  toJSON (SchemaRetrieveParametersQueryLang'EnumUg) = "ug"
  toJSON (SchemaRetrieveParametersQueryLang'EnumUk) = "uk"
  toJSON (SchemaRetrieveParametersQueryLang'EnumUr) = "ur"
  toJSON (SchemaRetrieveParametersQueryLang'EnumUz) = "uz"
  toJSON (SchemaRetrieveParametersQueryLang'EnumVi) = "vi"
  toJSON (SchemaRetrieveParametersQueryLang'EnumZhHans) = "zh-hans"
  toJSON (SchemaRetrieveParametersQueryLang'EnumZhHant) = "zh-hant"

instance Data.Aeson.Types.FromJSON.FromJSON SchemaRetrieveParametersQueryLang' where
  parseJSON val =
    GHC.Base.pure
      ( if
          | val GHC.Classes.== "af" -> SchemaRetrieveParametersQueryLang'EnumAf
          | val GHC.Classes.== "ar" -> SchemaRetrieveParametersQueryLang'EnumAr
          | val GHC.Classes.== "ar-dz" -> SchemaRetrieveParametersQueryLang'EnumArDz
          | val GHC.Classes.== "ast" -> SchemaRetrieveParametersQueryLang'EnumAst
          | val GHC.Classes.== "az" -> SchemaRetrieveParametersQueryLang'EnumAz
          | val GHC.Classes.== "be" -> SchemaRetrieveParametersQueryLang'EnumBe
          | val GHC.Classes.== "bg" -> SchemaRetrieveParametersQueryLang'EnumBg
          | val GHC.Classes.== "bn" -> SchemaRetrieveParametersQueryLang'EnumBn
          | val GHC.Classes.== "br" -> SchemaRetrieveParametersQueryLang'EnumBr
          | val GHC.Classes.== "bs" -> SchemaRetrieveParametersQueryLang'EnumBs
          | val GHC.Classes.== "ca" -> SchemaRetrieveParametersQueryLang'EnumCa
          | val GHC.Classes.== "ckb" -> SchemaRetrieveParametersQueryLang'EnumCkb
          | val GHC.Classes.== "cs" -> SchemaRetrieveParametersQueryLang'EnumCs
          | val GHC.Classes.== "cy" -> SchemaRetrieveParametersQueryLang'EnumCy
          | val GHC.Classes.== "da" -> SchemaRetrieveParametersQueryLang'EnumDa
          | val GHC.Classes.== "de" -> SchemaRetrieveParametersQueryLang'EnumDe
          | val GHC.Classes.== "dsb" -> SchemaRetrieveParametersQueryLang'EnumDsb
          | val GHC.Classes.== "el" -> SchemaRetrieveParametersQueryLang'EnumEl
          | val GHC.Classes.== "en" -> SchemaRetrieveParametersQueryLang'EnumEn
          | val GHC.Classes.== "en-au" -> SchemaRetrieveParametersQueryLang'EnumEnAu
          | val GHC.Classes.== "en-gb" -> SchemaRetrieveParametersQueryLang'EnumEnGb
          | val GHC.Classes.== "eo" -> SchemaRetrieveParametersQueryLang'EnumEo
          | val GHC.Classes.== "es" -> SchemaRetrieveParametersQueryLang'EnumEs
          | val GHC.Classes.== "es-ar" -> SchemaRetrieveParametersQueryLang'EnumEsAr
          | val GHC.Classes.== "es-co" -> SchemaRetrieveParametersQueryLang'EnumEsCo
          | val GHC.Classes.== "es-mx" -> SchemaRetrieveParametersQueryLang'EnumEsMx
          | val GHC.Classes.== "es-ni" -> SchemaRetrieveParametersQueryLang'EnumEsNi
          | val GHC.Classes.== "es-ve" -> SchemaRetrieveParametersQueryLang'EnumEsVe
          | val GHC.Classes.== "et" -> SchemaRetrieveParametersQueryLang'EnumEt
          | val GHC.Classes.== "eu" -> SchemaRetrieveParametersQueryLang'EnumEu
          | val GHC.Classes.== "fa" -> SchemaRetrieveParametersQueryLang'EnumFa
          | val GHC.Classes.== "fi" -> SchemaRetrieveParametersQueryLang'EnumFi
          | val GHC.Classes.== "fr" -> SchemaRetrieveParametersQueryLang'EnumFr
          | val GHC.Classes.== "fy" -> SchemaRetrieveParametersQueryLang'EnumFy
          | val GHC.Classes.== "ga" -> SchemaRetrieveParametersQueryLang'EnumGa
          | val GHC.Classes.== "gd" -> SchemaRetrieveParametersQueryLang'EnumGd
          | val GHC.Classes.== "gl" -> SchemaRetrieveParametersQueryLang'EnumGl
          | val GHC.Classes.== "he" -> SchemaRetrieveParametersQueryLang'EnumHe
          | val GHC.Classes.== "hi" -> SchemaRetrieveParametersQueryLang'EnumHi
          | val GHC.Classes.== "hr" -> SchemaRetrieveParametersQueryLang'EnumHr
          | val GHC.Classes.== "hsb" -> SchemaRetrieveParametersQueryLang'EnumHsb
          | val GHC.Classes.== "hu" -> SchemaRetrieveParametersQueryLang'EnumHu
          | val GHC.Classes.== "hy" -> SchemaRetrieveParametersQueryLang'EnumHy
          | val GHC.Classes.== "ia" -> SchemaRetrieveParametersQueryLang'EnumIa
          | val GHC.Classes.== "id" -> SchemaRetrieveParametersQueryLang'EnumId
          | val GHC.Classes.== "ig" -> SchemaRetrieveParametersQueryLang'EnumIg
          | val GHC.Classes.== "io" -> SchemaRetrieveParametersQueryLang'EnumIo
          | val GHC.Classes.== "is" -> SchemaRetrieveParametersQueryLang'EnumIs
          | val GHC.Classes.== "it" -> SchemaRetrieveParametersQueryLang'EnumIt
          | val GHC.Classes.== "ja" -> SchemaRetrieveParametersQueryLang'EnumJa
          | val GHC.Classes.== "ka" -> SchemaRetrieveParametersQueryLang'EnumKa
          | val GHC.Classes.== "kab" -> SchemaRetrieveParametersQueryLang'EnumKab
          | val GHC.Classes.== "kk" -> SchemaRetrieveParametersQueryLang'EnumKk
          | val GHC.Classes.== "km" -> SchemaRetrieveParametersQueryLang'EnumKm
          | val GHC.Classes.== "kn" -> SchemaRetrieveParametersQueryLang'EnumKn
          | val GHC.Classes.== "ko" -> SchemaRetrieveParametersQueryLang'EnumKo
          | val GHC.Classes.== "ky" -> SchemaRetrieveParametersQueryLang'EnumKy
          | val GHC.Classes.== "lb" -> SchemaRetrieveParametersQueryLang'EnumLb
          | val GHC.Classes.== "lt" -> SchemaRetrieveParametersQueryLang'EnumLt
          | val GHC.Classes.== "lv" -> SchemaRetrieveParametersQueryLang'EnumLv
          | val GHC.Classes.== "mk" -> SchemaRetrieveParametersQueryLang'EnumMk
          | val GHC.Classes.== "ml" -> SchemaRetrieveParametersQueryLang'EnumMl
          | val GHC.Classes.== "mn" -> SchemaRetrieveParametersQueryLang'EnumMn
          | val GHC.Classes.== "mr" -> SchemaRetrieveParametersQueryLang'EnumMr
          | val GHC.Classes.== "ms" -> SchemaRetrieveParametersQueryLang'EnumMs
          | val GHC.Classes.== "my" -> SchemaRetrieveParametersQueryLang'EnumMy
          | val GHC.Classes.== "nb" -> SchemaRetrieveParametersQueryLang'EnumNb
          | val GHC.Classes.== "ne" -> SchemaRetrieveParametersQueryLang'EnumNe
          | val GHC.Classes.== "nl" -> SchemaRetrieveParametersQueryLang'EnumNl
          | val GHC.Classes.== "nn" -> SchemaRetrieveParametersQueryLang'EnumNn
          | val GHC.Classes.== "os" -> SchemaRetrieveParametersQueryLang'EnumOs
          | val GHC.Classes.== "pa" -> SchemaRetrieveParametersQueryLang'EnumPa
          | val GHC.Classes.== "pl" -> SchemaRetrieveParametersQueryLang'EnumPl
          | val GHC.Classes.== "pt" -> SchemaRetrieveParametersQueryLang'EnumPt
          | val GHC.Classes.== "pt-br" -> SchemaRetrieveParametersQueryLang'EnumPtBr
          | val GHC.Classes.== "ro" -> SchemaRetrieveParametersQueryLang'EnumRo
          | val GHC.Classes.== "ru" -> SchemaRetrieveParametersQueryLang'EnumRu
          | val GHC.Classes.== "sk" -> SchemaRetrieveParametersQueryLang'EnumSk
          | val GHC.Classes.== "sl" -> SchemaRetrieveParametersQueryLang'EnumSl
          | val GHC.Classes.== "sq" -> SchemaRetrieveParametersQueryLang'EnumSq
          | val GHC.Classes.== "sr" -> SchemaRetrieveParametersQueryLang'EnumSr
          | val GHC.Classes.== "sr-latn" -> SchemaRetrieveParametersQueryLang'EnumSrLatn
          | val GHC.Classes.== "sv" -> SchemaRetrieveParametersQueryLang'EnumSv
          | val GHC.Classes.== "sw" -> SchemaRetrieveParametersQueryLang'EnumSw
          | val GHC.Classes.== "ta" -> SchemaRetrieveParametersQueryLang'EnumTa
          | val GHC.Classes.== "te" -> SchemaRetrieveParametersQueryLang'EnumTe
          | val GHC.Classes.== "tg" -> SchemaRetrieveParametersQueryLang'EnumTg
          | val GHC.Classes.== "th" -> SchemaRetrieveParametersQueryLang'EnumTh
          | val GHC.Classes.== "tk" -> SchemaRetrieveParametersQueryLang'EnumTk
          | val GHC.Classes.== "tr" -> SchemaRetrieveParametersQueryLang'EnumTr
          | val GHC.Classes.== "tt" -> SchemaRetrieveParametersQueryLang'EnumTt
          | val GHC.Classes.== "udm" -> SchemaRetrieveParametersQueryLang'EnumUdm
          | val GHC.Classes.== "ug" -> SchemaRetrieveParametersQueryLang'EnumUg
          | val GHC.Classes.== "uk" -> SchemaRetrieveParametersQueryLang'EnumUk
          | val GHC.Classes.== "ur" -> SchemaRetrieveParametersQueryLang'EnumUr
          | val GHC.Classes.== "uz" -> SchemaRetrieveParametersQueryLang'EnumUz
          | val GHC.Classes.== "vi" -> SchemaRetrieveParametersQueryLang'EnumVi
          | val GHC.Classes.== "zh-hans" -> SchemaRetrieveParametersQueryLang'EnumZhHans
          | val GHC.Classes.== "zh-hant" -> SchemaRetrieveParametersQueryLang'EnumZhHant
          | GHC.Base.otherwise -> SchemaRetrieveParametersQueryLang'Other val
      )

-- | Represents a response of the operation 'schemaRetrieve'.
--
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'SchemaRetrieveResponseError' is used.
data SchemaRetrieveResponse
  = -- | Means either no matching case available or a parse error
    SchemaRetrieveResponseError GHC.Base.String
  | SchemaRetrieveResponse200 Data.Aeson.Types.Internal.Object
  | SchemaRetrieveResponse400 ValidationError
  | SchemaRetrieveResponse403 GenericError
  deriving (GHC.Show.Show, GHC.Classes.Eq)
