{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the different functions to run the operation eventsEventsList
module AuthentikAPI.Operations.EventsEventsList where

import qualified AuthentikAPI.Common
import AuthentikAPI.Types
import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.ByteString as Data.ByteString.Internal.Type
import qualified Data.Either
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | > GET /events/events/
--
-- Event Read-Only Viewset
eventsEventsList ::
  forall m.
  (AuthentikAPI.Common.MonadHTTP m) =>
  -- | Contains all available parameters of this operation (query and path parameters)
  EventsEventsListParameters ->
  -- | Monadic computation which returns the result of the operation
  AuthentikAPI.Common.ClientT m (Network.HTTP.Client.Types.Response EventsEventsListResponse)
eventsEventsList parameters =
  GHC.Base.fmap
    ( \response_0 ->
        GHC.Base.fmap
          ( Data.Either.either EventsEventsListResponseError GHC.Base.id
              GHC.Base.. ( \response body ->
                             if
                               | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                   EventsEventsListResponse200
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            PaginatedEventList
                                                      )
                               | (\status_2 -> Network.HTTP.Types.Status.statusCode status_2 GHC.Classes.== 400) (Network.HTTP.Client.Types.responseStatus response) ->
                                   EventsEventsListResponse400
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            ValidationError
                                                      )
                               | (\status_3 -> Network.HTTP.Types.Status.statusCode status_3 GHC.Classes.== 403) (Network.HTTP.Client.Types.responseStatus response) ->
                                   EventsEventsListResponse403
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            GenericError
                                                      )
                               | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                         )
                response_0
          )
          response_0
    )
    ( AuthentikAPI.Common.doCallWithConfigurationM
        (Data.Text.toUpper GHC.Base.$ Data.Text.Internal.pack "GET")
        "/events/events/"
        [ AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "action") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> eventsEventsListParametersQueryAction parameters) (Data.Text.Internal.pack "form") GHC.Types.False,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "brand_name") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> eventsEventsListParametersQueryBrandName parameters) (Data.Text.Internal.pack "form") GHC.Types.False,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "client_ip") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> eventsEventsListParametersQueryClientIp parameters) (Data.Text.Internal.pack "form") GHC.Types.False,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "context_authorized_app") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> eventsEventsListParametersQueryContextAuthorizedApp parameters) (Data.Text.Internal.pack "form") GHC.Types.False,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "context_model_app") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> eventsEventsListParametersQueryContextModelApp parameters) (Data.Text.Internal.pack "form") GHC.Types.False,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "context_model_name") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> eventsEventsListParametersQueryContextModelName parameters) (Data.Text.Internal.pack "form") GHC.Types.False,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "context_model_pk") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> eventsEventsListParametersQueryContextModelPk parameters) (Data.Text.Internal.pack "form") GHC.Types.False,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "ordering") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> eventsEventsListParametersQueryOrdering parameters) (Data.Text.Internal.pack "form") GHC.Types.False,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "page") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> eventsEventsListParametersQueryPage parameters) (Data.Text.Internal.pack "form") GHC.Types.False,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "page_size") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> eventsEventsListParametersQueryPageSize parameters) (Data.Text.Internal.pack "form") GHC.Types.False,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "search") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> eventsEventsListParametersQuerySearch parameters) (Data.Text.Internal.pack "form") GHC.Types.False,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "username") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> eventsEventsListParametersQueryUsername parameters) (Data.Text.Internal.pack "form") GHC.Types.False
        ]
    )

-- | Defines the object schema located at @paths.\/events\/events\/.GET.parameters@ in the specification.
data EventsEventsListParameters = EventsEventsListParameters
  { -- | queryAction: Represents the parameter named \'action\'
    eventsEventsListParametersQueryAction :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | queryBrand_name: Represents the parameter named \'brand_name\'
    --
    -- Brand name
    eventsEventsListParametersQueryBrandName :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | queryClient_ip: Represents the parameter named \'client_ip\'
    eventsEventsListParametersQueryClientIp :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | queryContext_authorized_app: Represents the parameter named \'context_authorized_app\'
    --
    -- Context Authorized application
    eventsEventsListParametersQueryContextAuthorizedApp :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | queryContext_model_app: Represents the parameter named \'context_model_app\'
    --
    -- Context Model App
    eventsEventsListParametersQueryContextModelApp :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | queryContext_model_name: Represents the parameter named \'context_model_name\'
    --
    -- Context Model Name
    eventsEventsListParametersQueryContextModelName :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | queryContext_model_pk: Represents the parameter named \'context_model_pk\'
    --
    -- Context Model Primary Key
    eventsEventsListParametersQueryContextModelPk :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | queryOrdering: Represents the parameter named \'ordering\'
    --
    -- Which field to use when ordering the results.
    eventsEventsListParametersQueryOrdering :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | queryPage: Represents the parameter named \'page\'
    --
    -- A page number within the paginated result set.
    eventsEventsListParametersQueryPage :: (GHC.Maybe.Maybe GHC.Types.Int),
    -- | queryPage_size: Represents the parameter named \'page_size\'
    --
    -- Number of results to return per page.
    eventsEventsListParametersQueryPageSize :: (GHC.Maybe.Maybe GHC.Types.Int),
    -- | querySearch: Represents the parameter named \'search\'
    --
    -- A search term.
    eventsEventsListParametersQuerySearch :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | queryUsername: Represents the parameter named \'username\'
    --
    -- Username
    eventsEventsListParametersQueryUsername :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON EventsEventsListParameters where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryAction" Data.Aeson.Types.ToJSON..=)) (eventsEventsListParametersQueryAction obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryBrand_name" Data.Aeson.Types.ToJSON..=)) (eventsEventsListParametersQueryBrandName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryClient_ip" Data.Aeson.Types.ToJSON..=)) (eventsEventsListParametersQueryClientIp obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryContext_authorized_app" Data.Aeson.Types.ToJSON..=)) (eventsEventsListParametersQueryContextAuthorizedApp obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryContext_model_app" Data.Aeson.Types.ToJSON..=)) (eventsEventsListParametersQueryContextModelApp obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryContext_model_name" Data.Aeson.Types.ToJSON..=)) (eventsEventsListParametersQueryContextModelName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryContext_model_pk" Data.Aeson.Types.ToJSON..=)) (eventsEventsListParametersQueryContextModelPk obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryOrdering" Data.Aeson.Types.ToJSON..=)) (eventsEventsListParametersQueryOrdering obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryPage" Data.Aeson.Types.ToJSON..=)) (eventsEventsListParametersQueryPage obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryPage_size" Data.Aeson.Types.ToJSON..=)) (eventsEventsListParametersQueryPageSize obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("querySearch" Data.Aeson.Types.ToJSON..=)) (eventsEventsListParametersQuerySearch obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryUsername" Data.Aeson.Types.ToJSON..=)) (eventsEventsListParametersQueryUsername obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryAction" Data.Aeson.Types.ToJSON..=)) (eventsEventsListParametersQueryAction obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryBrand_name" Data.Aeson.Types.ToJSON..=)) (eventsEventsListParametersQueryBrandName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryClient_ip" Data.Aeson.Types.ToJSON..=)) (eventsEventsListParametersQueryClientIp obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryContext_authorized_app" Data.Aeson.Types.ToJSON..=)) (eventsEventsListParametersQueryContextAuthorizedApp obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryContext_model_app" Data.Aeson.Types.ToJSON..=)) (eventsEventsListParametersQueryContextModelApp obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryContext_model_name" Data.Aeson.Types.ToJSON..=)) (eventsEventsListParametersQueryContextModelName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryContext_model_pk" Data.Aeson.Types.ToJSON..=)) (eventsEventsListParametersQueryContextModelPk obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryOrdering" Data.Aeson.Types.ToJSON..=)) (eventsEventsListParametersQueryOrdering obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryPage" Data.Aeson.Types.ToJSON..=)) (eventsEventsListParametersQueryPage obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryPage_size" Data.Aeson.Types.ToJSON..=)) (eventsEventsListParametersQueryPageSize obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("querySearch" Data.Aeson.Types.ToJSON..=)) (eventsEventsListParametersQuerySearch obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryUsername" Data.Aeson.Types.ToJSON..=)) (eventsEventsListParametersQueryUsername obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON EventsEventsListParameters where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "EventsEventsListParameters" (\obj -> (((((((((((GHC.Base.pure EventsEventsListParameters GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryAction")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryBrand_name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryClient_ip")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryContext_authorized_app")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryContext_model_app")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryContext_model_name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryContext_model_pk")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryOrdering")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryPage")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryPage_size")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "querySearch")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryUsername"))

-- | Create a new 'EventsEventsListParameters' with all required fields.
mkEventsEventsListParameters :: EventsEventsListParameters
mkEventsEventsListParameters =
  EventsEventsListParameters
    { eventsEventsListParametersQueryAction = GHC.Maybe.Nothing,
      eventsEventsListParametersQueryBrandName = GHC.Maybe.Nothing,
      eventsEventsListParametersQueryClientIp = GHC.Maybe.Nothing,
      eventsEventsListParametersQueryContextAuthorizedApp = GHC.Maybe.Nothing,
      eventsEventsListParametersQueryContextModelApp = GHC.Maybe.Nothing,
      eventsEventsListParametersQueryContextModelName = GHC.Maybe.Nothing,
      eventsEventsListParametersQueryContextModelPk = GHC.Maybe.Nothing,
      eventsEventsListParametersQueryOrdering = GHC.Maybe.Nothing,
      eventsEventsListParametersQueryPage = GHC.Maybe.Nothing,
      eventsEventsListParametersQueryPageSize = GHC.Maybe.Nothing,
      eventsEventsListParametersQuerySearch = GHC.Maybe.Nothing,
      eventsEventsListParametersQueryUsername = GHC.Maybe.Nothing
    }

-- | Represents a response of the operation 'eventsEventsList'.
--
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'EventsEventsListResponseError' is used.
data EventsEventsListResponse
  = -- | Means either no matching case available or a parse error
    EventsEventsListResponseError GHC.Base.String
  | EventsEventsListResponse200 PaginatedEventList
  | EventsEventsListResponse400 ValidationError
  | EventsEventsListResponse403 GenericError
  deriving (GHC.Show.Show, GHC.Classes.Eq)
