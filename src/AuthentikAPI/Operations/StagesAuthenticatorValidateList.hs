{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the different functions to run the operation stagesAuthenticatorValidateList
module AuthentikAPI.Operations.StagesAuthenticatorValidateList where

import qualified AuthentikAPI.Common
import AuthentikAPI.Types
import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.ByteString as Data.ByteString.Internal.Type
import qualified Data.Either
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | > GET /stages/authenticator/validate/
--
-- AuthenticatorValidateStage Viewset
stagesAuthenticatorValidateList ::
  forall m.
  (AuthentikAPI.Common.MonadHTTP m) =>
  -- | Contains all available parameters of this operation (query and path parameters)
  StagesAuthenticatorValidateListParameters ->
  -- | Monadic computation which returns the result of the operation
  AuthentikAPI.Common.ClientT m (Network.HTTP.Client.Types.Response StagesAuthenticatorValidateListResponse)
stagesAuthenticatorValidateList parameters =
  GHC.Base.fmap
    ( \response_0 ->
        GHC.Base.fmap
          ( Data.Either.either StagesAuthenticatorValidateListResponseError GHC.Base.id
              GHC.Base.. ( \response body ->
                             if
                               | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                   StagesAuthenticatorValidateListResponse200
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            PaginatedAuthenticatorValidateStageList
                                                      )
                               | (\status_2 -> Network.HTTP.Types.Status.statusCode status_2 GHC.Classes.== 400) (Network.HTTP.Client.Types.responseStatus response) ->
                                   StagesAuthenticatorValidateListResponse400
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            ValidationError
                                                      )
                               | (\status_3 -> Network.HTTP.Types.Status.statusCode status_3 GHC.Classes.== 403) (Network.HTTP.Client.Types.responseStatus response) ->
                                   StagesAuthenticatorValidateListResponse403
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            GenericError
                                                      )
                               | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                         )
                response_0
          )
          response_0
    )
    ( AuthentikAPI.Common.doCallWithConfigurationM
        (Data.Text.toUpper GHC.Base.$ Data.Text.Internal.pack "GET")
        "/stages/authenticator/validate/"
        [ AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "configuration_stages") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> stagesAuthenticatorValidateListParametersQueryConfigurationStages parameters) (Data.Text.Internal.pack "form") GHC.Types.True,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "name") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> stagesAuthenticatorValidateListParametersQueryName parameters) (Data.Text.Internal.pack "form") GHC.Types.False,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "not_configured_action") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> stagesAuthenticatorValidateListParametersQueryNotConfiguredAction parameters) (Data.Text.Internal.pack "form") GHC.Types.False,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "ordering") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> stagesAuthenticatorValidateListParametersQueryOrdering parameters) (Data.Text.Internal.pack "form") GHC.Types.False,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "page") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> stagesAuthenticatorValidateListParametersQueryPage parameters) (Data.Text.Internal.pack "form") GHC.Types.False,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "page_size") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> stagesAuthenticatorValidateListParametersQueryPageSize parameters) (Data.Text.Internal.pack "form") GHC.Types.False,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "search") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> stagesAuthenticatorValidateListParametersQuerySearch parameters) (Data.Text.Internal.pack "form") GHC.Types.False
        ]
    )

-- | Defines the object schema located at @paths.\/stages\/authenticator\/validate\/.GET.parameters@ in the specification.
data StagesAuthenticatorValidateListParameters = StagesAuthenticatorValidateListParameters
  { -- | queryConfiguration_stages: Represents the parameter named \'configuration_stages\'
    stagesAuthenticatorValidateListParametersQueryConfigurationStages :: (GHC.Maybe.Maybe [Data.Text.Internal.Text]),
    -- | queryName: Represents the parameter named \'name\'
    stagesAuthenticatorValidateListParametersQueryName :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | queryNot_configured_action: Represents the parameter named \'not_configured_action\'
    stagesAuthenticatorValidateListParametersQueryNotConfiguredAction :: (GHC.Maybe.Maybe StagesAuthenticatorValidateListParametersQueryNotConfiguredAction'),
    -- | queryOrdering: Represents the parameter named \'ordering\'
    --
    -- Which field to use when ordering the results.
    stagesAuthenticatorValidateListParametersQueryOrdering :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | queryPage: Represents the parameter named \'page\'
    --
    -- A page number within the paginated result set.
    stagesAuthenticatorValidateListParametersQueryPage :: (GHC.Maybe.Maybe GHC.Types.Int),
    -- | queryPage_size: Represents the parameter named \'page_size\'
    --
    -- Number of results to return per page.
    stagesAuthenticatorValidateListParametersQueryPageSize :: (GHC.Maybe.Maybe GHC.Types.Int),
    -- | querySearch: Represents the parameter named \'search\'
    --
    -- A search term.
    stagesAuthenticatorValidateListParametersQuerySearch :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON StagesAuthenticatorValidateListParameters where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryConfiguration_stages" Data.Aeson.Types.ToJSON..=)) (stagesAuthenticatorValidateListParametersQueryConfigurationStages obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryName" Data.Aeson.Types.ToJSON..=)) (stagesAuthenticatorValidateListParametersQueryName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryNot_configured_action" Data.Aeson.Types.ToJSON..=)) (stagesAuthenticatorValidateListParametersQueryNotConfiguredAction obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryOrdering" Data.Aeson.Types.ToJSON..=)) (stagesAuthenticatorValidateListParametersQueryOrdering obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryPage" Data.Aeson.Types.ToJSON..=)) (stagesAuthenticatorValidateListParametersQueryPage obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryPage_size" Data.Aeson.Types.ToJSON..=)) (stagesAuthenticatorValidateListParametersQueryPageSize obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("querySearch" Data.Aeson.Types.ToJSON..=)) (stagesAuthenticatorValidateListParametersQuerySearch obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryConfiguration_stages" Data.Aeson.Types.ToJSON..=)) (stagesAuthenticatorValidateListParametersQueryConfigurationStages obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryName" Data.Aeson.Types.ToJSON..=)) (stagesAuthenticatorValidateListParametersQueryName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryNot_configured_action" Data.Aeson.Types.ToJSON..=)) (stagesAuthenticatorValidateListParametersQueryNotConfiguredAction obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryOrdering" Data.Aeson.Types.ToJSON..=)) (stagesAuthenticatorValidateListParametersQueryOrdering obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryPage" Data.Aeson.Types.ToJSON..=)) (stagesAuthenticatorValidateListParametersQueryPage obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryPage_size" Data.Aeson.Types.ToJSON..=)) (stagesAuthenticatorValidateListParametersQueryPageSize obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("querySearch" Data.Aeson.Types.ToJSON..=)) (stagesAuthenticatorValidateListParametersQuerySearch obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON StagesAuthenticatorValidateListParameters where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "StagesAuthenticatorValidateListParameters" (\obj -> ((((((GHC.Base.pure StagesAuthenticatorValidateListParameters GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryConfiguration_stages")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryName")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryNot_configured_action")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryOrdering")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryPage")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryPage_size")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "querySearch"))

-- | Create a new 'StagesAuthenticatorValidateListParameters' with all required fields.
mkStagesAuthenticatorValidateListParameters :: StagesAuthenticatorValidateListParameters
mkStagesAuthenticatorValidateListParameters =
  StagesAuthenticatorValidateListParameters
    { stagesAuthenticatorValidateListParametersQueryConfigurationStages = GHC.Maybe.Nothing,
      stagesAuthenticatorValidateListParametersQueryName = GHC.Maybe.Nothing,
      stagesAuthenticatorValidateListParametersQueryNotConfiguredAction = GHC.Maybe.Nothing,
      stagesAuthenticatorValidateListParametersQueryOrdering = GHC.Maybe.Nothing,
      stagesAuthenticatorValidateListParametersQueryPage = GHC.Maybe.Nothing,
      stagesAuthenticatorValidateListParametersQueryPageSize = GHC.Maybe.Nothing,
      stagesAuthenticatorValidateListParametersQuerySearch = GHC.Maybe.Nothing
    }

-- | Defines the enum schema located at @paths.\/stages\/authenticator\/validate\/.GET.parameters.properties.queryNot_configured_action@ in the specification.
--
-- Represents the parameter named \'not_configured_action\'
data StagesAuthenticatorValidateListParametersQueryNotConfiguredAction'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    StagesAuthenticatorValidateListParametersQueryNotConfiguredAction'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    StagesAuthenticatorValidateListParametersQueryNotConfiguredAction'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"configure"@
    StagesAuthenticatorValidateListParametersQueryNotConfiguredAction'EnumConfigure
  | -- | Represents the JSON value @"deny"@
    StagesAuthenticatorValidateListParametersQueryNotConfiguredAction'EnumDeny
  | -- | Represents the JSON value @"skip"@
    StagesAuthenticatorValidateListParametersQueryNotConfiguredAction'EnumSkip
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON StagesAuthenticatorValidateListParametersQueryNotConfiguredAction' where
  toJSON (StagesAuthenticatorValidateListParametersQueryNotConfiguredAction'Other val) = val
  toJSON (StagesAuthenticatorValidateListParametersQueryNotConfiguredAction'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (StagesAuthenticatorValidateListParametersQueryNotConfiguredAction'EnumConfigure) = "configure"
  toJSON (StagesAuthenticatorValidateListParametersQueryNotConfiguredAction'EnumDeny) = "deny"
  toJSON (StagesAuthenticatorValidateListParametersQueryNotConfiguredAction'EnumSkip) = "skip"

instance Data.Aeson.Types.FromJSON.FromJSON StagesAuthenticatorValidateListParametersQueryNotConfiguredAction' where
  parseJSON val =
    GHC.Base.pure
      ( if
          | val GHC.Classes.== "configure" -> StagesAuthenticatorValidateListParametersQueryNotConfiguredAction'EnumConfigure
          | val GHC.Classes.== "deny" -> StagesAuthenticatorValidateListParametersQueryNotConfiguredAction'EnumDeny
          | val GHC.Classes.== "skip" -> StagesAuthenticatorValidateListParametersQueryNotConfiguredAction'EnumSkip
          | GHC.Base.otherwise -> StagesAuthenticatorValidateListParametersQueryNotConfiguredAction'Other val
      )

-- | Represents a response of the operation 'stagesAuthenticatorValidateList'.
--
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'StagesAuthenticatorValidateListResponseError' is used.
data StagesAuthenticatorValidateListResponse
  = -- | Means either no matching case available or a parse error
    StagesAuthenticatorValidateListResponseError GHC.Base.String
  | StagesAuthenticatorValidateListResponse200 PaginatedAuthenticatorValidateStageList
  | StagesAuthenticatorValidateListResponse400 ValidationError
  | StagesAuthenticatorValidateListResponse403 GenericError
  deriving (GHC.Show.Show, GHC.Classes.Eq)
