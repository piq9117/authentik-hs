{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the different functions to run the operation stagesAuthenticatorSmsList
module AuthentikAPI.Operations.StagesAuthenticatorSmsList where

import qualified AuthentikAPI.Common
import AuthentikAPI.Types
import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.ByteString as Data.ByteString.Internal.Type
import qualified Data.Either
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | > GET /stages/authenticator/sms/
--
-- AuthenticatorSMSStage Viewset
stagesAuthenticatorSmsList ::
  forall m.
  (AuthentikAPI.Common.MonadHTTP m) =>
  -- | Contains all available parameters of this operation (query and path parameters)
  StagesAuthenticatorSmsListParameters ->
  -- | Monadic computation which returns the result of the operation
  AuthentikAPI.Common.ClientT m (Network.HTTP.Client.Types.Response StagesAuthenticatorSmsListResponse)
stagesAuthenticatorSmsList parameters =
  GHC.Base.fmap
    ( \response_0 ->
        GHC.Base.fmap
          ( Data.Either.either StagesAuthenticatorSmsListResponseError GHC.Base.id
              GHC.Base.. ( \response body ->
                             if
                               | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                   StagesAuthenticatorSmsListResponse200
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            PaginatedAuthenticatorSMSStageList
                                                      )
                               | (\status_2 -> Network.HTTP.Types.Status.statusCode status_2 GHC.Classes.== 400) (Network.HTTP.Client.Types.responseStatus response) ->
                                   StagesAuthenticatorSmsListResponse400
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            ValidationError
                                                      )
                               | (\status_3 -> Network.HTTP.Types.Status.statusCode status_3 GHC.Classes.== 403) (Network.HTTP.Client.Types.responseStatus response) ->
                                   StagesAuthenticatorSmsListResponse403
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            GenericError
                                                      )
                               | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                         )
                response_0
          )
          response_0
    )
    ( AuthentikAPI.Common.doCallWithConfigurationM
        (Data.Text.toUpper GHC.Base.$ Data.Text.Internal.pack "GET")
        "/stages/authenticator/sms/"
        [ AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "account_sid") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> stagesAuthenticatorSmsListParametersQueryAccountSid parameters) (Data.Text.Internal.pack "form") GHC.Types.False,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "auth") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> stagesAuthenticatorSmsListParametersQueryAuth parameters) (Data.Text.Internal.pack "form") GHC.Types.False,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "auth_password") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> stagesAuthenticatorSmsListParametersQueryAuthPassword parameters) (Data.Text.Internal.pack "form") GHC.Types.False,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "auth_type") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> stagesAuthenticatorSmsListParametersQueryAuthType parameters) (Data.Text.Internal.pack "form") GHC.Types.False,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "configure_flow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> stagesAuthenticatorSmsListParametersQueryConfigureFlow parameters) (Data.Text.Internal.pack "form") GHC.Types.False,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "friendly_name") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> stagesAuthenticatorSmsListParametersQueryFriendlyName parameters) (Data.Text.Internal.pack "form") GHC.Types.False,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "from_number") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> stagesAuthenticatorSmsListParametersQueryFromNumber parameters) (Data.Text.Internal.pack "form") GHC.Types.False,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "mapping") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> stagesAuthenticatorSmsListParametersQueryMapping parameters) (Data.Text.Internal.pack "form") GHC.Types.False,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "name") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> stagesAuthenticatorSmsListParametersQueryName parameters) (Data.Text.Internal.pack "form") GHC.Types.False,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "ordering") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> stagesAuthenticatorSmsListParametersQueryOrdering parameters) (Data.Text.Internal.pack "form") GHC.Types.False,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "page") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> stagesAuthenticatorSmsListParametersQueryPage parameters) (Data.Text.Internal.pack "form") GHC.Types.False,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "page_size") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> stagesAuthenticatorSmsListParametersQueryPageSize parameters) (Data.Text.Internal.pack "form") GHC.Types.False,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "provider") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> stagesAuthenticatorSmsListParametersQueryProvider parameters) (Data.Text.Internal.pack "form") GHC.Types.False,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "search") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> stagesAuthenticatorSmsListParametersQuerySearch parameters) (Data.Text.Internal.pack "form") GHC.Types.False,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "stage_uuid") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> stagesAuthenticatorSmsListParametersQueryStageUuid parameters) (Data.Text.Internal.pack "form") GHC.Types.False,
          AuthentikAPI.Common.QueryParameter (Data.Text.Internal.pack "verify_only") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> stagesAuthenticatorSmsListParametersQueryVerifyOnly parameters) (Data.Text.Internal.pack "form") GHC.Types.False
        ]
    )

-- | Defines the object schema located at @paths.\/stages\/authenticator\/sms\/.GET.parameters@ in the specification.
data StagesAuthenticatorSmsListParameters = StagesAuthenticatorSmsListParameters
  { -- | queryAccount_sid: Represents the parameter named \'account_sid\'
    stagesAuthenticatorSmsListParametersQueryAccountSid :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | queryAuth: Represents the parameter named \'auth\'
    stagesAuthenticatorSmsListParametersQueryAuth :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | queryAuth_password: Represents the parameter named \'auth_password\'
    stagesAuthenticatorSmsListParametersQueryAuthPassword :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | queryAuth_type: Represents the parameter named \'auth_type\'
    stagesAuthenticatorSmsListParametersQueryAuthType :: (GHC.Maybe.Maybe StagesAuthenticatorSmsListParametersQueryAuthType'),
    -- | queryConfigure_flow: Represents the parameter named \'configure_flow\'
    stagesAuthenticatorSmsListParametersQueryConfigureFlow :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | queryFriendly_name: Represents the parameter named \'friendly_name\'
    stagesAuthenticatorSmsListParametersQueryFriendlyName :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | queryFrom_number: Represents the parameter named \'from_number\'
    stagesAuthenticatorSmsListParametersQueryFromNumber :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | queryMapping: Represents the parameter named \'mapping\'
    stagesAuthenticatorSmsListParametersQueryMapping :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | queryName: Represents the parameter named \'name\'
    stagesAuthenticatorSmsListParametersQueryName :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | queryOrdering: Represents the parameter named \'ordering\'
    --
    -- Which field to use when ordering the results.
    stagesAuthenticatorSmsListParametersQueryOrdering :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | queryPage: Represents the parameter named \'page\'
    --
    -- A page number within the paginated result set.
    stagesAuthenticatorSmsListParametersQueryPage :: (GHC.Maybe.Maybe GHC.Types.Int),
    -- | queryPage_size: Represents the parameter named \'page_size\'
    --
    -- Number of results to return per page.
    stagesAuthenticatorSmsListParametersQueryPageSize :: (GHC.Maybe.Maybe GHC.Types.Int),
    -- | queryProvider: Represents the parameter named \'provider\'
    stagesAuthenticatorSmsListParametersQueryProvider :: (GHC.Maybe.Maybe StagesAuthenticatorSmsListParametersQueryProvider'),
    -- | querySearch: Represents the parameter named \'search\'
    --
    -- A search term.
    stagesAuthenticatorSmsListParametersQuerySearch :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | queryStage_uuid: Represents the parameter named \'stage_uuid\'
    stagesAuthenticatorSmsListParametersQueryStageUuid :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | queryVerify_only: Represents the parameter named \'verify_only\'
    stagesAuthenticatorSmsListParametersQueryVerifyOnly :: (GHC.Maybe.Maybe GHC.Types.Bool)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON StagesAuthenticatorSmsListParameters where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryAccount_sid" Data.Aeson.Types.ToJSON..=)) (stagesAuthenticatorSmsListParametersQueryAccountSid obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryAuth" Data.Aeson.Types.ToJSON..=)) (stagesAuthenticatorSmsListParametersQueryAuth obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryAuth_password" Data.Aeson.Types.ToJSON..=)) (stagesAuthenticatorSmsListParametersQueryAuthPassword obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryAuth_type" Data.Aeson.Types.ToJSON..=)) (stagesAuthenticatorSmsListParametersQueryAuthType obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryConfigure_flow" Data.Aeson.Types.ToJSON..=)) (stagesAuthenticatorSmsListParametersQueryConfigureFlow obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryFriendly_name" Data.Aeson.Types.ToJSON..=)) (stagesAuthenticatorSmsListParametersQueryFriendlyName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryFrom_number" Data.Aeson.Types.ToJSON..=)) (stagesAuthenticatorSmsListParametersQueryFromNumber obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryMapping" Data.Aeson.Types.ToJSON..=)) (stagesAuthenticatorSmsListParametersQueryMapping obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryName" Data.Aeson.Types.ToJSON..=)) (stagesAuthenticatorSmsListParametersQueryName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryOrdering" Data.Aeson.Types.ToJSON..=)) (stagesAuthenticatorSmsListParametersQueryOrdering obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryPage" Data.Aeson.Types.ToJSON..=)) (stagesAuthenticatorSmsListParametersQueryPage obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryPage_size" Data.Aeson.Types.ToJSON..=)) (stagesAuthenticatorSmsListParametersQueryPageSize obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryProvider" Data.Aeson.Types.ToJSON..=)) (stagesAuthenticatorSmsListParametersQueryProvider obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("querySearch" Data.Aeson.Types.ToJSON..=)) (stagesAuthenticatorSmsListParametersQuerySearch obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryStage_uuid" Data.Aeson.Types.ToJSON..=)) (stagesAuthenticatorSmsListParametersQueryStageUuid obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryVerify_only" Data.Aeson.Types.ToJSON..=)) (stagesAuthenticatorSmsListParametersQueryVerifyOnly obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryAccount_sid" Data.Aeson.Types.ToJSON..=)) (stagesAuthenticatorSmsListParametersQueryAccountSid obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryAuth" Data.Aeson.Types.ToJSON..=)) (stagesAuthenticatorSmsListParametersQueryAuth obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryAuth_password" Data.Aeson.Types.ToJSON..=)) (stagesAuthenticatorSmsListParametersQueryAuthPassword obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryAuth_type" Data.Aeson.Types.ToJSON..=)) (stagesAuthenticatorSmsListParametersQueryAuthType obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryConfigure_flow" Data.Aeson.Types.ToJSON..=)) (stagesAuthenticatorSmsListParametersQueryConfigureFlow obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryFriendly_name" Data.Aeson.Types.ToJSON..=)) (stagesAuthenticatorSmsListParametersQueryFriendlyName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryFrom_number" Data.Aeson.Types.ToJSON..=)) (stagesAuthenticatorSmsListParametersQueryFromNumber obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryMapping" Data.Aeson.Types.ToJSON..=)) (stagesAuthenticatorSmsListParametersQueryMapping obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryName" Data.Aeson.Types.ToJSON..=)) (stagesAuthenticatorSmsListParametersQueryName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryOrdering" Data.Aeson.Types.ToJSON..=)) (stagesAuthenticatorSmsListParametersQueryOrdering obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryPage" Data.Aeson.Types.ToJSON..=)) (stagesAuthenticatorSmsListParametersQueryPage obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryPage_size" Data.Aeson.Types.ToJSON..=)) (stagesAuthenticatorSmsListParametersQueryPageSize obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryProvider" Data.Aeson.Types.ToJSON..=)) (stagesAuthenticatorSmsListParametersQueryProvider obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("querySearch" Data.Aeson.Types.ToJSON..=)) (stagesAuthenticatorSmsListParametersQuerySearch obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryStage_uuid" Data.Aeson.Types.ToJSON..=)) (stagesAuthenticatorSmsListParametersQueryStageUuid obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryVerify_only" Data.Aeson.Types.ToJSON..=)) (stagesAuthenticatorSmsListParametersQueryVerifyOnly obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON StagesAuthenticatorSmsListParameters where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "StagesAuthenticatorSmsListParameters" (\obj -> (((((((((((((((GHC.Base.pure StagesAuthenticatorSmsListParameters GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryAccount_sid")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryAuth")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryAuth_password")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryAuth_type")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryConfigure_flow")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryFriendly_name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryFrom_number")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryMapping")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryName")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryOrdering")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryPage")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryPage_size")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryProvider")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "querySearch")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryStage_uuid")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryVerify_only"))

-- | Create a new 'StagesAuthenticatorSmsListParameters' with all required fields.
mkStagesAuthenticatorSmsListParameters :: StagesAuthenticatorSmsListParameters
mkStagesAuthenticatorSmsListParameters =
  StagesAuthenticatorSmsListParameters
    { stagesAuthenticatorSmsListParametersQueryAccountSid = GHC.Maybe.Nothing,
      stagesAuthenticatorSmsListParametersQueryAuth = GHC.Maybe.Nothing,
      stagesAuthenticatorSmsListParametersQueryAuthPassword = GHC.Maybe.Nothing,
      stagesAuthenticatorSmsListParametersQueryAuthType = GHC.Maybe.Nothing,
      stagesAuthenticatorSmsListParametersQueryConfigureFlow = GHC.Maybe.Nothing,
      stagesAuthenticatorSmsListParametersQueryFriendlyName = GHC.Maybe.Nothing,
      stagesAuthenticatorSmsListParametersQueryFromNumber = GHC.Maybe.Nothing,
      stagesAuthenticatorSmsListParametersQueryMapping = GHC.Maybe.Nothing,
      stagesAuthenticatorSmsListParametersQueryName = GHC.Maybe.Nothing,
      stagesAuthenticatorSmsListParametersQueryOrdering = GHC.Maybe.Nothing,
      stagesAuthenticatorSmsListParametersQueryPage = GHC.Maybe.Nothing,
      stagesAuthenticatorSmsListParametersQueryPageSize = GHC.Maybe.Nothing,
      stagesAuthenticatorSmsListParametersQueryProvider = GHC.Maybe.Nothing,
      stagesAuthenticatorSmsListParametersQuerySearch = GHC.Maybe.Nothing,
      stagesAuthenticatorSmsListParametersQueryStageUuid = GHC.Maybe.Nothing,
      stagesAuthenticatorSmsListParametersQueryVerifyOnly = GHC.Maybe.Nothing
    }

-- | Defines the enum schema located at @paths.\/stages\/authenticator\/sms\/.GET.parameters.properties.queryAuth_type@ in the specification.
--
-- Represents the parameter named \'auth_type\'
data StagesAuthenticatorSmsListParametersQueryAuthType'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    StagesAuthenticatorSmsListParametersQueryAuthType'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    StagesAuthenticatorSmsListParametersQueryAuthType'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"basic"@
    StagesAuthenticatorSmsListParametersQueryAuthType'EnumBasic
  | -- | Represents the JSON value @"bearer"@
    StagesAuthenticatorSmsListParametersQueryAuthType'EnumBearer
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON StagesAuthenticatorSmsListParametersQueryAuthType' where
  toJSON (StagesAuthenticatorSmsListParametersQueryAuthType'Other val) = val
  toJSON (StagesAuthenticatorSmsListParametersQueryAuthType'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (StagesAuthenticatorSmsListParametersQueryAuthType'EnumBasic) = "basic"
  toJSON (StagesAuthenticatorSmsListParametersQueryAuthType'EnumBearer) = "bearer"

instance Data.Aeson.Types.FromJSON.FromJSON StagesAuthenticatorSmsListParametersQueryAuthType' where
  parseJSON val =
    GHC.Base.pure
      ( if
          | val GHC.Classes.== "basic" -> StagesAuthenticatorSmsListParametersQueryAuthType'EnumBasic
          | val GHC.Classes.== "bearer" -> StagesAuthenticatorSmsListParametersQueryAuthType'EnumBearer
          | GHC.Base.otherwise -> StagesAuthenticatorSmsListParametersQueryAuthType'Other val
      )

-- | Defines the enum schema located at @paths.\/stages\/authenticator\/sms\/.GET.parameters.properties.queryProvider@ in the specification.
--
-- Represents the parameter named \'provider\'
data StagesAuthenticatorSmsListParametersQueryProvider'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    StagesAuthenticatorSmsListParametersQueryProvider'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    StagesAuthenticatorSmsListParametersQueryProvider'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"generic"@
    StagesAuthenticatorSmsListParametersQueryProvider'EnumGeneric
  | -- | Represents the JSON value @"twilio"@
    StagesAuthenticatorSmsListParametersQueryProvider'EnumTwilio
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON StagesAuthenticatorSmsListParametersQueryProvider' where
  toJSON (StagesAuthenticatorSmsListParametersQueryProvider'Other val) = val
  toJSON (StagesAuthenticatorSmsListParametersQueryProvider'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (StagesAuthenticatorSmsListParametersQueryProvider'EnumGeneric) = "generic"
  toJSON (StagesAuthenticatorSmsListParametersQueryProvider'EnumTwilio) = "twilio"

instance Data.Aeson.Types.FromJSON.FromJSON StagesAuthenticatorSmsListParametersQueryProvider' where
  parseJSON val =
    GHC.Base.pure
      ( if
          | val GHC.Classes.== "generic" -> StagesAuthenticatorSmsListParametersQueryProvider'EnumGeneric
          | val GHC.Classes.== "twilio" -> StagesAuthenticatorSmsListParametersQueryProvider'EnumTwilio
          | GHC.Base.otherwise -> StagesAuthenticatorSmsListParametersQueryProvider'Other val
      )

-- | Represents a response of the operation 'stagesAuthenticatorSmsList'.
--
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'StagesAuthenticatorSmsListResponseError' is used.
data StagesAuthenticatorSmsListResponse
  = -- | Means either no matching case available or a parse error
    StagesAuthenticatorSmsListResponseError GHC.Base.String
  | StagesAuthenticatorSmsListResponse200 PaginatedAuthenticatorSMSStageList
  | StagesAuthenticatorSmsListResponse400 ValidationError
  | StagesAuthenticatorSmsListResponse403 GenericError
  deriving (GHC.Show.Show, GHC.Classes.Eq)
